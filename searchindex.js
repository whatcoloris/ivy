Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 29, 30, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 58, 59, 60, 101, 119, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 241, 243, 274, 280, 299, 304, 318, 390, 392, 402, 417, 420, 442, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 442], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 20, 32, 33, 34, 35, 40, 43, 44, 46, 48, 59, 60, 241, 281, 410, 411, 412, 413, 414, 442, 449, 450, 451, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 485, 486], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 36, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489], "base": [0, 19, 32, 33, 37, 43, 59, 82, 92, 101, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 181, 203, 214, 215, 216, 217, 229, 241, 265, 288, 295, 304, 422, 423, 424, 426, 430, 431, 449, 450, 451, 454, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "object": [0, 45, 48, 82, 88, 101, 118, 131, 304, 390, 393, 395, 397, 398, 399, 404, 405, 406, 407, 410, 416, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476], "__init__": [0, 1, 4, 5, 28, 38, 43, 45, 46, 47, 48, 101, 102, 103, 104, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 304, 305, 410, 411, 412, 413, 414, 442, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "choose_random_backend": 0, "exclud": [0, 2, 30, 43, 82, 83, 410, 414], "none": [0, 2, 5, 12, 28, 30, 33, 38, 39, 40, 41, 43, 45, 47, 48, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 113, 114, 115, 118, 119, 131, 140, 141, 149, 150, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 252, 253, 255, 259, 260, 262, 263, 268, 271, 275, 281, 283, 286, 287, 288, 289, 294, 295, 301, 304, 307, 309, 311, 312, 313, 319, 320, 325, 328, 330, 332, 334, 337, 338, 339, 340, 341, 350, 352, 355, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 422, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 452, 453, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "clear_backend_stack": 0, "current_backend": [0, 28, 33], "arg": [0, 4, 43, 45, 47, 131, 140, 155, 159, 163, 175, 241, 287, 452, 453, 475, 476], "kwarg": [0, 4, 43, 45, 47, 131, 140, 155, 159, 163, 241, 280, 452, 453, 475, 476], "return": [0, 4, 5, 12, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 400, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 452, 453, 463, 472, 473, 479, 483], "current": [0, 4, 5, 12, 16, 18, 20, 33, 39, 43, 48, 59, 60, 101, 112, 120, 130, 131, 140, 164, 165, 169, 171, 241, 264, 271, 275, 282, 284, 390, 391, 400, 401, 442], "prioriti": [0, 4, 19, 40], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 27, 28, 29, 30, 32, 33, 35, 36, 37, 43, 45, 46, 79, 80, 82, 83, 101, 123, 131, 140, 141, 155, 159, 163, 241, 243, 247, 255, 280, 287, 328, 331, 390, 396, 430, 437, 445, 447, 452, 453, 475, 476], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 27, 30, 32, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 81, 82, 93, 97, 98, 131, 150, 181, 230, 241, 245, 304, 307, 309, 311, 313, 341, 359, 360, 390, 396, 402, 430, 431, 436, 438, 442, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "paramet": [0, 4, 5, 28, 29, 32, 45, 46, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 447, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 82, 83, 84, 86, 88, 89, 90, 93, 94, 96, 100, 101, 110, 112, 123, 131, 140, 141, 150, 169, 175, 181, 207, 235, 241, 255, 262, 263, 298, 304, 307, 311, 320, 325, 328, 336, 339, 341, 345, 359, 363, 370, 375, 378, 381, 386, 387, 388, 389, 390, 392, 402, 403, 410, 411, 412, 413, 414, 417, 421, 422, 423, 425, 430, 435, 436, 437, 438, 439, 440, 441, 442, 448, 452, 453, 463, 471, 474, 479, 483], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 71, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 110, 111, 116, 118, 119, 120, 130, 131, 140, 141, 151, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 171, 173, 174, 175, 181, 230, 241, 252, 253, 255, 262, 263, 264, 270, 274, 282, 283, 284, 286, 287, 302, 304, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 322, 324, 328, 339, 340, 341, 343, 345, 350, 358, 359, 363, 364, 366, 368, 369, 370, 372, 375, 377, 379, 380, 382, 390, 395, 396, 397, 398, 403, 404, 405, 406, 407, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "try": [0, 4, 13, 15, 16, 18, 19, 36, 45, 60, 241, 301, 442], "infer": [0, 4, 27, 38, 39, 43, 48, 79, 80, 82, 83, 84, 86, 89, 90, 94, 96, 100, 181, 207, 241, 267, 292, 320, 325, 370, 378], "when": [0, 4, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 60, 101, 107, 131, 181, 185, 204, 229, 241, 247, 274, 295, 366, 367, 368, 369, 390, 401, 417, 418, 419, 421, 430, 432, 434, 436, 438, 475, 476], "global": [0, 4, 5, 6, 12, 33, 34, 38, 39, 43, 101, 113, 114, 115, 131, 140, 141, 173, 174, 175, 241, 265, 266, 285, 288, 289, 290, 294, 295, 408, 409, 477, 478], "set": [0, 4, 5, 6, 12, 14, 17, 27, 28, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 131, 150, 160, 161, 172, 173, 174, 175, 181, 189, 241, 242, 288, 289, 290, 291, 304, 307, 309, 310, 311, 312, 313, 341, 343, 350, 352, 355, 358, 390, 391, 400, 401, 402, 406, 407, 410, 415, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 436, 438, 463, 472, 479, 480, 481, 482, 483, 484], "ret": [0, 4, 5, 12, 28, 29, 43, 48, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 140, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 447, 452, 453, 479, 483], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 89, 90, 93, 95, 96, 99, 100, 101, 107, 131, 150, 151, 166, 167, 168, 169, 176, 178, 181, 185, 190, 192, 195, 197, 198, 203, 207, 208, 212, 223, 224, 226, 238, 241, 244, 245, 251, 266, 277, 292, 298, 299, 300, 320, 323, 324, 326, 327, 328, 329, 331, 333, 335, 341, 342, 343, 344, 345, 348, 352, 354, 359, 361, 362, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 424, 427, 428, 430, 431, 436, 437, 439, 440, 442], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 60, 82, 83, 85, 86, 87, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 107, 109, 123, 131, 150, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 214, 215, 217, 218, 220, 221, 225, 229, 230, 232, 233, 234, 235, 238, 240, 241, 274, 304, 307, 309, 311, 312, 313, 341, 342, 343, 350, 352, 355, 356, 358, 359, 363, 364, 366, 367, 368, 369, 370, 374, 375, 379, 380, 381, 382, 386, 387, 388, 390, 402, 403, 410, 413, 414, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "import": [0, 4, 15, 28, 29, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 48, 60, 320, 326, 442, 448], "numpi": [0, 4, 5, 6, 14, 15, 32, 38, 39, 40, 41, 43, 45, 48, 241, 299, 430, 431, 442], "np": [0, 4, 36, 38, 39, 40, 41, 45, 46, 48, 442], "x": [0, 4, 12, 20, 28, 29, 30, 33, 40, 41, 43, 45, 46, 47, 48, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 86, 88, 90, 93, 94, 96, 97, 98, 99, 100, 101, 107, 109, 116, 131, 150, 151, 152, 153, 156, 157, 169, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 223, 224, 226, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 270, 272, 273, 274, 276, 277, 278, 279, 283, 292, 296, 298, 299, 300, 302, 303, 304, 308, 310, 315, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 396, 400, 401, 402, 408, 409, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 463, 474], "arrai": [0, 4, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 60, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 116, 118, 119, 121, 122, 123, 131, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 171, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 282, 283, 284, 286, 287, 292, 296, 298, 299, 300, 302, 303, 304, 310, 315, 317, 318, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 392, 402, 403, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 463, 471, 474], "2": [0, 4, 18, 20, 30, 33, 42, 43, 45, 46, 47, 48, 60, 71, 73, 74, 75, 76, 78, 81, 82, 89, 90, 93, 95, 96, 100, 101, 107, 131, 150, 151, 167, 169, 176, 181, 185, 186, 188, 189, 192, 195, 198, 203, 207, 208, 212, 217, 223, 224, 226, 238, 241, 244, 245, 248, 249, 277, 292, 320, 321, 323, 324, 326, 327, 328, 331, 332, 333, 335, 341, 342, 343, 344, 345, 348, 349, 350, 352, 354, 355, 356, 359, 361, 362, 364, 366, 367, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 424, 427, 428, 430, 431, 439, 440, 442], "0": [0, 4, 28, 29, 30, 43, 45, 46, 47, 48, 71, 73, 74, 75, 76, 77, 78, 82, 83, 87, 91, 92, 96, 97, 98, 99, 100, 101, 107, 118, 131, 133, 136, 140, 143, 147, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 197, 198, 199, 203, 204, 205, 208, 214, 215, 217, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 238, 240, 241, 244, 245, 248, 249, 251, 252, 253, 262, 263, 268, 277, 283, 286, 287, 292, 298, 299, 304, 306, 307, 311, 312, 320, 323, 324, 326, 328, 329, 331, 333, 335, 341, 342, 343, 344, 345, 348, 359, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 390, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 433, 436, 437, 438, 439, 440, 442, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486], "print": [0, 4, 5, 6, 12, 18, 30, 33, 37, 43, 45, 46, 47, 71, 73, 74, 75, 76, 77, 78, 82, 89, 90, 93, 95, 96, 99, 100, 101, 107, 131, 151, 166, 167, 168, 169, 171, 178, 181, 185, 190, 192, 195, 197, 198, 203, 207, 208, 212, 223, 224, 226, 238, 241, 244, 245, 251, 266, 284, 292, 298, 299, 300, 320, 323, 324, 326, 327, 328, 329, 331, 333, 335, 341, 342, 343, 344, 345, 348, 354, 359, 361, 362, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 424, 427, 428, 430, 431, 436, 437, 439, 440, 442], "function": [0, 4, 5, 6, 14, 20, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 44, 45, 46, 47, 58, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 449, 450, 451, 479, 482, 484], "py": [0, 4, 5, 28, 29, 33, 38, 39, 41, 43, 45, 47, 48, 410, 411, 412, 413, 414], "noqa": [0, 4, 5, 82, 93, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 379], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 59, 71, 72, 73, 76, 78, 79, 80, 82, 83, 88, 92, 93, 97, 98, 101, 105, 106, 107, 111, 112, 117, 120, 130, 131, 140, 141, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 233, 234, 235, 238, 240, 241, 244, 247, 248, 254, 255, 261, 263, 272, 273, 274, 276, 277, 278, 279, 281, 286, 287, 288, 289, 290, 293, 294, 295, 303, 304, 306, 307, 309, 311, 312, 313, 315, 318, 320, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483], "set_backend": [0, 4, 5, 12, 33, 34, 35, 38], "ha": [0, 4, 5, 14, 15, 16, 19, 29, 30, 33, 34, 38, 39, 43, 45, 47, 48, 59, 60, 82, 93, 131, 150, 181, 182, 225, 229, 341, 349, 357, 358, 359, 362, 370, 374, 381, 422, 423, 424, 426, 430, 433, 435, 436, 437, 438], "over": [0, 4, 14, 16, 29, 30, 40, 45, 60, 341, 350, 361, 363, 364, 408, 409, 410, 414, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 477, 478], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 79, 80, 82, 84, 94, 181, 201, 208, 213, 241, 242, 255, 256, 257, 258, 259, 269, 276, 277, 278, 279, 294, 295, 304, 308, 328, 331, 390, 396, 400, 410, 414, 439, 442], "pass": [0, 4, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 45, 60, 101, 111, 131, 140, 175, 181, 189, 241, 247, 274, 304, 318, 386, 387, 388, 452, 453, 475, 476, 479, 483, 485, 486], "jax": [0, 4, 5, 6, 15, 16, 38, 39, 40, 41, 43, 45, 48, 60, 304, 310, 422, 423, 424, 426, 442], "get_backend": [0, 33], "specifi": [0, 5, 27, 32, 33, 38, 39, 40, 41, 43, 46, 47, 48, 82, 83, 85, 89, 91, 92, 95, 97, 98, 99, 101, 107, 109, 112, 131, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 171, 174, 175, 176, 181, 230, 241, 262, 263, 269, 302, 320, 326, 341, 345, 350, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 381, 382, 385, 390, 395, 397, 398, 404, 405, 406, 407, 417, 418, 419, 422, 423, 424, 426, 427, 428, 430, 431, 435, 437, 439, 440, 441], "isn": [0, 5, 19, 46, 60], "t": [0, 5, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 60, 241, 245, 328, 337, 338], "associ": [0, 5, 19, 33, 35, 60, 181, 185, 225, 341, 352, 355, 365], "option": [0, 5, 18, 28, 29, 30, 33, 38, 39, 40, 41, 43, 48, 60, 71, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 111, 113, 114, 115, 120, 130, 131, 150, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 249, 252, 253, 254, 260, 262, 263, 281, 283, 286, 287, 294, 295, 304, 315, 328, 331, 335, 340, 341, 350, 352, 355, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 390, 391, 396, 401, 402, 410, 411, 412, 413, 414, 417, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "str": [0, 5, 38, 39, 82, 93, 101, 105, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 131, 147, 150, 151, 156, 157, 158, 159, 175, 241, 254, 256, 257, 258, 281, 286, 287, 328, 329, 331, 333, 335, 341, 356, 390, 396, 430, 431], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 304, 308, 430, 431, 442, 448], "want": [0, 5, 15, 17, 19, 32, 46, 47, 48, 60, 430, 431], "retriev": [0, 5], "i": [0, 5, 19, 27, 43, 46, 48, 82, 83, 93, 181, 182, 189, 193, 195, 197, 205, 206, 209, 223, 224, 226, 229, 230, 241, 244, 245, 304, 307, 309, 311, 312, 313, 341, 343, 349, 352, 355, 358, 359, 362, 364, 370, 382, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438], "e": [0, 5, 15, 16, 19, 27, 33, 46, 60, 81, 82, 93, 101, 106, 123, 131, 147, 181, 182, 189, 193, 195, 197, 203, 205, 206, 209, 214, 216, 223, 224, 226, 229, 230, 304, 307, 309, 311, 312, 313, 341, 343, 349, 352, 355, 358, 359, 364, 370, 382, 410, 413, 414, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438], "one": [0, 5, 15, 16, 18, 19, 29, 30, 33, 36, 38, 40, 42, 45, 46, 48, 60, 82, 83, 93, 101, 108, 110, 112, 131, 160, 161, 162, 163, 175, 241, 280, 283, 286, 287, 341, 349, 350, 354, 356, 363, 364, 370, 374, 375, 381, 417, 418, 420, 422, 423, 424, 425, 426, 430, 431, 442], "default": [0, 5, 29, 30, 33, 38, 39, 41, 47, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 113, 114, 115, 116, 131, 140, 141, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 170, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 242, 248, 249, 252, 253, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 277, 279, 280, 281, 283, 285, 286, 287, 290, 292, 294, 295, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 350, 352, 355, 356, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 386, 387, 388, 389, 390, 391, 392, 396, 400, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "torch": [0, 5, 12, 28, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 79, 80, 442], "tensorflow": [0, 5, 12, 15, 16, 38, 39, 40, 41, 43, 48, 60, 442], "mxnet": [0, 5, 15, 38, 39, 40, 43, 48, 442], "either": [0, 5, 12, 19, 29, 30, 33, 34, 38, 39, 43, 45, 46, 60, 82, 88, 181, 185, 189, 210, 214, 215, 217, 218, 225, 230, 232, 233, 238, 241, 255, 276, 280, 281, 341, 349, 386, 387, 388, 389, 430, 435, 437, 463, 474, 475, 476], "doesn": [0, 5, 18, 30, 43, 60], "matter": [0, 5, 14, 30], "been": [0, 5, 29, 33, 34, 38, 39, 41, 43, 59, 60, 131, 150, 241, 256, 257, 258, 410, 411], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 71, 73, 74, 75, 76, 77, 78, 81, 101, 117, 131, 140, 141, 166, 170, 173, 174, 175, 178, 180, 181, 185, 208, 223, 224, 226, 238, 241, 265, 266, 280, 286, 287, 288, 289, 294, 295, 304, 306, 307, 311, 312, 328, 336, 337, 339, 340, 341, 344, 345, 350, 361, 366, 367, 370, 371, 374, 375, 377, 379, 386, 387, 388, 389, 390, 391, 393, 399, 400, 401, 403, 408, 409, 417, 420, 422, 423, 424, 430, 431, 439, 440, 442, 463, 471, 474, 475, 476, 477, 478, 479, 481, 482], "ivy_jax": [0, 5], "subsequ": [0, 6, 30, 32, 33, 36, 40, 41, 47], "call": [0, 6, 12, 15, 20, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 131, 175, 241, 285, 290, 301, 304, 308, 390, 391, 396, 400, 401, 463, 474, 475, 476, 479, 483], "nativ": [0, 6, 38, 40, 45, 46, 82, 94, 101, 105, 106, 111, 131, 147, 148, 149, 150, 151, 170, 177, 180, 241, 274, 276, 279, 452, 453], "native_arrai": [0, 6, 12, 30, 71, 73, 74, 75, 76, 77, 78, 82, 93, 181, 185, 208, 223, 224, 226, 238, 328, 331, 335, 341, 343, 344, 361, 366, 367, 369, 370, 371, 374, 375, 379, 380, 408, 409, 410, 411, 417, 420, 422, 424, 439, 440], "1": [0, 6, 12, 15, 16, 20, 30, 33, 40, 42, 43, 45, 46, 47, 48, 60, 71, 73, 74, 75, 76, 78, 82, 83, 90, 91, 92, 93, 95, 96, 100, 101, 107, 118, 131, 135, 138, 140, 145, 150, 151, 155, 159, 163, 168, 169, 174, 176, 181, 183, 184, 185, 186, 189, 192, 195, 197, 198, 199, 203, 204, 207, 208, 212, 214, 215, 216, 217, 223, 224, 226, 229, 232, 233, 238, 241, 244, 245, 251, 262, 263, 277, 283, 286, 287, 292, 295, 298, 299, 300, 302, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 342, 343, 344, 345, 348, 352, 354, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 402, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 424, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "type": [0, 6, 12, 18, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 147, 148, 149, 150, 151, 163, 164, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 274, 276, 277, 278, 279, 283, 286, 287, 288, 289, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 310, 315, 317, 320, 324, 326, 327, 328, 329, 331, 333, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 392, 396, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "ndarrai": [0, 6, 36, 38, 39, 40, 41, 45, 82, 84, 94, 241, 299], "Or": [0, 6, 46, 430, 431], "jaxlib": [0, 6, 18, 38, 39, 41, 45], "xla_extens": [0, 6, 38, 39, 41, 45], "devicearrai": [0, 6, 45], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 30, 40, 46, 47, 48, 101, 107, 110, 116, 131, 150, 151, 162, 166, 170, 175, 178, 180, 181, 207, 208, 209, 210, 211, 212, 220, 221, 241, 242, 244, 245, 252, 255, 259, 261, 267, 274, 276, 277, 279, 280, 292, 302, 304, 307, 308, 309, 310, 311, 312, 313, 341, 342, 350, 359, 364, 370, 380, 386, 387, 388, 389, 390, 391, 392, 396, 400, 401, 402, 403, 410, 411, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 452, 453, 475, 476, 479, 480, 481, 482, 483, 484], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 43, 45], "adjust": [0, 12, 430, 436, 438], "dict": [0, 12, 37, 46, 47, 131, 140, 141, 150, 156, 157, 158, 159, 241, 256, 257, 258, 390, 392, 393, 396, 399, 402, 403], "previous": [0, 12, 20, 32, 33, 43, 241, 247], "otherwis": [0, 12, 36, 38, 39, 41, 43, 45, 82, 83, 101, 107, 110, 113, 114, 115, 131, 150, 181, 209, 210, 211, 241, 246, 301, 304, 310, 315, 341, 342, 344, 363, 364, 386, 387, 388, 390, 403, 417, 418, 419, 421, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "implement": [0, 12, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 101, 107, 123, 181, 182, 183, 184, 186, 187, 188, 189, 198, 199, 203, 204, 214, 215, 216, 217, 225, 229, 230, 233, 234, 238, 341, 346, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 442], "wa": [0, 12, 15, 30, 43, 45, 241, 301, 390, 403, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "last": [0, 12, 16, 60, 71, 76, 131, 150, 320, 324, 328, 338, 341, 343, 345, 350, 362, 363, 366, 368, 369, 370, 375, 379, 380, 382, 427, 428, 429, 439, 440, 441, 463, 473], "henc": [0, 12, 422, 423, 424, 426], "here": [0, 12, 18, 28, 30, 41, 43, 44, 45, 46, 47, 48, 59, 60], "tensor": [0, 12, 14, 28, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 82, 91, 92, 101, 116, 181, 223, 224, 241, 283, 286, 287, 328, 336, 338, 341, 361, 370, 378, 380, 408, 409, 410, 411, 417, 419, 442, 463, 471, 473], "howev": [0, 12, 15, 18, 29, 30, 32, 33, 36, 38, 39, 40, 41, 45, 46, 47, 48, 60], "befor": [0, 12, 18, 19, 29, 32, 36, 38, 39, 40, 43, 46, 60, 131, 175, 181, 240, 328, 339, 340, 386, 387, 388, 390, 402, 422, 423, 424, 426, 430, 435, 437], "becom": [0, 12, 14, 16, 19, 30, 43, 48, 60, 370, 371], "swap": [0, 12, 370, 383], "python": [0, 12, 13, 14, 15, 18, 20, 43, 45, 46, 60, 82, 83, 131, 170, 180, 181, 230, 442, 448], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 39, 41, 42, 45, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489], "op": [0, 12, 28, 43, 60], "eagertensor": [0, 12], "def": [1, 28, 30, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 102, 103, 104, 132, 139, 142, 305, 442, 455, 458, 461], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 446, 447, 448, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489], "backend": [4, 5, 6, 12, 14, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 48, 101, 112, 120, 130, 131, 166, 168, 178, 241, 271, 274, 275, 281, 304, 307, 309, 311, 312, 313, 318, 442, 448, 452, 453, 479, 480, 481, 482, 483, 484], "ml": [13, 15, 16, 17, 42, 43, 44, 46, 47, 48, 59, 442, 448], "explos": [13, 15, 442], "A": [13, 14, 15, 16, 20, 27, 29, 32, 33, 37, 38, 39, 43, 46, 60, 82, 87, 94, 131, 140, 141, 175, 181, 228, 239, 241, 266, 298, 341, 345, 354, 357, 358, 359, 370, 380, 382, 390, 391, 393, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 430, 431, 439, 440, 441, 442, 485, 486], "huge": [13, 15, 46, 442], "number": [13, 14, 18, 30, 39, 40, 43, 46, 48, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 101, 108, 117, 118, 119, 121, 122, 123, 131, 167, 168, 169, 181, 185, 189, 197, 205, 206, 223, 224, 225, 229, 230, 232, 240, 241, 261, 266, 267, 282, 300, 303, 320, 324, 328, 339, 341, 346, 352, 357, 359, 363, 370, 371, 373, 376, 377, 379, 380, 382, 384, 385, 386, 387, 388, 389, 410, 411, 415, 417, 420, 422, 423, 424, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474], "tool": [13, 16, 44, 48, 59, 60, 442], "have": [13, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 71, 74, 82, 83, 85, 86, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 118, 131, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 249, 256, 257, 258, 260, 304, 310, 318, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 410, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "explod": [13, 14, 442], "onto": [13, 14, 131, 160, 161, 390, 396, 402, 442], "scene": [13, 14, 27, 42, 44, 304, 307, 309, 311, 312, 313, 442], "b": [13, 16, 17, 27, 30, 33, 34, 42, 43, 44, 46, 47, 48, 58, 181, 185, 208, 226, 238, 241, 244, 245, 328, 331, 335, 341, 342, 343, 344, 354, 358, 361, 365, 366, 367, 370, 374, 375, 377, 379, 382, 408, 409, 417, 420, 427, 428, 430, 431, 439, 440, 442, 448], "why": [13, 15, 19, 40, 41, 45, 442], "unifi": [13, 15, 36, 43, 60, 131, 160, 161, 162, 163, 175, 442], "should": [13, 15, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 79, 80, 82, 93, 97, 98, 101, 109, 131, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 225, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 247, 274, 283, 304, 307, 309, 311, 312, 313, 341, 342, 343, 344, 345, 348, 349, 352, 354, 355, 356, 358, 359, 361, 362, 363, 364, 370, 378, 410, 416, 417, 418, 419, 422, 423, 424, 426, 430, 431, 432, 433, 435, 436, 437, 438, 442], "them": [13, 14, 15, 16, 32, 34, 36, 37, 43, 45, 46, 47, 60, 442], "c": [13, 15, 16, 17, 27, 30, 33, 42, 43, 44, 46, 60, 241, 244, 245, 304, 306, 307, 309, 311, 312, 313, 370, 382, 417, 420, 430, 436, 438, 442, 448], "standard": [13, 27, 28, 29, 31, 32, 36, 40, 41, 60, 82, 93, 101, 118, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 377, 379, 408, 409, 410, 413, 422, 424, 427, 428, 430, 436, 438, 442, 448, 477, 478], "re": [13, 14, 15, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 60, 131, 175, 241, 256, 320, 321, 324, 341, 361, 370, 379, 442], "collabor": [13, 14, 15, 442], "consortium": [13, 15, 442, 448], "data": [13, 15, 27, 28, 29, 33, 35, 37, 39, 40, 41, 45, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 130, 131, 133, 134, 135, 136, 137, 138, 143, 144, 145, 147, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 276, 277, 279, 296, 304, 310, 318, 320, 324, 326, 328, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 370, 374, 375, 376, 378, 379, 381, 382, 410, 416, 417, 418, 419, 420, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448], "api": [13, 14, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 60, 82, 93, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428, 442, 448], "open": [14, 15, 16, 17, 18, 29, 59, 82, 83, 410, 412, 414, 442], "project": [14, 15, 16, 18, 19, 20, 28, 45, 47, 59, 60, 410, 411, 412, 413, 414], "grown": 14, "consider": [14, 30, 41], "recent": [14, 15], "year": [14, 16, 60, 442], "especi": 14, "deep": [14, 17, 19, 42, 46, 442], "learn": [14, 15, 18, 27, 33, 42, 48, 59, 181, 207, 304, 307, 309, 311, 312, 313, 386, 387, 388, 389, 442, 479, 480, 481, 482, 483, 484], "can": [14, 15, 16, 17, 19, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 82, 84, 94, 101, 110, 131, 173, 174, 175, 320, 322, 341, 348, 370, 378, 430, 431, 442, 448], "seen": [14, 15, 30, 45, 46], "rapidli": 14, "increas": [14, 131, 155, 159, 163, 370, 373, 385, 390, 402], "github": [14, 18, 19, 29, 32], "repo": [14, 15, 16, 18, 19, 31, 43, 45, 46, 47, 48, 59, 442, 448], "contain": [14, 18, 19, 20, 27, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 60, 71, 74, 75, 77, 82, 83, 86, 88, 95, 97, 98, 99, 131, 152, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 245, 248, 249, 269, 278, 320, 326, 328, 331, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 390, 403, 408, 409, 410, 411, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 479, 483, 485, 486], "term": [14, 19, 328, 338, 463, 473], "time": [14, 15, 16, 19, 32, 33, 38, 41, 43, 46, 48, 60, 304, 307, 311, 328, 338, 370, 384, 386, 387, 388, 389, 417, 418, 419, 422, 423, 424, 463, 474, 475, 476], "These": [14, 15, 16, 19, 29, 30, 32, 33, 37, 38, 40, 41, 43, 44, 46, 47, 48, 60, 341, 346, 442, 448], "ar": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 69, 82, 83, 131, 140, 141, 165, 169, 171, 175, 181, 198, 220, 221, 233, 238, 241, 242, 244, 245, 246, 264, 270, 271, 275, 282, 284, 296, 328, 337, 341, 343, 349, 350, 352, 355, 359, 360, 363, 370, 371, 375, 379, 390, 392, 396, 402, 410, 413, 414, 417, 418, 419, 420, 422, 423, 442, 485, 486], "written": [14, 28, 29, 36, 40, 41, 43, 45, 48, 60, 430, 431], "mani": [14, 15, 16, 18, 19, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 60, 370, 380], "differ": [14, 15, 16, 19, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 101, 118, 131, 152, 153, 156, 157, 181, 185, 225, 237, 328, 337, 370, 382, 430, 435, 437, 442], "while": [14, 15, 19, 30, 40, 47, 48, 60, 181, 220, 221, 422, 423, 430, 433], "thi": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 82, 83, 84, 93, 94, 131, 155, 159, 163, 170, 175, 180, 181, 182, 185, 195, 204, 220, 221, 223, 224, 230, 238, 241, 261, 274, 285, 290, 304, 307, 309, 310, 311, 312, 313, 318, 328, 331, 337, 341, 344, 350, 357, 370, 374, 375, 377, 378, 379, 382, 390, 396, 402, 403, 417, 418, 422, 423, 424, 426, 427, 428, 430, 431, 433, 436, 438, 442, 448, 475, 476, 479, 480, 481, 482, 483, 484], "wonder": [14, 16, 45], "thing": [14, 15, 16, 18, 19, 45, 46], "research": [14, 59], "develop": [14, 15, 16, 17, 18, 19, 59, 60, 442], "also": [14, 15, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 82, 93, 181, 185, 223, 224, 238, 241, 274, 304, 307, 328, 331, 337, 341, 344, 370, 374, 375, 377, 379, 386, 387, 388, 389, 390, 391, 392, 400, 401, 402, 422, 424, 427, 428, 463, 473], "consid": [14, 15, 28, 30, 33, 44, 45, 46, 181, 220, 221, 422, 423, 424, 426], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 71, 73, 74, 75, 76, 77, 78, 328, 335, 422, 424, 427, 428, 442, 448], "significantli": 14, "hinder": [14, 41], "librari": [14, 15, 16, 43, 48, 58, 60, 181, 204, 220, 221, 341, 346, 422, 423, 424, 426, 430, 432, 433, 434, 442], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 60, 427, 428, 429], "against": [14, 32, 60, 101, 108, 341, 349, 350, 352, 355, 417, 418], "newest": 14, "version": [14, 15, 16, 18, 29, 43, 45, 341, 346, 442], "For": [14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 82, 83, 93, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 304, 310, 318, 341, 359, 362, 370, 371, 382, 422, 423, 424, 426, 430, 431, 432, 434, 437, 452, 453], "softwar": [14, 15, 18, 19], "pipelin": [14, 20, 36, 48], "where": [14, 15, 16, 17, 18, 19, 29, 33, 36, 37, 38, 39, 40, 43, 46, 47, 48, 60, 82, 89, 90, 93, 181, 189, 203, 216, 225, 229, 241, 270, 274, 283, 341, 346, 352, 355, 356, 359, 360, 362, 363, 370, 371, 373, 374, 376, 382, 385, 390, 391, 401, 410, 411, 417, 420, 430, 436, 438, 439, 440, 441, 442], "rapid": [14, 15], "prototyp": 14, "vital": [14, 48], "signific": [14, 15, 60], "bottleneck": 14, "As": [14, 19, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 422, 423, 424, 426], "new": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 35, 38, 40, 42, 45, 48, 59, 82, 85, 88, 89, 90, 95, 96, 99, 100, 181, 190, 216, 228, 239, 241, 256, 257, 258, 261, 262, 263, 286, 287, 288, 289, 294, 295, 304, 307, 309, 311, 312, 313, 320, 322, 325, 327, 370, 374, 378, 382, 390, 395, 406, 407, 408, 409, 430, 431, 442, 452, 453, 463, 473, 477, 478, 479, 480, 481, 482, 483, 484], "futur": [14, 16, 19, 45, 60, 341, 346], "avail": [14, 18, 19, 29, 39, 60, 131, 150, 166, 167, 168, 178, 241, 257], "specif": [14, 18, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 59, 60, 101, 123, 131, 173, 181, 220, 221, 241, 256, 257, 258, 281, 341, 346, 361, 370, 382, 386, 387, 388, 389, 410, 411, 430, 432, 433, 434, 442, 445, 447, 448, 475, 476], "quickli": [14, 16, 19, 46, 47], "obsolet": [14, 16], "user": [14, 15, 18, 27, 32, 40, 42, 60, 463, 474, 475, 476], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 30, 42, 45, 46, 47, 48, 60, 442], "desir": [14, 101, 107, 110, 131, 176, 241, 270, 320, 326], "provid": [14, 18, 19, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43, 47, 59, 60, 79, 80, 82, 93, 101, 113, 114, 115, 120, 123, 130, 131, 150, 241, 255, 283, 287, 304, 307, 309, 311, 312, 313, 341, 363, 370, 375, 382, 417, 418, 430, 436, 438, 439, 440, 441, 463, 472, 479, 480, 481, 482, 483, 484], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 61, 69, 79, 80, 82, 83, 97, 98, 131, 140, 165, 171, 241, 242, 244, 245, 264, 284, 299, 328, 338, 341, 358, 361, 364, 370, 375, 379, 386, 387, 388, 389, 390, 391, 392, 401, 402, 403, 410, 411, 414, 439, 442, 445, 447], "modern": [14, 15], "simpl": [14, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 45, 47, 48, 60, 241, 259], "scalabl": [14, 43], "manner": [14, 28, 29, 39, 46, 59, 60, 390, 402], "must": [14, 16, 18, 19, 28, 29, 30, 33, 36, 38, 39, 43, 47, 48, 71, 74, 82, 83, 85, 86, 87, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 131, 160, 161, 162, 163, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 249, 260, 287, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 410, 415, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 479, 483], "determin": [14, 29, 33, 37, 38, 39, 101, 110, 111, 117, 120, 121, 122, 130, 131, 166, 167, 168, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 203, 204, 209, 210, 211, 214, 215, 217, 218, 222, 225, 229, 230, 233, 234, 235, 238, 241, 242, 244, 245, 269, 271, 275, 276, 277, 278, 279, 296, 303, 304, 310, 328, 339, 341, 342, 343, 344, 345, 348, 349, 352, 354, 355, 357, 358, 362, 363, 364, 386, 387, 388, 389, 422, 423, 424, 426, 439, 440, 441], "exactli": [14, 16, 30, 39, 442, 448], "common": [14, 30, 33, 35, 37, 39, 60], "ground": [14, 32], "li": 14, "between": [14, 30, 32, 33, 36, 37, 41, 42, 44, 45, 46, 48, 59, 82, 83, 101, 118, 181, 189, 229, 366, 367, 368, 369, 370, 374, 382, 390, 396, 410, 412, 422, 423, 424, 426, 442, 479, 481], "find": [14, 19, 43, 46, 422, 423, 424, 426, 442], "exist": [14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 43, 60, 241, 255, 479, 483], "essenti": [14, 15, 30, 33, 39], "order": [14, 18, 19, 20, 29, 30, 34, 36, 38, 39, 41, 45, 46, 48, 60, 181, 189, 304, 307, 309, 311, 312, 313, 341, 346, 350, 359, 360, 364, 370, 375, 386, 387, 388, 417, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 485, 486], "design": [14, 15, 27, 40, 43, 45, 60], "univers": 14, "abstract": [14, 37, 47, 60, 131, 146, 479, 483], "In": [14, 16, 18, 19, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 131, 170, 177, 180, 181, 185, 225, 230, 241, 274, 370, 378, 410, 414, 442], "search": [14, 28, 30, 32, 418, 419, 420, 421], "languag": [14, 16, 43], "first": [14, 15, 18, 19, 20, 30, 33, 36, 41, 43, 45, 46, 48, 79, 80, 82, 91, 92, 131, 150, 162, 181, 185, 191, 193, 194, 195, 196, 201, 206, 208, 212, 213, 218, 219, 221, 222, 225, 227, 229, 237, 241, 244, 304, 308, 341, 343, 345, 346, 349, 354, 356, 359, 361, 363, 370, 372, 379, 382, 383, 386, 387, 388, 389, 390, 391, 400, 401, 410, 416, 417, 418, 419, 422, 423, 424, 463, 474, 475, 476, 479, 483], "see": [14, 17, 19, 33, 37, 39, 41, 45, 46, 59, 60, 82, 83, 88, 91, 92, 101, 109, 123, 181, 185, 191, 193, 194, 195, 196, 200, 204, 212, 218, 221, 222, 225, 227, 229, 230, 237, 341, 352, 355, 358, 363, 364, 417, 419, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "clear": [14, 15, 16, 19, 30, 32, 38, 39, 43, 45, 131, 149], "front": [14, 42, 43, 46, 442, 448], "runner": 14, "look": [14, 19, 20, 28, 30, 33, 38, 39, 41, 43, 45, 47, 48], "littl": [14, 36, 45], "deeper": [14, 27, 42, 131, 155, 159, 163, 390, 401, 402], "follow": [14, 15, 18, 19, 20, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 60, 101, 119, 131, 175, 181, 230, 241, 272, 273, 274, 294, 295, 304, 307, 309, 311, 312, 313, 328, 339, 340, 341, 356, 364, 390, 396, 402, 422, 423, 424, 426, 430, 431, 442, 463, 473, 479, 483], "same": [14, 16, 18, 19, 28, 30, 32, 33, 36, 37, 39, 40, 41, 43, 45, 47, 48, 82, 83, 86, 90, 93, 96, 97, 98, 100, 101, 107, 108, 109, 131, 140, 141, 175, 181, 182, 185, 192, 197, 205, 225, 230, 231, 232, 240, 241, 260, 262, 263, 283, 286, 287, 304, 310, 315, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 353, 355, 356, 358, 359, 362, 363, 370, 372, 375, 376, 379, 381, 382, 386, 387, 388, 390, 403, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 442, 463, 464, 465, 466, 467, 468, 469, 470], "core": [14, 39, 43, 48, 131, 167, 442], "principl": 14, "oper": [14, 18, 30, 33, 36, 37, 39, 40, 41, 46, 47, 82, 91, 92, 101, 123, 181, 185, 195, 208, 226, 230, 241, 246, 256, 257, 258, 296, 304, 307, 309, 311, 312, 313, 328, 329, 330, 331, 332, 333, 334, 335, 337], "expos": [14, 43, 47, 241, 250], "almost": [14, 19, 37, 44, 46], "ident": [14, 16, 33, 35, 45, 46, 60, 390, 403, 442], "uniqu": [14, 33, 60, 131, 140, 141, 386, 387, 388, 389, 390, 396, 422, 423, 424, 425, 426], "syntax": [14, 15], "There": [14, 19, 30, 33, 36, 37, 38, 43, 46, 60, 430, 431], "onli": [14, 17, 18, 19, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 131, 181, 220, 221, 341, 349, 356, 370, 375, 390, 391, 392, 400, 401, 417, 418, 419, 430, 433, 442, 479, 480, 481, 482, 483, 484], "so": [14, 15, 18, 19, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 69, 390, 391, 401, 442], "wai": [14, 15, 40, 45, 46, 47, 48, 60, 430, 431], "manipul": [14, 28, 48, 59, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "unsurprisingli": [14, 30], "fundament": [14, 43], "consist": [14, 36, 40, 131, 163, 341, 346, 430, 431, 475, 476], "each": [14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 60, 71, 74, 75, 77, 82, 93, 101, 108, 131, 140, 141, 152, 153, 154, 155, 156, 157, 158, 162, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 304, 307, 309, 311, 312, 313, 320, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 342, 343, 344, 346, 349, 352, 353, 355, 358, 359, 370, 373, 377, 379, 380, 382, 384, 385, 390, 396, 403, 410, 411, 417, 420, 422, 423, 424, 430, 431, 442, 448, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "veri": [14, 15, 19, 28, 30, 32, 33, 39, 40, 41, 44, 46, 47, 48, 60, 442], "similar": [14, 28, 37, 38, 39, 46, 60, 181, 230, 328, 339, 463, 474], "convent": [14, 59, 341, 349, 430, 431], "those": [14, 19, 33, 37, 38, 39, 40, 43, 48, 82, 83, 304, 318, 341, 356, 359, 370, 371], "introduc": [14, 46, 370, 379], "2006": 14, "layer": [14, 28, 29, 43, 44, 47, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 408, 409, 442, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "therefor": [14, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 45, 47, 60, 328, 331], "present": [14, 31, 33, 38, 39, 40, 41, 43], "itself": [14, 19, 37, 40, 41, 47, 59, 60, 390, 402], "cut": 14, "cloth": 14, "adher": [14, 15, 29, 31, 43, 48], "semant": [14, 43, 48, 181, 230], "round": [14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 181, 185, 197, 205, 206, 225, 235, 240, 442], "up": [14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60], "hopefulli": [14, 15, 16, 18, 19, 20, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "paint": [14, 43], "pictur": [14, 43], "how": [14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 442, 448, 463, 474, 475, 476], "pleas": [14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "check": [14, 15, 16, 18, 19, 37, 42, 43, 45, 46, 47, 48, 59, 101, 111, 120, 130, 131, 170, 180, 241, 246, 259, 269, 276, 277, 278, 279, 296, 303, 304, 310, 341, 346, 390, 391, 400, 401, 402, 442], "out": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 59, 71, 73, 74, 82, 83, 131, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 252, 253, 260, 262, 328, 336, 338, 341, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 408, 409, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 463, 471], "discuss": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 442], "faq": [14, 15, 16, 43, 45, 46, 47, 48, 59], "reach": [14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 131, 155, 159, 163, 390, 402], "discord": [14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "you": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 442, 448], "question": [14, 15, 16, 18, 19, 30, 32, 43, 45, 46, 47, 48, 59, 60], "With": [15, 16, 30, 32, 43, 71, 73, 74, 75, 76, 77, 78, 82, 93, 181, 185, 208, 223, 224, 226, 238, 241, 245, 328, 331, 335, 341, 342, 343, 344, 350, 361, 366, 367, 369, 370, 371, 374, 375, 377, 379, 380, 408, 409, 410, 411, 417, 418, 420, 422, 424, 427, 428, 439, 440], "central": 15, "goal": 15, "being": [15, 16, 19, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 46, 59, 60, 82, 83, 241, 285, 290, 422, 425, 442], "would": [15, 18, 19, 27, 29, 30, 32, 33, 35, 36, 40, 41, 42, 43, 45, 47, 48, 60, 71, 76], "entir": [15, 16, 19, 30, 31, 32, 36, 37, 40, 45, 46, 47, 48, 60, 131, 175, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 472], "forgiven": 15, "rais": [15, 19, 40, 43, 45, 101, 109, 181, 203, 229, 241, 246, 265, 274, 288, 295, 301, 341, 349, 351, 363, 370, 381, 382, 417, 420, 430, 432, 434, 439, 440, 441, 475, 476, 479, 483], "an": [15, 16, 18, 19, 20, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 71, 74, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 118, 121, 122, 123, 131, 153, 157, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 247, 248, 249, 251, 260, 261, 270, 274, 276, 277, 278, 279, 299, 300, 301, 304, 310, 315, 317, 318, 320, 322, 326, 327, 328, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 362, 363, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 396, 410, 412, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 452, 453, 475, 476, 479, 480, 481, 483], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 33, 38, 39, 40, 41, 43, 45, 48, 60, 304, 307, 309, 311, 312, 313, 442, 479, 480, 481, 482, 483, 484], "other": [15, 18, 19, 28, 29, 30, 32, 33, 36, 37, 40, 43, 45, 47, 48, 58, 59, 60, 79, 80, 82, 83, 181, 204, 241, 242, 304, 308, 410, 414, 422, 425, 430, 436, 438, 442], "strong": [15, 60], "industri": 15, "back": [15, 36, 40, 42, 43, 45, 60, 442, 448, 475, 476, 479, 483], "momentum": 15, "won": [15, 16, 48], "ad": [15, 18, 19, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 47, 60, 241, 294, 295, 341, 346, 370, 374, 485, 486], "just": [15, 16, 19, 29, 30, 32, 33, 43, 45, 46, 60, 430, 431, 463, 472], "make": [15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 131], "problem": [15, 19, 36, 45], "even": [15, 16, 19, 29, 33, 38, 39, 45, 46, 47, 48, 60, 181, 229], "wors": 15, "rather": [15, 28, 32, 37, 39, 48, 60, 82, 83, 131, 175, 241, 276, 277, 279, 304, 310], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 33], "feasibl": 15, "space": [15, 82, 83, 91, 92, 241, 261], "case": [15, 18, 19, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 60, 82, 93, 131, 170, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 232, 233, 234, 235, 238, 240, 241, 274, 286, 287, 341, 350, 370, 378, 390, 393, 399, 430, 432, 433, 434, 436, 437, 438, 463, 474, 475, 476, 479, 483], "unlik": [15, 30, 37, 131], "charger": 15, "charact": 15, "encod": [15, 46, 241, 261, 320, 322], "instant": [15, 442], "messag": [15, 19, 43, 45, 488, 489], "much": [15, 18, 19, 28, 36, 37, 40, 43, 45, 46], "doe": [15, 19, 20, 27, 28, 29, 30, 32, 33, 34, 35, 38, 40, 41, 43, 45, 46, 60, 241, 274, 370, 380], "mandat": [15, 32, 40], "adopt": [15, 19, 36], "continu": [15, 16, 31, 32, 60], "own": [15, 16, 29, 43, 60], "signatur": [15, 28, 29, 30, 38, 39, 40, 41, 370, 374, 422, 424, 427, 428], "replac": [15, 20, 32, 35, 38, 39, 43, 45, 48, 60, 241, 286, 287, 370, 371, 410, 411], "your": [15, 16, 17, 18, 28, 29, 46, 47, 60, 442], "10": [15, 20, 30, 33, 43, 45, 46, 82, 89, 92, 131, 181, 192, 208, 215, 241, 285, 290, 304, 311, 341, 344, 354, 361, 370, 375, 377, 380, 410, 411, 412, 417, 420, 430, 431, 479, 481], "100": [15, 16, 46, 47, 48, 60, 442], "despit": [15, 33, 39], "distinct": [15, 29, 40, 42, 422, 423, 424, 426, 442], "still": [15, 29, 32, 38, 45, 47, 60, 442], "believ": [15, 19], "share": [15, 30, 32, 33, 34, 37, 43], "bring": [15, 43, 44], "benefit": [15, 16, 19, 36, 37, 40, 45, 46, 60], "unrel": [15, 19], "what": [15, 16, 27, 29, 30, 37, 41, 42, 43, 45, 46, 47, 48, 59, 60, 442], "again": [15, 16, 19, 28, 30, 37, 40, 46, 48, 60], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 46], "most": [15, 18, 19, 28, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 341, 346], "technolog": 15, "sector": [15, 181, 184, 187, 190], "full": [15, 16, 19, 29, 38, 41, 43, 60, 82, 101, 118, 181, 208, 341, 356, 358, 359, 408, 409], "success": 15, "reason": [15, 19, 28, 30, 33, 36, 37, 38, 40, 43, 45, 181, 230], "build": [15, 17, 18, 33, 42, 44, 47, 48, 60, 422, 423, 424, 426, 442, 463, 474, 475, 476], "custom": [15, 47], "comput": [15, 16, 33, 43, 46, 60, 131, 175, 181, 185, 191, 194, 196, 201, 202, 207, 208, 212, 213, 219, 220, 221, 222, 225, 226, 227, 241, 248, 249, 252, 253, 304, 306, 307, 308, 309, 311, 312, 313, 315, 317, 320, 323, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 343, 346, 347, 348, 349, 350, 356, 357, 358, 359, 363, 364, 366, 367, 368, 369, 390, 396, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438], "thank": [15, 46], "interoper": 15, "compon": [15, 43], "bio": [15, 18], "hardwar": 15, "initi": [15, 19, 38, 39, 131, 328, 338, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 479, 483], "pcie": 15, "interfac": [15, 48, 60], "motherboard": 15, "raid": 15, "storag": [15, 46], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 33, 47, 48, 82, 84, 94, 97, 98, 304, 307, 309, 311, 312, 313, 328, 341, 342, 344, 345, 346, 347, 348, 352, 353, 355, 356, 358, 359, 360, 362, 390, 392, 402], "factor": [15, 131, 140, 173, 174, 175, 304, 306, 307, 311, 312, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 463, 464, 465, 466, 467, 468, 469, 470, 479, 480, 481, 482], "sata": 15, "connect": [15, 18, 47, 48, 463, 473, 474], "host": [15, 60], "bu": 15, "adapt": [15, 304, 312, 479, 482], "devic": [15, 27, 28, 33, 35, 38, 45, 46, 60, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 241, 262, 263, 283, 286, 287, 410, 411, 412, 413, 414, 452, 453, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "html": [15, 20, 29, 370, 374, 422, 424, 427, 428], "enabl": [15, 18, 19, 32, 33, 36, 37, 40, 42, 43, 44, 46, 48, 60], "anyon": [15, 17, 60], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 33, 390, 391, 400, 401], "commun": [15, 17, 19, 60, 442, 448], "network": [15, 33, 37, 43, 47, 59, 328, 337, 442, 449, 463, 475, 476], "smtp": 15, "possibl": [15, 17, 18, 19, 29, 30, 32, 38, 40, 43, 46, 59, 60, 241, 280, 298, 320, 326, 430, 432, 434], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 81, 101, 118, 181, 185, 204, 225, 230, 235], "754": [15, 81, 101, 118, 181, 185, 204, 225, 230, 235], "allow": [15, 43, 60, 82, 91, 92, 241, 280, 430, 431, 475, 476], "calcul": [15, 29, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 199, 200, 203, 204, 214, 215, 216, 217, 218, 225, 229, 233, 234, 235, 237, 238, 366, 367, 368, 369, 430, 432, 433, 434, 435, 436, 437, 438], "live": [15, 16], "depend": [15, 18, 19, 29, 35, 38, 43, 60, 101, 107, 181, 182, 183, 184, 186, 187, 188, 189, 198, 199, 203, 204, 214, 215, 216, 217, 229, 233, 234, 238, 341, 346, 356, 358, 359, 417, 421, 427, 428, 429], "did": [15, 48], "aris": [15, 60], "until": [15, 19, 60, 442], "substanti": [15, 19, 32, 36], "innov": 15, "growth": 15, "usag": [15, 43, 131, 175], "relev": [15, 30, 38, 46, 479, 480, 481, 482, 483, 484], "area": [15, 40, 58, 181, 184, 187, 190, 442], "necess": 15, "parti": [15, 60], "could": [15, 16, 30, 32, 38, 40, 43, 45, 46, 47, 422, 423, 424, 426], "easili": [15, 19, 46, 47, 48, 60, 442], "engag": [15, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "regard": [15, 131], "effect": [15, 29, 36, 41, 60, 82, 93, 304, 313, 430, 436, 438], "2015": 15, "sinc": [15, 60], "alongsid": 15, "machin": [15, 18, 33, 59, 101, 118, 119, 181, 207, 341, 352, 355], "given": [15, 16, 18, 19, 20, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48, 59, 82, 83, 85, 91, 92, 131, 164, 170, 172, 173, 174, 175, 177, 180, 241, 252, 253, 263, 286, 287, 302, 304, 306, 307, 309, 311, 312, 313, 328, 329, 330, 331, 332, 333, 334, 335, 341, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 379, 380, 384, 390, 397, 398, 410, 412, 413, 414, 416, 427, 429, 452, 453], "frame": [15, 59], "less": [15, 19, 30, 41, 42, 43, 181, 183, 184, 186, 189, 197, 214, 215, 217, 229, 230, 232, 235, 341, 352, 355, 364, 410, 414, 430, 438], "matur": [15, 60], "state": [15, 29, 42, 43, 44, 46, 59, 181, 225, 328, 338, 442, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "than": [15, 19, 28, 30, 32, 33, 37, 39, 40, 43, 46, 47, 48, 60, 82, 83, 101, 118, 131, 175, 181, 183, 184, 186, 189, 193, 195, 197, 205, 206, 214, 215, 217, 223, 229, 230, 232, 235, 240, 241, 276, 277, 279, 304, 310, 341, 343, 349, 352, 355, 364, 370, 371, 375, 381, 410, 414, 422, 423, 424, 426, 430, 431, 435, 436, 437, 438], "preced": [15, 47], "mention": [15, 18, 19, 30, 33, 41], "aros": 15, "70": [15, 341, 342, 354, 430, 431], "80": [15, 341, 354, 430, 431], "90": [15, 341, 354, 430, 431], "effort": [15, 17, 60], "stage": [15, 17, 19, 20, 27, 442], "complet": [15, 19, 36, 37, 45, 46, 341, 356], "natur": [15, 30, 36, 59, 181, 203, 214, 216, 341, 357], "like": [15, 18, 19, 27, 28, 29, 30, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 304, 310, 410, 414, 430, 431, 442], "certainli": 15, "mission": [15, 442], "creat": [15, 17, 19, 20, 38, 39, 40, 43, 44, 47, 58, 59, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 100, 131, 140, 141, 241, 262, 263, 283, 286, 287, 298, 304, 317, 410, 411, 412, 414, 430, 431, 442, 448, 452, 453, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "At": 15, "process": [15, 16, 17, 19, 20, 33, 43, 48, 131, 140, 141, 170, 180], "ourselv": 15, "lead": [15, 16, 60, 341, 356, 359], "quansight": 15, "compani": 15, "made": [15, 19, 40, 43, 45], "organ": [15, 28, 33, 36, 37], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 422, 423, 424, 426], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 43, 48], "sympi": 15, "rai": [15, 181, 189], "modin": 15, "spyder": 15, "includ": [15, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 59, 60, 82, 83, 84, 94, 241, 269, 303, 341, 364, 390, 391, 410, 414, 417, 419, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 447, 463, 473, 474, 477, 478], "member": [15, 19], "googl": [15, 442], "octoml": 15, "einop": [15, 241, 256, 257, 258], "further": [15, 16, 19, 20, 30, 36, 42, 46, 47, 442], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 27, 33, 46, 241, 245, 320, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 345, 354, 442, 448], "shaw": 15, "co": [15, 43, 59, 181, 241, 261, 442], "intel": 15, "togeth": [15, 33, 36, 47, 48, 60, 485, 486], "major": [15, 38, 39, 60, 417, 420], "involv": [15, 17, 20, 27, 38, 48, 101, 123, 181, 185, 225, 442, 448], "anoth": [15, 19, 33, 38, 45, 48, 82, 88, 101, 108, 110, 112], "promis": 15, "sign": [15, 18, 44, 48, 82, 83, 181, 182, 185, 189, 195, 225, 230, 341, 357, 422, 423, 424, 426, 430, 435, 437], "pursuit": 15, "unif": [15, 17, 45, 442, 448], "clearli": [15, 30], "lot": [15, 16, 35, 45, 60], "thought": [15, 18, 19, 41], "care": [15, 19, 48], "attent": [15, 19, 36, 328, 339, 340, 463, 474], "gone": [15, 42], "simplifi": [15, 43, 44, 45, 47], "compat": [15, 60, 101, 109, 181, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 208, 212, 213, 218, 219, 221, 222, 225, 227, 229, 230, 237, 341, 352, 355, 358, 361, 363, 364, 370, 378, 417, 419, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "excit": [15, 17, 27, 442], "complianc": 15, "hope": [15, 60], "due": [15, 40, 181, 225], "suit": [15, 27, 31, 32, 46, 59], "some": [15, 16, 18, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 59, 60, 181, 204, 304, 306, 307, 309, 311, 312, 313, 318, 328, 336, 442, 463, 471], "motiv": [15, 45], "great": [15, 16, 32, 43, 45], "convinc": 15, "celebr": 15, "encourag": [15, 59, 60, 442, 448], "foundat": 15, "point": [16, 19, 29, 30, 36, 40, 41, 43, 45, 46, 59, 81, 82, 83, 85, 87, 89, 95, 99, 101, 107, 118, 121, 123, 181, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 199, 200, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 341, 342, 344, 346, 347, 348, 352, 355, 356, 358, 359, 364, 422, 423, 424, 426, 430, 432, 433, 434, 435, 436, 437, 438], "mai": [16, 18, 45, 47, 82, 83, 88, 181, 201, 208, 213, 220, 221, 241, 255, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434], "ask": [16, 19, 43, 45, 60], "perfectli": 16, "happi": [16, 18, 60], "abund": 16, "better": [16, 27, 42, 45, 46, 47], "ll": [16, 17, 19, 30, 40, 46], "give": [16, 19, 27, 29, 30, 41, 45, 370, 378, 430, 431], "two": [16, 30, 32, 36, 42, 46, 48, 82, 83, 87, 93, 97, 98, 181, 195, 241, 244, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 370, 383, 422, 423, 424, 425, 426, 430, 431, 442], "streamlin": 16, "workflow": [16, 46, 58, 442], "save": [16, 60, 241, 291, 320, 322, 475, 476], "week": [16, 442], "let": [16, 30, 38, 39, 43, 45, 46, 47, 48, 430, 431, 433, 436, 437, 438, 442], "sai": [16, 35, 45], "deepmind": 16, "releas": [16, 18, 442], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 40, 46, 430, 436, 438], "perceiverio": 16, "happen": [16, 19, 46], "slew": 16, "rush": 16, "f": [16, 27, 33, 43, 46, 48, 181, 207, 241, 271, 275, 320, 325], "g": [16, 27, 33, 60, 101, 106, 123, 131, 147, 410, 413, 414, 422, 423, 424, 426, 430, 432, 434, 435, 437], "inevit": 16, "deviat": [16, 408, 409, 410, 413, 430, 436, 477, 478], "origin": [16, 34, 35, 38, 43, 45, 181, 189, 341, 350, 370, 378, 379], "often": [16, 33, 60], "erron": 16, "train": [16, 33, 37, 39, 46, 47, 48, 58, 59, 60, 304, 306, 307, 311, 442], "poor": 16, "converg": 16, "perform": [16, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 43, 46, 60, 71, 76, 82, 91, 92, 131, 241, 252, 256, 257, 258, 272, 273, 274, 304, 307, 309, 311, 312, 313, 320, 321, 324, 328, 336, 338, 341, 359, 386, 387, 388, 389, 390, 397, 398, 439, 440, 441], "issu": [16, 17, 43, 45, 47, 60], "etc": [16, 18, 19, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 60, 82, 91, 92, 241, 262, 263, 283, 286, 287, 410, 411, 412, 414, 422, 423, 424, 426, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "publish": [16, 60], "manag": [16, 17, 40, 60, 131], "get": [16, 17, 18, 27, 33, 38, 39, 40, 43, 44, 45, 46, 47, 101, 116, 117, 118, 119, 131, 140, 141, 150, 151, 164, 165, 170, 174, 177, 180, 241, 243, 264, 265, 266, 285, 442, 448, 463, 472], "work": [16, 18, 19, 27, 32, 38, 39, 42, 43, 44, 45, 47, 48, 442, 448], "repositori": [16, 18, 19, 31], "pull": [16, 17, 18, 28, 60], "request": [16, 17, 28], "confus": [16, 40], "do": [16, 18, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 181, 230, 241, 274, 304, 310, 318, 390, 391, 400, 401, 402, 430, 431], "don": [16, 19, 47, 60], "expect": [16, 60, 241, 243, 442], "codebas": [16, 17, 27, 28, 40, 42, 131, 173, 174, 442], "total": [16, 17, 19, 30, 32, 39, 46, 47, 60, 131, 177, 417, 420, 430, 436, 438], "hour": 16, "spent": 16, "spin": 16, "off": [16, 42, 341, 345, 362], "test": [16, 18, 27, 30, 60, 101, 121, 122, 181, 209, 210, 211, 439, 440, 441], "error": [16, 18, 32, 36, 39, 45, 60, 71, 72, 131, 181, 202, 430, 432, 434, 475, 476, 479, 483], "iter": [16, 37, 43, 46, 79, 80, 131, 154, 156, 157, 158, 159, 162, 175, 241, 242, 287, 292, 370, 373, 377, 380, 384, 385, 390, 391, 392, 396, 400, 401, 402], "address": [16, 19, 36, 43], "sake": 16, "singl": [16, 28, 30, 32, 33, 35, 37, 40, 41, 43, 46, 47, 48, 60, 131, 140, 141, 160, 161, 162, 163, 241, 300, 303, 410, 413, 414, 422, 423], "multipl": [16, 19, 30, 33, 37, 60, 181, 225, 241, 280, 341, 348, 370, 380, 408, 409, 417, 418, 419, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 473], "line": [16, 18, 19, 30, 36, 44, 45, 46, 47, 58, 442, 448], "convert": [16, 36, 40, 43, 60, 61, 69, 82, 84, 94, 101, 105, 106, 112, 131, 147, 148, 149, 150, 170, 177, 180, 241, 293, 299, 300, 320, 322, 327, 341, 365, 390, 392, 402, 453], "directli": [16, 19, 28, 29, 33, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 59, 60, 390, 402], "graph": [16, 33, 44, 60, 304, 307, 309, 311, 312, 313, 422, 423, 424, 426, 475, 476], "guarante": [16, 36, 60, 422, 423], "turn": [16, 30], "4": [16, 20, 30, 33, 43, 45, 46, 47, 48, 71, 73, 74, 76, 82, 90, 93, 96, 100, 181, 185, 189, 208, 223, 224, 226, 238, 241, 245, 261, 320, 322, 323, 324, 327, 328, 331, 332, 333, 335, 338, 341, 343, 344, 345, 348, 352, 354, 361, 362, 366, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 408, 409, 410, 411, 416, 417, 420, 422, 424, 427, 428, 430, 431, 439, 440, 442, 479, 480, 481, 482, 484], "step": [16, 18, 19, 20, 30, 34, 36, 38, 39, 43, 46, 47, 48, 59, 82, 83, 91, 92, 131, 304, 306, 307, 309, 311, 312, 313, 386, 387, 388, 389, 442, 479, 480, 481, 482, 483, 484], "take": [16, 17, 19, 30, 32, 33, 38, 39, 43, 45, 47, 48, 60, 320, 324, 442, 448], "few": [16, 19, 33, 37, 38, 39, 40, 44, 45, 46, 47, 58, 442, 448], "second": [16, 30, 40, 45, 131, 162, 181, 185, 191, 193, 194, 195, 196, 201, 206, 208, 212, 213, 218, 219, 221, 222, 225, 227, 229, 237, 241, 244, 285, 290, 304, 306, 307, 311, 341, 343, 345, 346, 349, 354, 356, 359, 361, 363, 370, 382, 383, 386, 388, 422, 423, 424, 479, 480, 481], "automat": [16, 18, 19, 33, 37, 41, 42, 43, 44, 47, 48, 442], "convers": [16, 42, 44, 48, 59, 60, 442, 448], "everyon": [16, 17, 19, 60], "regardless": [16, 17, 45, 48, 79, 80], "wouldn": 16, "nice": [16, 32], "write": [16, 19, 20, 27, 28, 29, 30, 32, 33, 34, 40, 43, 45, 48, 71, 74, 131, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 249, 253, 260, 262, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "onc": [16, 18, 19, 37, 38, 39, 43, 46, 60, 131, 175, 341, 348, 359, 410, 411], "know": [16, 422, 423, 424, 426], "among": [16, 32], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 33, 43], "understand": [16, 18, 19, 20, 27, 29, 30, 31, 41, 42], "pattern": [16, 38, 241, 256, 257, 258], "hasn": 16, "chang": [16, 19, 29, 31, 32, 43, 47, 60, 131, 341, 343, 370, 378, 390, 392, 402, 442, 448], "now": [16, 18, 28, 35, 38, 41, 45, 46, 48, 59, 60, 430, 431, 463, 474, 475, 476], "spend": 16, "torchvis": 16, "probabl": [16, 328, 336, 410, 411, 463, 471], "sonnet": 16, "about": [16, 19, 42, 43, 47, 48, 60, 101, 118, 119], "next": [16, 18, 19, 29, 30, 34, 35, 45, 46, 101, 118, 442, 475, 476, 479, 480, 481, 482, 483, 484], "everyth": [16, 19, 44, 60], "zero": [16, 30, 38, 39, 41, 43, 46, 47, 71, 73, 74, 82, 85, 87, 93, 97, 98, 100, 101, 107, 181, 185, 193, 204, 220, 221, 223, 224, 225, 226, 229, 230, 238, 241, 283, 286, 287, 304, 306, 307, 311, 312, 328, 336, 341, 344, 349, 352, 355, 363, 364, 370, 374, 375, 377, 379, 385, 417, 418, 419, 420, 422, 423, 424, 426, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 454, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 479, 480, 481, 482], "need": [16, 19, 28, 29, 30, 31, 33, 36, 40, 43, 45, 46, 59, 60, 241, 248, 249, 370, 371, 374], "said": 16, "high": [16, 46, 410, 412, 414], "level": [16, 17, 33, 42, 43, 46, 47, 48, 60], "optim": [16, 40, 44, 46, 48, 59, 131, 304, 307, 309, 311, 312, 313, 386, 387, 388, 389, 442, 480, 481, 482, 484], "trainer": [16, 58, 60, 442], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 48], "flax": [16, 48, 60], "trax": [16, 48], "objax": [16, 48], "idea": [16, 59], "fulli": [16, 36, 41, 43, 44, 45, 46, 47, 48, 60, 463, 473, 474], "offer": [16, 47], "strongli": [17, 442, 448], "welcom": [17, 18, 442, 448], "absolut": [17, 181, 182, 341, 357], "skill": 17, "whether": [17, 18, 38, 40, 41, 71, 72, 79, 80, 101, 107, 116, 120, 121, 122, 130, 131, 150, 151, 162, 166, 170, 175, 178, 180, 181, 211, 241, 242, 244, 245, 252, 255, 259, 261, 267, 269, 271, 274, 275, 276, 277, 278, 279, 280, 292, 296, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 328, 336, 341, 346, 386, 387, 388, 389, 390, 391, 392, 396, 400, 401, 402, 403, 410, 411, 439, 440, 441, 452, 453, 463, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 27, 29, 30, 38, 42, 43, 45, 46, 47, 59, 60, 82, 83, 91, 92, 131, 146], "aspect": [17, 46, 320, 326, 442], "guid": [17, 18, 19, 32, 442], "through": [17, 19, 27, 30, 33, 34, 42, 43, 45, 46, 47, 48, 59, 181, 189], "journei": [17, 442, 448], "inclusvi": 17, "big": [17, 60], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 42, 442], "split": [17, 19, 42, 43, 60, 131, 140, 156, 157, 158, 159, 173, 174, 175, 241, 280, 370, 442], "section": [17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 422, 423, 424, 426], "below": [17, 18, 27, 28, 30, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 59, 82, 93, 97, 98, 181, 185, 223, 224, 238, 341, 344, 345, 362, 370, 374, 375, 377, 379, 422, 424, 427, 428, 442], "best": [17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 241, 280], "go": [17, 18, 19, 27, 28, 30, 42, 46, 60, 390, 401], "finish": [17, 18, 27, 442], "dive": [17, 19, 42, 45, 46, 60], "right": [17, 18, 19, 27, 30, 46, 181, 193, 195, 341, 359], "environ": [17, 18, 59], "basic": [17, 20], "fork": [17, 241, 281], "doc": [17, 29, 41, 43, 46, 47, 442], "document": [17, 19, 20, 44, 46, 48], "local": [17, 19, 20, 33], "help": [17, 18, 30, 33, 36, 37, 45, 46, 47, 58, 430, 431, 437, 442], "video": [17, 19, 29, 30, 41], "realli": [18, 60], "contribut": [18, 19, 43, 448], "toward": [18, 43, 370, 379, 442, 448], "page": [18, 19, 44, 48, 58, 442, 448], "explain": [18, 19, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 442, 448], "main": [18, 20, 35, 37, 82, 87, 97, 98, 341, 345, 362], "prefer": 18, "mode": [18, 30, 60, 79, 80, 131, 160, 161, 162, 163, 175, 181, 185, 225, 341, 356], "git": [18, 19], "com": 18, "unifyai": [18, 20], "http": [18, 29, 304, 306, 307, 370, 374, 422, 424, 427, 428], "gh": 18, "your_fold": 18, "id": [18, 36, 37, 131, 150, 475, 476], "cours": [18, 19, 30, 46, 60], "whatev": [18, 60], "integr": [18, 32, 101, 107], "familiar": 18, "decid": [18, 390, 401], "sure": [18, 31], "elig": 18, "free": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 59], "student": 18, "licenc": 18, "peopl": [18, 19, 27], "seem": [18, 47, 60], "miss": [18, 30, 32, 36, 37, 479, 483], "add": [18, 19, 27, 28, 29, 33, 34, 36, 37, 41, 43, 45, 60, 181, 408, 409, 442, 448, 477, 478], "explicit": [18, 38, 40, 43, 60], "remind": 18, "channel": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 241, 261, 320, 322, 323, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473], "show": [18, 30, 40, 59, 60, 442], "easier": [18, 36], "remot": 18, "packag": [18, 60], "mitig": 18, "potenti": [18, 42, 181, 204], "conflict": [18, 19, 46], "addit": [18, 19, 28, 29, 32, 37, 38, 45, 46, 48, 181, 185, 241, 256, 257, 258, 408, 409, 463, 473], "yet": 18, "particular": [18, 28, 40, 181, 182, 430, 431], "system": [18, 60, 341, 358], "instruct": 18, "abov": [18, 29, 30, 33, 36, 40, 41, 45, 46, 47, 48, 82, 93, 97, 98, 181, 185, 223, 224, 225, 238, 328, 331, 341, 344, 345, 346, 362, 370, 374, 375, 377, 379, 410, 412, 422, 424, 427, 428, 430, 435, 436, 437], "instal": [18, 20, 59, 442], "desktop": 18, "wsl": 18, "requir": [18, 20, 28, 29, 30, 32, 35, 36, 38, 39, 41, 45, 60, 79, 80, 181, 235, 341, 346, 370, 382, 452, 453], "run": [18, 19, 20, 31, 32, 43, 44, 45, 46, 47, 48, 59, 60, 131, 140, 304, 306, 307, 311, 386, 387, 388, 389, 463, 474, 475, 476], "command": [18, 20, 442], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 20, 29, 60, 370, 374, 422, 424, 427, 428, 463, 472], "imag": [18, 20, 28, 43, 44, 46, 48, 59, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 442], "cmd": 18, "profession": 18, "execut": [18, 20, 40, 43, 45, 48, 60, 241, 301], "deploy": 18, "click": [18, 29, 442], "top": [18, 32, 46, 47], "left": [18, 30, 38, 181, 193, 341, 346, 350, 359, 417, 418], "icon": 18, "side": [18, 19], "choos": [18, 19, 48, 181, 220, 221, 417, 421, 422, 423, 424, 426, 430, 432, 433, 434], "panel": 18, "python3": 18, "path": [18, 20], "press": [18, 46, 442], "ok": 18, "correctli": [18, 32, 38, 41, 47, 60, 341, 350, 417, 418], "caus": [18, 19, 30, 32, 40, 60], "earlier": [18, 19], "note": [18, 19, 28, 30, 181, 230, 341, 346, 359, 370, 382, 422, 424, 430, 433], "might": [18, 19, 28, 32, 35, 43, 45, 46, 241, 255], "necessari": [18, 30, 40], "virtualis": 18, "setup": 18, "termin": [18, 19, 37, 43, 46], "linux": 18, "detail": [18, 19, 28, 32, 33, 34, 35, 37, 41, 46, 47, 82, 88, 422, 423, 424, 426], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 27, 30, 31, 35, 36, 37, 38, 41, 43, 45, 46, 48, 60, 131, 140, 241, 274, 286, 287, 304, 306, 307, 309, 311, 312, 313, 328, 338, 386, 387, 388, 390, 397, 398, 406, 407, 452, 453, 479, 480, 481, 482, 483, 484], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 82, 93, 241, 248, 249, 328, 336, 341, 350, 364, 463, 471], "keyr": 18, "fssl": 18, "download": [18, 32], "gpg": 18, "dearmor": 18, "o": [18, 43, 241, 245], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 48, 60], "lsb_releas": 18, "cs": 18, "stabl": [18, 43, 60, 241, 265, 266, 288, 289, 294, 295, 427, 428, 429], "tee": 18, "list": [18, 20, 28, 30, 38, 39, 41, 43, 46, 47, 48, 60, 82, 83, 84, 85, 93, 94, 95, 99, 101, 108, 131, 140, 141, 150, 152, 153, 156, 157, 160, 161, 175, 241, 245, 293, 298, 302, 320, 326, 328, 329, 330, 331, 332, 333, 334, 335, 341, 361, 370, 372, 375, 380, 382, 390, 391, 392, 396, 401, 402, 408, 409, 417, 420, 439, 440, 441, 442, 463, 464, 465, 466, 467, 468, 469, 470], "dev": [18, 33, 39, 43, 45, 47, 131, 140, 169], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 60], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 59], "post": [18, 48, 408, 409, 442, 448], "pypi": [18, 60], "more": [18, 19, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 82, 83, 101, 108, 181, 204, 341, 349, 370, 375, 422, 423, 424, 426, 430, 431, 442], "nutshel": [18, 41], "hook": 18, "lint": 18, "accept": [18, 19, 29, 30, 32, 33, 36, 37, 39, 40, 41, 45, 82, 93, 181, 185, 220, 221, 223, 224, 230, 238, 328, 331, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428, 430, 433, 442], "fix": [18, 19], "fail": [18, 32, 43, 45], "attempt": [18, 60], "succe": 18, "problemat": 18, "appli": [18, 19, 30, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 71, 72, 73, 74, 75, 76, 77, 78, 101, 123, 241, 256, 257, 258, 304, 311, 312, 328, 337, 339, 340, 341, 352, 355, 366, 367, 368, 369, 370, 382, 386, 387, 388, 390, 396, 399, 402, 403, 408, 409, 442, 449, 450, 451, 477, 478], "To": [18, 19, 33, 37, 46, 47, 48, 442], "proce": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "modifi": [18, 29, 33, 38, 39, 43], "file": [18, 19, 20, 28, 29, 33, 36, 37, 43, 46, 241, 291, 475, 476], "properli": [18, 27], "m": [18, 27, 43, 82, 93, 97, 98, 241, 245, 341, 342, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 362, 410, 413, 414], "pip": [18, 59, 442], "enter": [18, 19, 36, 38, 39, 41], "folder": [18, 19, 20, 28, 31, 32, 33], "cd": 18, "That": [18, 19, 45, 46, 47, 181, 230], "good": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 430, 431], "ever": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "unsur": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "feel": [18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "server": 19, "outlin": [19, 27, 32, 33, 40, 45], "appropri": [19, 181, 185, 225, 417, 418], "context": [19, 38, 39, 241, 281, 328, 339, 463, 474], "suitabl": [19, 28, 37], "quick": [19, 27, 47], "alwai": [19, 28, 29, 33, 36, 40, 41, 43, 45, 60, 101, 107, 181, 185, 225, 241, 274, 304, 310, 315], "correct": [19, 27, 33, 37, 38, 39, 41, 370, 371, 430, 436, 438, 442], "tendenc": 19, "gener": [19, 20, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 79, 82, 83, 91, 92, 181, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 370, 374, 410, 411, 412, 414, 415, 422, 424, 427, 428, 442, 479, 483], "land": 19, "end": [19, 40, 42, 59, 60, 82, 83, 181, 189, 442, 448], "world": 19, "come": [19, 47, 58, 442, 448], "fly": 19, "hard": [19, 45], "keep": [19, 31, 44, 46, 48, 241, 302], "track": [19, 131, 390, 402, 475, 476], "receiv": [19, 32, 38, 39, 131, 140, 141, 241, 243, 280, 463, 473], "respons": [19, 20, 40], "internship": 19, "mean": [19, 27, 30, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 131, 160, 161, 162, 163, 175, 241, 257, 386, 387, 388, 389, 390, 396, 410, 413, 430, 454], "found": [19, 29, 36, 37], "avoid": [19, 32, 34, 35, 45, 131, 181, 204], "someon": [19, 60], "els": [19, 28, 33, 34, 40, 43, 45, 47, 48, 60, 241, 246, 255, 259, 390, 400], "strive": [19, 60], "respond": 19, "newli": [19, 40, 79, 80, 101, 107, 241, 247], "name": [19, 20, 29, 32, 43, 45, 46, 48, 79, 80, 341, 346, 356, 359, 422, 423, 424], "suggest": [19, 28], "place": [19, 27, 28, 29, 30, 32, 33, 39, 41, 48, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 100, 131, 176, 181, 185, 223, 224, 238, 241, 272, 273, 274, 328, 331, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428, 479, 480, 481, 482, 483, 484], "bug": [19, 32], "It": [19, 20, 27, 28, 29, 30, 33, 36, 37, 40, 43, 45, 46, 47, 71, 74, 131, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 249, 260, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 417, 418, 427, 428, 429, 439, 440, 441], "serv": [19, 32, 33, 36, 37, 41, 42, 442], "suspect": 19, "behaviour": [19, 29, 32, 33, 36, 40, 41, 45], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 28, 46, 47, 60], "bet": 19, "extens": [19, 29, 82, 93, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 379, 422, 424, 427, 428], "act": [19, 30, 60], "placehold": [19, 36, 41, 390, 402], "sub": [19, 27, 32, 37, 45, 46, 47, 131, 156, 157, 160, 161, 162, 163, 341, 345, 370, 380, 386, 387, 388, 389, 442], "task": [19, 59, 386, 387, 388, 389], "mark": [19, 32], "tick": 19, "ii": [19, 430, 431], "iii": 19, "comment": 19, "titl": [19, 442], "refer": [19, 32, 33, 38, 41, 60, 82, 87, 181, 204, 216, 304, 306, 307, 341, 363, 365, 430, 436, 438, 439, 440, 441, 463, 473], "issue_numb": 19, "delet": [19, 20], "No": [19, 43], "wait": 19, "progress": [19, 44, 48], "pr": 19, "soon": [19, 58, 60, 442, 448], "partial": [19, 475, 476], "solut": [19, 32, 341, 358], "review": [19, 28], "merg": 19, "everi": [19, 20, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 82, 89, 90, 241, 242], "shape": [19, 28, 29, 30, 38, 39, 40, 41, 43, 45, 46, 47, 48, 71, 74, 82, 85, 86, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 131, 143, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 249, 260, 263, 267, 283, 286, 287, 293, 320, 323, 325, 326, 328, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 385, 410, 412, 413, 414, 417, 418, 420, 427, 428, 429, 430, 431, 439, 440, 441, 442, 463, 465, 466, 467, 468, 469, 470, 477, 478], "master": 19, "move": [19, 28, 131, 176], "within": [19, 32, 47, 60, 82, 83, 410, 414], "7": [19, 20, 30, 33, 40, 71, 73, 74, 181, 185, 192, 203, 208, 223, 224, 238, 241, 245, 304, 306, 307, 311, 320, 323, 327, 328, 335, 341, 343, 344, 345, 354, 361, 366, 367, 368, 369, 370, 371, 374, 375, 377, 380, 410, 411, 412, 430, 431], "dai": 19, "close": [19, 29, 181, 204, 320, 326, 341, 359], "method": [19, 28, 29, 30, 32, 33, 36, 41, 43, 44, 47, 48, 60, 71, 73, 74, 75, 76, 77, 78, 82, 88, 93, 181, 185, 208, 223, 224, 226, 238, 241, 250, 286, 287, 304, 311, 312, 341, 343, 344, 361, 366, 367, 369, 370, 371, 374, 375, 377, 379, 380, 390, 391, 401, 402, 403, 417, 420, 422, 424, 427, 428, 439, 440, 442, 463, 474, 475, 476], "likewis": [19, 33, 38, 41, 46], "freed": 19, "flag": [19, 40, 45, 131, 150, 304, 310], "purpos": [19, 20, 30, 32, 33, 35, 36, 37, 41, 42, 45, 181, 204, 442], "ensur": [19, 32, 36, 38, 41, 241, 274], "remain": [19, 30, 60, 181, 185, 225, 230, 370, 378, 390, 396], "access": [19, 20, 38], "who": [19, 27, 42, 60], "short": [19, 47, 328, 338], "basi": [19, 31, 46], "situat": [19, 48], "alloc": [19, 60, 82, 97, 98, 101, 107, 131], "upon": [19, 30, 32, 40, 60], "long": [19, 30, 328, 338], "period": 19, "prevent": [19, 40, 45, 304, 306, 307, 311, 430, 437, 479, 480, 481], "instead": [19, 29, 30, 32, 33, 37, 40, 41, 43, 45, 46, 60], "unabl": 19, "obvious": 19, "never": 19, "reflect": [19, 36], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "sometim": 19, "fine": [19, 45, 48], "person": 19, "becaus": [19, 29, 32, 33, 34, 36, 38, 39, 40, 41, 43, 47, 48, 60], "inact": 19, "limit": [19, 30, 32, 43, 46, 48, 60, 101, 118, 119, 241, 248, 249, 370, 371], "me": 19, "unfairli": 19, "definit": [19, 33, 38, 45, 341, 342, 343], "investig": 19, "Then": [19, 20, 45, 60], "practic": [19, 32], "separ": [19, 32, 36, 43, 45, 46], "branch": [19, 60, 79, 80, 181, 189], "simpli": [19, 29, 32, 33, 36, 37, 39, 40, 41, 43, 47, 48, 181, 204], "role": [19, 44], "kept": [19, 40, 386, 387, 388], "date": 19, "upstream": [19, 31], "complic": [19, 43], "script": [19, 30, 43, 60], "root": [19, 20, 46, 181, 235, 410, 411, 412, 413, 414], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 430, 435, 437], "browser": 19, "clone": [19, 131, 152, 153, 154, 155], "push": [19, 31], "both": [19, 29, 30, 33, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 181, 229, 328, 331, 341, 343, 349, 363], "repeat": [19, 29, 30, 34, 36, 241, 258, 370, 384], "yourself": [19, 59], "simpler": [19, 45], "cannot": [19, 38, 48], "alreadi": [19, 29, 34, 41, 45, 60, 131, 181, 197, 205, 225, 240, 341, 354, 442], "least": [19, 30, 33, 36, 341, 349], "final": [19, 29, 30, 33, 36, 38, 43, 45, 46, 82, 91, 92, 241, 261, 463, 474], "done": [19, 30, 32, 46], "tickbox": 19, "lower": [19, 30, 43, 60, 82, 87, 97, 181, 223, 341, 342, 410, 414], "corner": 19, "without": [19, 28, 33, 36, 43, 45, 46, 47, 59, 60, 241, 285, 290, 370, 378, 390, 392, 422, 423, 424, 426], "span": 19, "intent": [19, 40], "larg": [19, 46, 181, 185, 225], "approach": [19, 32, 33, 45, 46, 60], "discourag": 19, "philosophi": 19, "increment": [19, 241, 273], "frequent": 19, "valuabl": 19, "infrequ": 19, "earli": [19, 442], "wast": 19, "spot": [19, 33], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 33, 36, 41, 45, 60], "advoc": [19, 60], "individu": [19, 33], "per": [19, 46, 131, 328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "style": [19, 417, 420], "ve": [19, 42, 45, 410, 411, 442], "were": [19, 28, 30, 32], "actual": [19, 27, 33, 40, 42, 45, 47, 60], "aim": [19, 42], "part": [19, 28, 31, 32, 33, 43, 44, 48, 59, 60, 82, 97, 98, 304, 307, 309, 311, 312, 313, 475, 476], "subsect": 19, "filepath": 19, "interact": [19, 442], "session": 19, "block": [19, 33, 42, 44, 48, 60, 442], "smaller": [19, 43, 48, 370, 371, 379, 430, 435, 437], "manual": [19, 32, 47, 390, 391, 400, 401], "edit": 19, "exact": [19, 43, 422, 423], "beauti": 19, "histori": 19, "particularli": [19, 46, 60], "concern": [19, 27, 30, 40, 42], "abl": [19, 33, 38, 40, 45, 48], "effici": [19, 32, 33, 40, 41, 43, 46, 60, 430, 431], "too": [19, 60, 181, 185, 225], "difficult": [19, 32, 60, 422, 423, 424, 426], "undo": 19, "stress": 19, "frequenc": [19, 241, 261], "builder": [20, 58, 60, 442], "synchron": 20, "rest": [20, 44, 48], "remove_doc": 20, "_": [20, 29, 40, 45, 46, 304, 306, 307, 341, 365, 370, 374, 422, 424, 427, 428], "indic": [20, 44, 48, 71, 76, 181, 232, 241, 262, 263, 270, 283, 286, 287, 328, 329, 330, 331, 332, 333, 334, 335, 341, 364, 370, 379, 390, 391, 393, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 420, 422, 423, 425, 427, 428, 429, 442, 445, 447, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476], "privat": [20, 479, 483], "fulfil": [20, 42, 442], "autogenerated_sourc": 20, "3": [20, 30, 33, 43, 45, 46, 47, 48, 71, 73, 74, 75, 76, 81, 82, 90, 93, 96, 99, 100, 131, 150, 176, 181, 185, 195, 203, 207, 208, 212, 223, 224, 226, 238, 241, 244, 245, 292, 320, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 341, 342, 343, 344, 345, 348, 352, 354, 359, 361, 362, 365, 366, 367, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 408, 409, 410, 411, 412, 416, 417, 420, 422, 424, 427, 428, 430, 431, 437, 439, 440, 442], "format": [20, 29, 38, 39, 43, 45, 46, 101, 112, 116, 131, 151, 430, 431, 442], "png": [20, 46], "_imag": 20, "lastli": 20, "docstr": [20, 27, 28, 33, 41, 82, 93, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 379, 422, 424, 427, 428], "structur": [20, 28, 33, 36, 37, 46, 47, 241, 250, 390, 403], "rst": 20, "submodul": [20, 31, 32, 33, 39, 42, 43, 47, 442, 477, 478, 485, 486], "skip": [20, 32, 390, 403], "read": [20, 442], "configur": [20, 38, 390, 403], "partial_sourc": 20, "conf": 20, "copi": [20, 29, 34, 38, 43, 45, 46, 59, 60, 82, 84, 88, 101, 107, 241, 251, 299, 300, 370, 378, 390, 392, 427, 429], "5": [20, 30, 45, 46, 47, 71, 73, 74, 76, 82, 90, 93, 96, 99, 100, 131, 169, 181, 185, 190, 195, 208, 223, 224, 226, 238, 241, 245, 320, 323, 324, 328, 331, 333, 334, 341, 342, 343, 344, 345, 348, 354, 361, 362, 366, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 408, 409, 410, 411, 412, 416, 417, 420, 422, 424, 427, 428, 430, 431, 439, 440, 463, 474], "create_rst_fil": 20, "filter": [20, 328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "recurs": [20, 33, 35, 37, 47, 60, 390, 391, 392, 400, 401, 402], "directori": [20, 241, 291], "repres": [20, 45, 82, 93, 101, 112, 117, 181, 184, 185, 187, 190, 199, 225, 234, 328, 337, 341, 357, 358], "its": [20, 29, 101, 108, 131, 175, 341, 349, 370, 374, 378, 379, 383], "overal": [20, 29, 37, 38, 39, 48], "markup": 20, "6": [20, 30, 33, 45, 46, 47, 71, 73, 74, 76, 82, 90, 181, 185, 192, 208, 223, 224, 226, 238, 241, 245, 320, 323, 328, 331, 335, 341, 343, 344, 345, 354, 359, 361, 366, 367, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 408, 409, 410, 411, 412, 422, 424, 430, 431], "extract": [20, 28], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 60], "module_nam": 20, "copy_readme_to_rst": 20, "8": [20, 30, 33, 42, 46, 71, 75, 181, 185, 208, 223, 224, 241, 245, 320, 323, 328, 335, 341, 343, 344, 345, 354, 361, 366, 367, 370, 371, 375, 377, 380, 410, 411, 412, 430, 431, 442, 463, 474], "tabl": 20, "content": [20, 40, 43, 46], "toc": 20, "tree": 20, "accord": [20, 33, 38, 101, 110, 118, 181, 185, 195, 225, 241, 262, 286, 287, 341, 363, 370, 373, 385, 430, 436, 438], "append": [20, 32, 43, 46, 181, 193, 341, 345, 349], "append_toctree_to_rst": 20, "9": [20, 30, 46, 47, 181, 185, 192, 223, 224, 304, 306, 307, 311, 328, 331, 335, 341, 343, 344, 354, 359, 361, 370, 371, 375, 379, 380, 410, 411, 412, 430, 431, 479, 480, 481], "index": [20, 33, 45, 81, 82, 87, 93, 241, 262, 263, 370, 382, 390, 393, 394, 397, 398, 399, 404, 406, 417, 418, 419, 420, 422, 423, 424, 427, 428, 445, 447], "create_index_rst": 20, "14": [20, 30, 33, 341, 354, 361, 370, 377, 410, 412, 430, 431], "\u03c0": [20, 181, 183, 186, 188, 189], "namespac": [20, 28, 38, 43, 48], "remov": [20, 29, 32, 33, 38, 40, 48, 341, 345, 349, 362, 370, 381, 386, 387, 388], "debug_mod": 21, "set_breakpoint_debug_mod": 21, "set_debug_mod": 21, "debug_mode_in": [21, 24], "except": [21, 24, 29, 33, 38, 39, 40, 45, 60, 101, 109, 241, 246, 255, 274, 301, 341, 355, 370, 372, 382, 417, 420, 439, 440, 441], "set_exception_debug_mod": 21, "unset_debug_mod": 21, "debugg": [22, 23, 24, 25, 26], "mainli": [27, 44, 46], "target": [27, 42, 46, 47, 48, 131, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 442], "under": [27, 29, 30, 32, 33, 37, 42, 43, 46, 48], "hood": [27, 30, 32, 33, 37, 42, 43, 46, 48], "weed": [27, 42], "behind": [27, 42, 44, 304, 307, 309, 311, 312, 313], "navig": 27, "tour": 27, "primari": [27, 32, 34, 40, 60], "composit": [27, 32, 34, 36, 40, 43, 47, 48, 60], "mix": [27, 30, 32, 43, 101, 123, 181, 185, 208, 223, 224, 328, 331, 335, 341, 361, 366, 367, 369, 430, 433], "nestabl": [27, 29, 30, 32, 37, 40, 328, 331], "wrap": [27, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 48, 60, 61, 69, 241, 247, 304, 318], "dynam": [27, 38, 39, 40, 43, 79, 80], "runtim": [27, 32], "thei": [27, 28, 30, 33, 37, 38, 39, 40, 45, 46, 47, 48, 60, 386, 387, 388, 410, 411, 442, 485, 486], "handl": [27, 32, 33, 35, 37, 38, 39, 40, 41, 47, 60, 79, 80, 131, 147, 148, 149, 150, 151, 169, 170, 177, 180, 304, 307, 309, 311, 312, 313, 479, 480, 481, 482, 483, 484], "h": [27, 33, 320, 321, 322, 323, 325, 327, 328, 331, 332, 333, 334, 335], "inplac": [27, 30, 35, 36, 41, 45, 47, 241, 246, 271, 274, 275, 296, 304, 307, 309, 311, 312, 313, 452, 453, 479, 480, 481, 482, 483, 484], "output": [27, 28, 29, 30, 32, 33, 36, 39, 40, 41, 43, 45, 47, 48, 60, 71, 74, 82, 83, 85, 86, 87, 89, 90, 93, 95, 96, 99, 100, 131, 140, 141, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 247, 249, 253, 260, 262, 304, 308, 328, 330, 332, 334, 336, 338, 339, 340, 341, 362, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 384, 410, 412, 413, 414, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474], "j": [27, 241, 244, 245, 341, 362, 430, 431], "k": [27, 43, 82, 87, 97, 98, 241, 244, 328, 340, 341, 349, 356, 358, 359, 360, 362, 410, 413, 414, 417, 420], "l": [27, 341, 342, 346, 349, 362], "borrow": 27, "n": [27, 82, 93, 97, 98, 241, 245, 328, 336, 341, 345, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 363, 364, 365, 370, 373, 374, 376, 382, 385, 410, 413, 414, 417, 420, 430, 433, 436, 437, 438, 439, 440, 441], "categori": [28, 36, 37, 38, 42, 442], "taken": [28, 48, 341, 345], "constant": [28, 33, 47, 48, 60, 131, 140, 141, 370, 373, 390, 396, 408, 409, 454, 455, 459, 462, 475, 476, 477, 478], "creation": [28, 38, 39, 43, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "data_typ": [28, 38, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "elementwis": [28, 33, 43, 48, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240], "linear_algebra": [28, 45, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "sort": [28, 341, 346, 359, 360, 428], "statist": [28, 38, 431, 432, 433, 434, 435, 436, 437, 438], "util": [28, 39, 131, 164, 440, 441], "activ": [28, 47, 72, 73, 74, 75, 76, 77, 78, 442, 450, 451], "compil": [28, 42, 44, 60, 442, 475, 476, 479, 480, 481, 482, 483, 484], "gradient": [28, 46, 47, 59, 60, 131, 175, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 386, 387, 388, 389, 442, 479, 480, 481, 482, 483, 484], "loss": [28, 33, 46, 47, 48, 367, 368, 369, 442], "meta": [28, 387, 388, 389], "nest": [28, 33, 37, 45, 46, 47, 60, 131, 155, 159, 163, 241, 298, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 475, 476, 479, 480, 481, 482, 483, 484], "norm": [28, 241, 248, 249, 341, 350, 364, 409, 442, 478, 479, 481], "random": [28, 39, 48, 59, 411, 412, 413, 414, 415, 416, 442], "overlap": 28, "sever": [28, 60, 341, 348], "judgement": 28, "locat": [28, 32, 39, 410, 411], "matmul": [28, 43, 341, 359, 442], "some_namespac": 28, "insid": [28, 38], "some_backend": 28, "another_backend": 28, "break": [28, 41, 45, 60, 442], "anyth": 28, "refactor": 28, "ongo": 28, "subfold": [28, 32], "via": [28, 34, 37, 38, 39, 40, 43, 45, 46, 59, 390, 391, 400, 401], "file_nam": 28, "defin": [28, 29, 38, 41, 45, 47, 60, 181, 225, 230, 241, 283, 341, 343, 346, 358, 410, 412, 430, 432, 433, 434], "my_func": [28, 30], "union": [28, 30, 33, 36, 38, 39, 40, 41, 43, 48, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 147, 148, 149, 150, 151, 156, 157, 158, 159, 164, 170, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 267, 269, 270, 274, 283, 286, 287, 292, 293, 298, 299, 300, 302, 303, 304, 317, 320, 324, 326, 327, 328, 329, 331, 333, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 392, 401, 402, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441], "nativearrai": [28, 30, 33, 36, 40, 41, 43, 45, 48, 61, 69, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 86, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 107, 108, 109, 116, 118, 119, 121, 122, 123, 131, 150, 151, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 267, 269, 270, 274, 283, 286, 287, 292, 298, 299, 300, 302, 303, 304, 317, 320, 324, 326, 327, 328, 329, 331, 333, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 392, 402, 408, 409, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441], "ax": [28, 30, 38, 45, 131, 175, 341, 350, 358, 361, 364, 370, 373, 375, 376, 379, 381, 383, 385, 417, 418, 419, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "int": [28, 30, 33, 38, 39, 40, 41, 48, 71, 76, 79, 80, 82, 85, 87, 89, 90, 91, 92, 95, 97, 98, 99, 101, 109, 115, 117, 118, 119, 122, 131, 156, 157, 158, 159, 167, 168, 169, 175, 241, 252, 253, 256, 257, 258, 261, 262, 267, 283, 286, 287, 292, 293, 302, 320, 324, 326, 328, 329, 331, 333, 335, 341, 343, 345, 361, 362, 363, 364, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 390, 402, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441], "tupl": [28, 38, 39, 41, 45, 46, 47, 60, 79, 80, 82, 84, 85, 89, 94, 95, 99, 101, 109, 131, 150, 241, 261, 293, 320, 326, 328, 331, 335, 341, 352, 355, 359, 361, 364, 370, 372, 373, 375, 376, 379, 381, 382, 385, 390, 392, 393, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 410, 412, 413, 414, 417, 420, 422, 423, 424, 425, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "dtype": [28, 30, 33, 38, 39, 45, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 99, 100, 101, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 181, 195, 226, 241, 244, 245, 283, 320, 323, 370, 374, 408, 409, 417, 418, 427, 429, 430, 431, 435, 436, 437, 439, 440, 442], "nativedtyp": [28, 38, 39, 41, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 100, 101, 106, 107, 114, 115, 116, 430, 437], "nativedevic": [28, 38, 39, 41, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 100, 131, 148, 149, 150, 164, 170, 172, 176, 177, 180, 241, 262, 263, 283, 286, 287, 410, 411, 412, 413, 414], "my": 28, "cool": 28, "special": [28, 29, 30, 36, 41, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 232, 233, 234, 235, 238, 240, 430, 432, 433, 434, 436, 437, 438], "nan": [28, 29, 81, 101, 107, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 209, 211, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 241, 269, 303, 422, 423, 424, 426, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441], "y": [28, 30, 33, 43, 45, 71, 73, 74, 75, 76, 77, 78, 82, 89, 90, 93, 95, 96, 100, 101, 107, 131, 151, 169, 181, 185, 189, 192, 195, 197, 198, 203, 208, 223, 224, 226, 238, 241, 244, 245, 251, 260, 298, 299, 300, 304, 308, 320, 324, 327, 328, 335, 337, 341, 342, 343, 344, 348, 354, 361, 362, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 427, 428, 430, 431, 436, 437, 439, 440], "input": [28, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 88, 90, 93, 94, 96, 97, 98, 100, 101, 107, 108, 110, 111, 113, 114, 115, 116, 117, 121, 122, 123, 131, 140, 141, 150, 151, 152, 155, 156, 159, 163, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 267, 269, 270, 272, 273, 274, 276, 277, 278, 279, 292, 293, 296, 298, 299, 300, 302, 303, 304, 308, 310, 315, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 408, 409, 410, 411, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478], "numer": [28, 47, 82, 93, 101, 107, 181, 182, 185, 197, 200, 204, 205, 206, 209, 210, 211, 212, 220, 221, 225, 226, 227, 229, 230, 232, 237, 240, 241, 265, 266, 288, 289, 294, 295, 341, 343, 349, 354, 359, 361, 362, 363, 410, 416, 417, 418, 419, 430, 432, 435, 437, 454], "along": [28, 40, 82, 91, 92, 131, 156, 157, 158, 159, 160, 161, 162, 163, 175, 241, 252, 253, 262, 302, 320, 324, 341, 350, 362, 363, 364, 366, 368, 369, 370, 372, 375, 377, 379, 380, 382, 384, 386, 387, 388, 389, 410, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "result": [28, 29, 30, 32, 33, 36, 37, 38, 40, 41, 46, 60, 71, 74, 82, 83, 101, 123, 131, 140, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 249, 253, 260, 262, 286, 287, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 345, 350, 359, 364, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 390, 403, 417, 418, 419, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "broadcast": [28, 29, 30, 33, 38, 71, 74, 101, 108, 109, 131, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 241, 249, 260, 341, 349, 350, 352, 355, 358, 363, 364, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 417, 418, 419, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "cooler": 28, "keyword": [28, 38, 39, 40, 41, 46, 82, 93, 131, 140, 141, 155, 159, 163, 241, 243, 280, 390, 396, 430, 437, 475, 476], "hint": [28, 29, 33, 36, 40, 41, 82, 93, 181, 185, 223, 224, 238, 328, 331, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428], "produc": [28, 131, 140, 141], "featur": [28, 41, 46, 442], "something_cool": 28, "category_nam": [29, 33, 38, 39, 41], "thorough": [29, 32, 41], "contrast": [29, 41], "backend_nam": [29, 33, 34, 35, 38, 39, 41], "account": 29, "instanti": 29, "tan": [29, 33, 37, 40, 41, 43, 181, 422, 424, 427, 428, 442], "firstli": [29, 30, 33, 36, 38, 40, 46], "correspond": [29, 30, 31, 33, 36, 37, 38, 101, 108, 181, 189, 229, 341, 343, 346, 358, 370, 372, 379, 410, 411, 417, 418, 419, 422, 423, 424, 426, 430, 435, 436, 437, 438], "templat": [29, 442], "spec": [29, 30], "api_specif": [29, 370, 374, 422, 424, 427, 428], "array_api": 29, "raw": 29, "preview": 29, "newlin": 29, "render": 29, "incorrectli": 29, "onlin": 29, "approxim": [29, 71, 72, 181, 183, 184, 186, 187, 188, 189, 198, 199, 203, 204, 214, 215, 216, 217, 229, 233, 234, 238, 341, 352, 355], "tangent": [29, 71, 78, 181, 188, 189, 190, 238, 239], "domain": [29, 181, 183, 184, 186, 187, 188, 189, 198, 199, 203, 204, 214, 215, 217, 233, 234, 235, 238], "infin": [29, 81, 101, 107, 181, 182, 184, 185, 187, 188, 189, 197, 198, 199, 203, 204, 205, 206, 209, 210, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 341, 364, 430, 432, 434, 439, 440, 441], "codomain": [29, 181, 183, 184, 186, 187, 188, 189, 198, 199, 203, 204, 214, 215, 217, 233, 234, 235, 238], "element": [29, 43, 48, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 89, 90, 97, 98, 131, 154, 158, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 248, 249, 252, 253, 260, 270, 299, 300, 328, 336, 341, 343, 346, 349, 356, 359, 370, 371, 375, 377, 379, 380, 381, 410, 411, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 471], "x_i": [29, 181, 182, 183, 184, 186, 187, 188, 192, 197, 198, 199, 203, 204, 205, 209, 210, 211, 214, 215, 217, 220, 226, 232, 233, 234, 235, 236, 238, 240, 422, 423, 424, 426, 430, 432, 433, 434, 436, 437, 438], "assum": [29, 38, 45, 46, 60, 82, 93, 181, 185, 198, 223, 224, 233, 238, 328, 331, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428], "express": [29, 43, 48, 181, 183, 186, 188, 189, 198, 233, 238], "radian": [29, 181, 183, 186, 188, 189, 198, 233, 238], "float": [29, 33, 38, 40, 45, 47, 71, 73, 81, 82, 83, 85, 87, 89, 90, 92, 95, 99, 101, 107, 114, 118, 121, 123, 131, 164, 170, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 199, 200, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 241, 248, 249, 261, 265, 266, 288, 289, 294, 295, 320, 322, 327, 328, 331, 335, 341, 342, 344, 346, 347, 348, 352, 355, 356, 358, 359, 364, 366, 367, 368, 369, 408, 409, 410, 413, 414, 422, 423, 424, 426, 430, 432, 433, 434, 435, 436, 437, 438], "operand": [29, 181, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 203, 204, 205, 214, 215, 217, 218, 225, 229, 230, 233, 234, 235, 238, 240, 430, 431, 432, 434, 437], "whose": [29, 82, 97, 98, 181, 184, 187, 190, 198, 199, 229, 233, 234, 238, 241, 247, 341, 342, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 358, 359, 360, 362, 370, 375, 379, 422, 423, 424, 430, 431], "ref": [29, 181, 195, 212, 225, 227, 230, 237, 370, 382], "promot": [29, 33, 38, 101, 107, 110, 123, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 203, 204, 214, 215, 217, 218, 222, 225, 229, 230, 233, 234, 235, 238, 341, 342, 343, 348, 349, 352, 354, 355, 358, 363, 364, 370, 382, 430, 433], "But": [29, 48], "needless": 29, "duplic": [29, 34, 35, 45, 47], "info": [29, 442], "subset": [29, 32, 41, 43], "extend": [29, 32, 34, 41], "renam": 29, "conform": [29, 82, 93, 181, 185, 204, 223, 224, 238, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428], "org": [29, 304, 306, 307, 370, 374, 422, 424, 427, 428], "elementwise_funct": [29, 422, 424, 427, 428], "explan": [29, 41, 45], "descript": [29, 82, 93, 181, 185, 223, 224, 238, 328, 331, 341, 344, 364, 370, 374, 375, 377, 379, 422, 424, 427, 428], "simplic": [29, 47, 59, 82, 93, 181, 185, 223, 224, 238, 328, 331, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428], "instanc": [29, 30, 32, 33, 36, 38, 40, 41, 46, 47, 48, 61, 69, 71, 73, 74, 75, 76, 77, 78, 82, 93, 131, 140, 172, 181, 185, 208, 223, 224, 226, 238, 241, 274, 328, 331, 341, 343, 344, 361, 366, 367, 369, 370, 371, 374, 375, 377, 379, 380, 417, 420, 422, 424, 427, 428, 439, 440, 452, 453], "judgment": 29, "beyond": [29, 370, 379], "ab": [29, 32, 181, 229, 341, 364, 442], "variou": [29, 41, 59], "contstructor": 29, "linear": [29, 43, 46, 47, 48, 71, 72, 73, 74, 241, 261, 320, 324, 328, 336, 358, 442, 463, 464, 465, 466, 467, 468, 469, 470], "variabl": [29, 38, 40, 41, 46, 47, 48, 60, 241, 246, 272, 273, 274, 275, 276, 277, 279, 296, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 328, 339, 341, 358, 386, 387, 388, 389, 408, 409, 442, 452, 453, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "store": [29, 34, 36, 37, 43, 45, 46, 47, 241, 261, 304, 318, 341, 362, 370, 380, 475, 476], "intern": [29, 36, 37, 39, 131, 304, 318, 390, 391, 400, 401, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 485, 486], "though": [29, 33, 46, 60], "forward": [29, 48, 59, 60, 475, 476, 479, 483], "_forward": [29, 43, 46, 47, 442], "quit": [29, 33, 35, 36], "former": 29, "trainabl": [29, 44, 46, 47, 304, 310, 452, 453, 475, 476, 485], "explicitli": [29, 33, 36, 40, 43, 60, 341, 346, 463, 472, 474, 475, 476], "latter": [29, 30], "implicit": [29, 43], "attribut": [29, 37, 38, 44, 45, 46, 47, 101, 118, 119], "docst": [29, 30], "after": [30, 38, 42, 181, 235, 304, 307, 308, 309, 311, 312, 313, 320, 321, 324, 408, 409, 479, 480, 481, 482, 483, 484], "three": [30, 33, 42, 82, 93, 442], "func_nam": [30, 33], "subtract": [30, 36, 181], "multipli": [30, 36, 181, 241, 252, 430, 431], "divid": [30, 36, 181, 206, 241, 294, 370, 380], "cover": [30, 33, 35, 42], "variant": 30, "independ": [30, 31, 43, 48, 341, 343, 358, 410, 411], "combinatorili": 30, "equal": [30, 37, 38, 82, 87, 89, 90, 101, 107, 181, 193, 195, 209, 210, 229, 241, 242, 244, 245, 341, 345, 352, 355, 370, 371, 373, 380, 385, 410, 414, 422, 423, 424, 426, 427, 428, 429, 430, 433, 436, 437, 438], "maximum": [30, 43, 46, 48, 131, 155, 159, 163, 175, 181, 241, 248, 249, 261, 304, 311, 370, 371, 390, 402, 417, 418, 430, 432, 434, 442], "variat": [30, 32], "grid": [30, 32, 59, 82, 93], "across": [30, 32, 33, 37, 38, 41, 131, 140, 141, 152, 153, 155, 156, 157, 158, 159, 163, 173, 174, 241, 244, 245, 390, 396, 417, 419], "vari": [30, 32, 37, 45, 422, 423, 424, 426], "valu": [30, 32, 33, 38, 39, 41, 43, 45, 48, 60, 82, 83, 87, 89, 90, 91, 92, 101, 107, 113, 114, 115, 131, 143, 174, 175, 181, 182, 183, 185, 186, 188, 197, 201, 202, 205, 206, 207, 208, 212, 213, 223, 224, 225, 227, 228, 229, 231, 240, 241, 248, 249, 250, 255, 261, 262, 263, 268, 271, 275, 285, 286, 287, 288, 289, 290, 303, 304, 306, 307, 308, 311, 315, 319, 320, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 352, 355, 356, 357, 358, 359, 360, 364, 370, 371, 373, 377, 378, 385, 386, 387, 388, 390, 394, 395, 396, 397, 398, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 483], "simplest": 30, "small": [30, 33, 43, 47, 60, 181, 225, 341, 352, 355, 408, 409, 477, 478], "dimens": [30, 43, 46, 71, 76, 82, 97, 98, 131, 162, 241, 256, 257, 258, 261, 267, 283, 302, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 358, 359, 360, 362, 363, 364, 366, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 410, 416, 417, 418, 419, 420, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474], "unus": [30, 40, 79, 80], "highlight": 30, "extra": [30, 35, 36, 43, 304, 308], "versatil": 30, "excess": [30, 34, 45], "combin": [30, 32, 33, 36, 37, 48, 320, 326, 341, 343, 430, 431], "__add__": [30, 36, 37, 41, 45], "__sub__": [30, 36, 37, 41, 45], "__mul__": [30, 36, 37, 41, 45], "__truediv__": [30, 36, 37], "respect": [30, 36, 37, 38, 41, 82, 93, 181, 182, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 207, 208, 212, 213, 218, 219, 221, 222, 225, 227, 230, 237, 304, 306, 307, 308, 309, 311, 312, 313, 341, 356, 386, 387, 388, 389], "meant": 30, "imaginari": 30, "std": [30, 410, 413, 430], "prod": [30, 38, 241, 257, 430], "var": [30, 43, 386, 387, 388, 430], "some_flag": 30, "bool": [30, 38, 40, 48, 79, 80, 82, 89, 101, 107, 110, 113, 114, 115, 116, 120, 121, 122, 130, 131, 150, 151, 166, 175, 178, 181, 201, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 227, 241, 242, 244, 245, 252, 255, 259, 261, 267, 269, 274, 276, 277, 278, 279, 292, 302, 303, 304, 315, 341, 342, 350, 359, 364, 370, 380, 390, 391, 392, 396, 400, 401, 402, 410, 411, 417, 418, 419, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "another_flag": 30, "true": [30, 32, 33, 37, 38, 40, 43, 45, 46, 47, 48, 71, 72, 79, 80, 82, 91, 101, 107, 110, 131, 150, 181, 207, 208, 209, 210, 211, 212, 220, 221, 241, 242, 244, 245, 246, 247, 259, 261, 269, 270, 277, 292, 298, 300, 303, 304, 307, 309, 310, 311, 312, 313, 315, 328, 336, 341, 342, 350, 359, 364, 366, 367, 368, 369, 370, 380, 386, 387, 388, 389, 390, 391, 400, 401, 403, 410, 411, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "axi": [30, 33, 38, 40, 41, 43, 45, 48, 59, 71, 76, 82, 91, 92, 131, 133, 136, 143, 156, 157, 158, 159, 160, 161, 162, 163, 175, 241, 252, 253, 262, 302, 320, 324, 341, 343, 345, 363, 364, 366, 368, 369, 370, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 410, 416, 417, 418, 419, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "54": [30, 181, 198, 341, 354, 430, 431], "jointli": 30, "x0": [30, 241, 244], "x1": [30, 41, 181, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 207, 208, 212, 213, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 237, 241, 244, 328, 333, 341, 343, 349, 354, 358, 361, 363, 417, 421], "x2": [30, 41, 181, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 207, 208, 212, 213, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 237, 328, 333, 341, 343, 349, 354, 358, 361, 363, 417, 421], "procedur": 30, "think": 30, "sens": [30, 45], "5574077": 30, "1850398": 30, "5463025": 30, "8422884": 30, "91601413": 30, "9647598": 30, "3738229": 30, "1597457": 30, "0963247": 30, "9955841": 30, "3278579": 30, "multi": [30, 42, 60, 328, 339, 341, 343, 430, 431, 442, 448, 463, 474], "seper": [30, 241, 261], "pars": [30, 60], "satisfi": [30, 341, 365], "ignor": [30, 60, 82, 93, 390, 401, 479, 483], "far": [30, 39, 44, 45, 390, 391, 401], "asid": [30, 59], "irrelev": [30, 38], "increasingli": 30, "complex": [30, 46, 47, 48, 60, 341, 346, 359], "shown": [30, 41, 43, 45, 60, 82, 93, 181, 185, 223, 224, 238, 341, 344, 370, 374, 375, 377, 379, 422, 424, 427, 428], "rule": [30, 32, 33, 36, 37, 38, 101, 107, 110, 123, 181, 190, 195, 200, 225, 230, 341, 342, 343, 354, 358], "count": [30, 46, 131, 169, 341, 363, 370, 375, 422, 423, 424, 439, 440, 441], "14254655": 30, "1578213": 30, "380515": 30, "11": [30, 33, 181, 185, 341, 354, 370, 375, 377, 408, 409, 410, 412, 430, 431], "12": [30, 33, 241, 266, 341, 354, 361, 370, 375, 377, 379, 408, 409, 410, 412, 430, 431], "shift": [30, 41, 181, 193, 195, 370, 379], "sequenc": [30, 38, 59, 131, 140, 141, 241, 245, 280, 320, 326, 370, 380, 382, 463, 472, 477, 478, 485, 486], "15": [30, 328, 331, 341, 354, 361, 370, 377, 379, 410, 412, 417, 420, 430, 431], "bit": [30, 33, 36, 45, 101, 117, 118, 119, 181, 192, 193, 195, 320, 322, 327, 430, 435, 437], "trivial": 30, "By": [30, 33, 40, 47, 48, 241, 252, 253, 341, 363, 370, 377, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "demonstr": [30, 45], "non": [30, 33, 37, 38, 43, 79, 80, 101, 107, 120, 181, 220, 221, 328, 331, 341, 344, 352, 359, 361, 363, 364, 417, 418, 419, 420, 430, 432, 433, 434, 435, 438, 439, 440, 441, 475, 476, 479, 483], "float32": [30, 38, 101, 105, 106, 181, 226, 320, 323, 370, 374, 408, 409], "z": [30, 33, 43, 45, 131, 169, 181, 185, 208, 223, 224, 241, 244, 245, 341, 343, 366, 367, 368, 430, 431], "dictat": [30, 36, 40, 41], "exlud": 30, "13": [30, 33, 328, 335, 341, 354, 370, 377, 408, 409, 410, 412, 430, 431], "unit": [31, 32, 60, 71, 72, 73, 74, 131], "test_array_api": [31, 32], "thoroughli": [31, 32], "On": [32, 44, 48], "map": [32, 33, 37, 41, 46, 59, 60, 131, 140, 390, 397, 398, 402, 403, 463, 474], "collect": [32, 59, 71, 79, 131, 241, 304, 320, 328, 366, 390, 403, 408, 410, 449, 463, 477, 479], "test_ivi": 32, "properti": [32, 33, 37, 45, 46, 47, 131, 143, 475, 476, 479, 480, 481, 482, 484], "pytest": 32, "fixtur": 32, "ones": [32, 43, 45, 46, 82, 87, 96, 241, 283, 320, 326, 442], "commit": 32, "consum": [32, 41, 131], "300": 32, "hit": [32, 43], "permit": [32, 36, 41], "action": 32, "eleg": 32, "intellig": 32, "sampl": [32, 320, 321, 324, 328, 336, 410, 411, 413, 414, 430, 436, 438, 463, 471], "rang": [32, 46, 47, 48, 82, 83, 91, 92, 430, 435, 437, 442], "previou": [32, 41, 48, 60, 304, 307, 311], "cach": [32, 33, 131, 149, 241, 247], "select": [32, 43, 45, 48, 60], "unexplor": 32, "known": 32, "repeatedli": [32, 390, 399], "upload": 32, "artifact": 32, "ci": [32, 60], "parametr": 32, "strategi": 32, "statement": [32, 60], "plai": [32, 48], "todo": 32, "helper": [32, 46], "arbitrari": [32, 33, 37, 41, 47, 60, 82, 93, 101, 108, 123, 131, 160, 161, 163], "verifi": [32, 38, 39, 45, 442, 448], "truth": [32, 181, 201, 207, 208, 212, 213, 227], "opt": [32, 45], "defer": [32, 33, 36, 37, 38, 39, 40], "well": [32, 40, 47, 48, 59, 241, 269, 341, 358], "suffic": [32, 35], "catch": [32, 241, 255], "systemat": 32, "compar": [32, 46, 241, 242, 244, 245, 422, 423, 424, 426, 427, 428, 429], "safeguard": 32, "inabl": 32, "leav": [32, 33, 35, 37, 38, 40, 41, 46, 47, 370, 382, 390, 391, 392, 400, 401, 402], "fact": [32, 46], "num_gpu": [32, 39, 131], "four": [33, 38, 41, 46], "categor": [33, 39], "mutual": [33, 37], "exclus": [33, 37, 48, 82, 83, 241, 252, 276, 277, 279, 304, 310, 410, 412], "constitut": [33, 43, 430, 436, 438], "venn": 33, "diagram": 33, "lowest": [33, 60, 390, 402, 410, 412], "light": [33, 60], "wherea": [33, 36, 38, 39, 41, 48], "hand": [33, 60], "themselv": [33, 38, 39, 47, 390, 391], "cross_entropi": [33, 40, 366, 369], "pred": [33, 40, 366, 367, 368, 369], "epsilon": [33, 40, 47, 304, 306, 307, 311, 341, 352, 355, 366, 367, 368, 369, 408, 409, 477, 478, 479, 480, 481], "1e": [33, 40, 47, 48, 241, 266, 304, 306, 307, 311, 341, 359, 366, 367, 368, 369, 408, 409, 442, 479, 480, 481, 482, 484], "clip": [33, 40, 43, 46, 48, 181, 223, 224, 241, 248, 249, 370, 442], "log_pr": [33, 40], "log": [33, 40, 43, 46, 82, 92, 181, 216, 218, 341, 357, 442], "neg": [33, 40, 71, 73, 82, 83, 87, 181, 209, 210, 225, 229, 230, 341, 359, 363, 364, 370, 375, 379, 439, 440, 441], "sum": [33, 38, 40, 43, 131, 160, 161, 162, 163, 175, 181, 185, 218, 241, 253, 257, 286, 287, 341, 359, 362, 364, 430, 431, 436], "array_arg": 33, "typic": 33, "whatsoev": 33, "commonli": [33, 430, 436, 438], "outsid": [33, 39, 43, 45, 48, 370, 371, 382], "cache_fn": [33, 241], "stable_divid": [33, 241], "denomin": [33, 60, 241, 260, 266, 289, 294, 295, 408, 409, 477, 478], "divis": [33, 181, 195, 200, 206, 230, 241, 260, 266, 289, 294, 295, 304, 306, 307, 311, 479, 480, 481], "leaf": [33, 46, 390, 391, 400, 401], "piec": [33, 35, 36, 43], "deal": [33, 60], "batch": [33, 37, 46, 131, 173, 174, 241, 261, 320, 325, 328, 337, 341, 364, 386, 387, 388, 389, 408, 409, 477, 478], "concurr": 33, "weight": [33, 37, 47, 48, 304, 306, 307, 309, 311, 312, 313, 328, 337, 338, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 479, 481, 482], "modif": 33, "_wrap_funct": [33, 35], "appear": [33, 38, 39, 40, 45, 370, 374], "non_wrapped_funct": [33, 38, 39, 40], "dure": [33, 38, 39, 40, 60, 79, 80, 241, 301, 304, 306, 307, 311, 341, 349, 386, 387, 388, 389, 430, 436, 438, 475, 476, 479, 480, 481, 483], "static": [33, 60, 79, 80], "children": 33, "kei": [33, 37, 46, 131, 143, 241, 250, 328, 339, 340, 386, 387, 388, 390, 393, 399, 403, 452, 453, 463, 474, 479, 483], "chain": [33, 36, 37, 47, 48, 60, 386, 387, 388, 390, 403, 485, 486], "shallowest": 33, "deepest": 33, "67": 33, "integ": [33, 38, 45, 82, 83, 89, 101, 119, 122, 123, 181, 182, 191, 192, 193, 194, 195, 196, 197, 205, 206, 222, 229, 230, 231, 240, 341, 351, 363, 364, 370, 380, 410, 412, 415, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "17": [33, 71, 73], "18": [33, 341, 354, 430, 431], "22": [33, 341, 354, 430, 431], "25": [33, 341, 348, 366, 368, 408, 409, 430, 431], "group": [33, 37, 320, 326], "briefli": [33, 46], "can_cast": [33, 38, 101], "cast": [33, 38, 101, 107, 110, 320, 322, 327, 370, 372, 430, 435, 437, 442], "set_default_dtyp": [33, 38, 101], "default_dtyp": [33, 38, 101], "get_all_arrays_on_dev": 33, "nested_map": [33, 390], "index_nest": [33, 390], "__dict__": [34, 43, 45], "ivy_original_dict": [34, 43], "string": [34, 38, 39, 43, 46, 101, 105, 106, 116, 120, 130, 131, 147, 148, 149, 150, 164, 170, 176, 177, 180, 241, 254], "unmodifi": [34, 38], "loop": [34, 60, 386, 387, 388, 389], "solv": [34, 44, 59, 341], "achiev": [35, 46, 48], "_wrap_or_unwrap_funct": 35, "_function_wrap": 35, "logic": [35, 36, 38, 39, 45, 181, 219, 220, 221, 439, 440, 441, 442], "independenli": 35, "topic": [35, 45], "tf": [36, 38, 39, 40, 41, 43, 48, 60, 442], "empti": [36, 38, 39, 82, 83, 430, 436, 437, 439, 440, 441], "overwritten": 36, "wrapper": [36, 40, 41, 45], "self": [36, 43, 45, 46, 47, 48, 442, 479, 483], "_data": [36, 45], "organiz": [36, 37], "inherit": [36, 37, 45], "arraywithelementwis": 36, "underpin": [36, 37, 43], "programmat": [36, 37], "backup": [36, 37], "accident": [36, 37], "readabl": [36, 37, 41, 45, 46], "absent": [36, 37], "perk": [36, 37], "auto": [36, 37, 46], "__setitem__": [36, 37, 45], "sin": [36, 43, 181, 241, 261, 442], "throw": [36, 45], "agnost": [36, 41, 43, 45, 48, 60, 442], "imposs": 36, "coupl": [36, 45, 47], "anywai": 36, "secondli": [36, 38], "five": [37, 46], "all_tru": [37, 46], "evalu": [37, 181, 203, 204, 214, 215, 216, 217, 226, 232, 236, 390, 391, 400, 401, 439, 440, 441], "boolean": [37, 82, 89, 101, 107, 120, 130, 131, 166, 178, 181, 191, 192, 194, 196, 219, 220, 221, 222, 241, 242, 244, 245, 269, 270, 271, 275, 276, 277, 278, 279, 296, 303, 304, 310, 386, 387, 388, 390, 400, 430, 434], "to_iter": 37, "travers": [37, 43, 45, 390, 402], "containerbas": 37, "decis": [37, 43, 45], "bind": 37, "multi_map": 37, "diff": [37, 46], "displai": [37, 46], "common_key_chain": 37, "recap": [37, 47], "arbitrarili": [37, 46], "multi_map_in_static_method": 37, "static_add": 37, "static_tan": 37, "static_rol": 37, "roll": [37, 41, 370], "containerwithelementwis": 37, "__repr__": 37, "control": [37, 38, 40, 45, 46, 59], "__getattr__": 37, "underli": [37, 181, 191, 194, 196, 222], "queri": [37, 38, 45, 131, 164, 174, 328, 339, 340, 463, 474], "__setattr__": 37, "__getitem__": 37, "__contains__": 37, "__getstate__": 37, "__setstate__": 37, "pickl": [37, 46], "unpickl": 37, "static_subtract": 37, "static_multipli": 37, "static_divid": 37, "int8": 38, "int16": [38, 430, 435, 437], "int32": [38, 430, 431, 435, 437], "int64": [38, 181, 195, 430, 435, 437], "uint8": [38, 320, 322, 327], "uint16": [38, 430, 435, 437], "uint32": [38, 430, 435, 437], "uint64": [38, 430, 435, 437], "bfloat16": 38, "float16": 38, "float64": [38, 101, 107], "deriv": [38, 39, 45, 47, 82, 86, 90, 96, 100, 304, 306, 307, 309, 311, 312, 313, 390, 392, 402, 475, 479, 483, 485], "constructor": [38, 39, 45, 241, 243, 485, 486], "all_dtyp": 38, "all_numeric_dtyp": 38, "all_int_dtyp": 38, "all_float_dtyp": 38, "fall": [38, 42, 442, 475, 476, 479, 483], "replic": 38, "valid": [38, 43, 101, 111, 328, 329, 330, 331, 332, 333, 334, 335, 370, 382, 439, 440, 441, 463, 464, 465, 466, 467, 468, 469, 470], "invalid": [38, 341, 363, 439, 440, 441], "thirdli": 38, "native_float32": 38, "importantli": [38, 45, 48, 59], "unsupport": 38, "longer": [38, 40], "varieti": [38, 39], "astyp": [38, 40, 101], "broadcast_to": [38, 101], "result_typ": [38, 101], "conveni": [38, 39, 41, 44, 46, 47], "arguabl": [38, 39], "compound": 38, "reduct": [38, 45, 241, 257, 286, 287, 439, 440, 441, 442], "overflow": [38, 181, 185, 430, 437], "_function_w_arrays_dtype_n_dev_handl": [38, 39], "non_dtype_wrapped_funct": [38, 39], "applic": [38, 39, 47, 328, 339, 340, 390, 396, 402], "arr": [38, 39, 408, 409], "scalar": [38, 43, 48, 60, 82, 90, 241, 283, 300, 303, 341, 364], "default_int_dtyp": [38, 101], "default_float_dtyp": [38, 101], "settabl": [38, 39], "set_default_int_dtyp": [38, 101], "set_default_float_dtyp": [38, 101], "arang": [38, 82, 91, 92, 320, 323, 327, 430, 431, 442], "dim": [38, 241, 283, 320, 321, 326, 341, 361, 463, 474], "bear": 38, "popul": [38, 39, 43, 410, 411, 430, 436, 438], "jnp": [38, 39, 40, 41, 48, 442], "jaxarrai": [38, 39, 40, 41], "mx": [38, 39, 40, 442], "nd": [38, 39, 40, 43, 48, 442], "One": [38, 43, 45, 46, 241, 257, 370, 378, 410, 412], "deleg": 38, "fill_valu": [38, 82, 89, 90, 181, 208], "shape_to_tupl": [38, 241], "item": [38, 43, 45, 46, 48, 101, 113, 131, 140, 141, 143, 150, 152, 154, 156, 158, 162, 241, 250, 268, 294, 295, 390, 395, 396, 397, 398, 402, 406, 407, 442, 475, 476], "as_n": [38, 101, 113, 114, 115, 116, 131, 150, 151], "cpu": [39, 60, 82, 91, 92, 131, 150, 151, 167, 170, 176, 177, 180, 241, 262, 263, 283, 286, 287, 410, 411, 412, 414, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "gpu": [39, 45, 60, 131, 150, 166, 168, 410, 412], "idx": [39, 45], "tpu": [39, 131, 178], "get_all_ivy_arrays_on_dev": [39, 131], "aliv": [39, 131, 165, 169, 171, 241, 264, 282, 284], "total_mem_on_dev": [39, 131], "amount": [39, 131, 177, 366, 367, 368, 369], "memori": [39, 40, 58, 60, 131, 149, 170, 175, 177, 180, 328, 338, 430, 431, 442], "dev_util": [39, 131], "num_cpu_cor": [39, 131], "default_devic": [39, 43, 131], "random_uniform": [39, 47, 410, 442], "dual": 39, "thrown": [39, 60, 241, 274], "unless": [39, 40, 60, 181, 225, 241, 283], "distribut": [39, 60, 131, 152, 156, 157, 158, 159, 328, 336, 366, 367, 368, 369, 410, 411, 412, 413, 414, 463, 471, 475, 476], "non_dev_wrapped_funct": 39, "omit": [39, 40, 41, 422, 423, 424, 426], "rare": [39, 60], "set_default_devic": [39, 131], "overwrit": [40, 43, 131, 175], "program": 40, "old": 40, "strictli": 40, "inplace_upd": [40, 241, 452, 453], "ration": 40, "technic": [40, 41, 60], "speak": 40, "subtli": 40, "ensure_in_backend": [40, 241, 274], "val": [40, 45, 241, 272, 273, 274, 288, 289], "x_nativ": 40, "val_n": 40, "args_to_n": [40, 45], "is_ivy_arrai": [40, 45, 241], "is_vari": [40, 304], "assign": [40, 45], "elif": 40, "irrespect": [40, 45, 101, 107], "inclus": [40, 82, 83, 410, 412], "unspecifi": [40, 181, 229, 230, 341, 346, 370, 382], "predominantli": [40, 59], "_function_w_arrays_n_out_handl": 40, "math": [40, 48, 442], "presenc": 40, "altern": [40, 46], "_wrap_fn": 40, "maxim": [40, 43], "inner": [40, 45, 341, 346, 349, 386, 387, 388, 389, 430, 431], "third": [40, 60, 341, 359, 422, 423], "minim": [40, 43], "addition": [40, 41], "had": 40, "handle_out_argu": [40, 61], "leverag": 40, "reshap": [40, 43, 45, 48, 320, 323, 327, 370, 442], "asarrai": [40, 82, 328, 329, 422, 424], "equival": [40, 46, 48, 82, 83, 181, 195, 220, 221, 230, 341, 352, 355, 358, 364], "input_arrai": 40, "adress": 41, "revisit": [41, 48], "dedic": [41, 45, 47, 304, 318, 452, 453], "posit": [41, 46, 59, 81, 82, 87, 101, 118, 131, 155, 159, 163, 181, 182, 209, 210, 225, 230, 241, 261, 341, 342, 370, 374, 379, 410, 415, 417, 420, 439, 440, 441, 452, 453], "__div__": 41, "dicat": 41, "detect": [41, 46, 47, 390, 391, 401], "futher": 41, "brittl": 41, "intend": [41, 430, 437], "freeli": 41, "inde": [41, 60], "flexibl": 41, "original_typ": 41, "cumbersom": 41, "gain": [42, 47, 454], "sound": 42, "higher": [42, 43, 48, 60, 304, 307, 309, 311, 312, 313], "overview": [42, 59], "handler": [42, 44, 48, 442], "transpil": [42, 44, 442, 448], "fledg": [43, 44], "label": [43, 44, 48, 366, 367, 368, 369], "cuda": [43, 46, 60, 82, 91, 92, 131, 140, 147, 241, 262, 263, 283, 286, 287, 410, 411, 412, 414, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486], "syntact": [43, 48], "align": [43, 45, 442, 448], "x_min": [43, 48, 370, 371], "x_max": [43, 48, 370, 371], "clip_by_valu": [43, 48], "clamp": [43, 48], "mayb": [43, 45, 430, 431], "behavior": [43, 60, 181, 229, 230, 422, 423, 424, 426], "fit": [43, 320, 326, 370, 377], "logspac": [43, 82], "construct": [43, 44, 47, 48, 370, 384, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "stop": [43, 60, 82, 83, 91, 92, 131, 146, 175, 304, 307, 309, 311, 312, 313, 315, 386, 387, 388, 389, 479, 480, 481, 482, 483, 484], "num": [43, 82, 91, 92, 320, 326], "power_seq": 43, "linspac": [43, 82, 83, 442], "okai": 43, "bound": 43, "set_framework": [43, 45, 46, 48, 442], "resid": [43, 47], "interv": [43, 48, 82, 83, 91, 92, 341, 363, 370, 371, 382, 410, 412, 414, 439, 440, 441], "edg": [43, 48, 370, 371, 373, 385, 442], "wise": [43, 48, 71, 72, 73, 74, 75, 76, 77, 78, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 202, 206, 207, 208, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 237, 241, 260, 370, 371, 430, 431], "larger": [43, 48, 101, 118, 370, 371, 379, 430, 436, 438], "param": [43, 48, 241, 262, 263], "minimum": [43, 48, 131, 181, 182, 241, 265, 266, 288, 289, 294, 295, 370, 371, 417, 419, 430, 432, 434, 442], "ml_framework": [43, 48, 82, 83], "current_framework": [43, 48], "furthermor": 43, "concaten": [43, 46, 131, 160, 241, 261, 370, 372, 442], "framework_handl": 43, "face": 43, "verbos": [43, 442, 489], "cprint": [43, 488], "framework_stack": 43, "stack": [43, 82, 97, 98, 320, 326, 341, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 359, 360, 362, 370, 390, 391, 400, 401, 442, 463, 472], "_determine_framework_from_arg": 43, "valueerror": [43, 370, 381], "get_framework": 43, "neither": [43, 181, 185, 225], "callabl": [43, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 131, 175, 241, 247, 255, 257, 386, 387, 388, 389, 390, 396, 400, 401, 402], "slightli": [43, 47, 430, 431], "illustr": [43, 59], "un": [43, 101, 120], "v": [43, 46, 47, 48, 328, 340, 442, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 483, 485, 486], "lstm_updat": [43, 328], "nn": [43, 48, 82, 93, 442], "init_h": [43, 328, 338], "init_c": [43, 328, 338], "kernel": [43, 60, 328, 338], "recurrent_kernel": [43, 328, 338], "bia": [43, 47, 328, 337, 338, 463, 464, 465, 466, 467, 468, 469, 470, 473], "recurrent_bia": [43, 328, 338], "x_shape": 43, "batch_shap": [43, 45, 48, 241, 283, 320, 321, 322, 323, 325, 326, 327, 328, 338, 339, 340, 341, 365, 410, 411, 463, 472], "timestep": [43, 328, 338, 463, 472], "input_channel": [43, 47, 463, 464, 465, 466, 467, 468, 469, 472, 473], "x_flat": 43, "wi": 43, "wi_x": 43, "wii_x": 43, "wif_x": 43, "wig_x": 43, "wio_x": 43, "recurr": [43, 328, 338], "wh": 43, "lstm": [43, 328, 338, 463], "ht": 43, "ct": 43, "hts_list": 43, "unrol": [43, 46, 328, 338], "wii_xt": 43, "wif_xt": 43, "wig_xt": 43, "wio_xt": 43, "zip": 43, "unstack": [43, 46, 241, 442], "htm1": 43, "ctm1": 43, "wh_htm1": 43, "whi_htm1": 43, "whf_htm1": 43, "whg_htm1": 43, "who_htm1": 43, "num_or_size_split": [43, 370, 380], "sigmoid": [43, 46, 47, 71, 442], "ft": 43, "gt": 43, "tanh": [43, 71, 181, 442], "ot": 43, "expand_dim": [43, 46, 370, 442], "offici": 43, "reliabl": 43, "sacrific": 43, "hear": 43, "virtu": 43, "pure_ivi": 43, "reduce_mean": [43, 46, 47, 48, 442], "reduce_sum": [43, 442], "reduce_var": 43, "compile_graph": [43, 48], "pure_torch": 43, "cat": [43, 48], "backbon": [43, 46], "_layer": 43, "super": [43, 46, 47, 48], "clean": [43, 44, 46], "w": [43, 46, 47, 241, 245, 304, 306, 307, 309, 311, 312, 313, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335], "random_unifrom": 43, "unclean": 43, "wx": 43, "temp": 43, "trace": [43, 60, 241, 276, 277, 279, 341], "torchscript": 43, "lambda": [43, 46, 479, 482, 484], "fn": [43, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 131, 140, 141, 241, 301, 390, 391, 396, 397, 398, 400, 401, 402, 445, 447], "example_input": [43, 79, 80], "static_argnum": [43, 79, 80], "static_argnam": [43, 79, 80], "jit": [43, 60], "low": [43, 410, 412, 414], "explor": [44, 48, 59], "frontend": 44, "treat": [44, 48, 79, 80], "abil": [44, 60], "primit": [44, 60], "experi": [44, 46, 60], "describ": [44, 48, 430, 431, 435, 436, 437], "hierarch": [44, 46, 47], "built": [44, 82, 83, 131, 463, 474, 475, 476], "straight": 45, "arraywithdevic": 45, "arraywithgener": 45, "arraywithgradi": 45, "arraywithimag": 45, "arraywithlinalg": 45, "arraywithlog": 45, "arraywithmath": 45, "arraywithmeta": 45, "arraywithrandom": 45, "arraywithreduct": 45, "assert": [45, 46, 241, 246], "is_native_arrai": [45, 241], "_shape": 45, "_size": 45, "functool": 45, "reduc": [45, 131, 175, 241, 257, 341, 356, 417, 418, 419, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "mul": 45, "len": [45, 48, 82, 93], "_dtype": 45, "_devic": 45, "_dev_str": 45, "as_ivy_dev": [45, 131], "_pre_repr": 45, "_post_repr": 45, "ndim": [45, 341, 356, 359], "size": [45, 46, 82, 91, 92, 131, 173, 174, 175, 241, 286, 320, 325, 341, 345, 350, 354, 356, 359, 363, 370, 374, 379, 380, 381, 410, 411, 413, 414, 417, 418, 420, 439, 440, 441, 463, 464, 465], "matrix_transpos": [45, 341, 361], "mt": 45, "answer": [45, 60], "perhap": [45, 46, 47, 60], "consol": 45, "typeerror": 45, "immut": 45, "pure": [45, 48, 60], "behav": 45, "claim": 45, "truli": 45, "_native_wrapp": 45, "attributeerror": 45, "scatter_nd": [45, 241, 442], "genuin": 45, "some_method": 45, "similarli": [45, 82, 93], "rewritten": 45, "__pow__": 45, "strang": 45, "power": [45, 46, 47, 181, 195, 203, 229, 241, 265, 288, 295, 341, 351, 454], "enforc": 45, "notic": 45, "inv": [45, 341, 442], "invers": [45, 59, 181, 183, 184, 186, 187, 188, 189, 190, 341, 348, 355], "_wrap_method": 45, "func_wrapp": [45, 61, 62, 63, 64, 65, 66, 67, 68, 69], "hasattr": 45, "__name__": 45, "non_wrapped_method": 45, "_method_wrap": 45, "native_arg": 45, "native_kwarg": 45, "to_ivi": 45, "inner_fn": 45, "whist": 45, "down": 45, "unwrap": 45, "transit": 45, "needlessli": 45, "randn": 45, "_unwrap_method": 45, "method_wrap": 45, "whenev": [45, 46], "parent": 45, "compartment": 45, "public": [45, 241, 250], "abc": [45, 131, 140, 146, 475, 476, 479, 483], "newshap": [45, 370, 378], "new_shap": 45, "transpos": [45, 48, 131, 162, 328, 330, 332, 334, 341, 353, 355, 430, 431, 442, 463, 465, 467, 469], "flip": [45, 46, 48, 181, 192, 370, 442], "tidi": 45, "20": [45, 181, 203, 341, 354, 361, 410, 412, 417, 420, 430, 431], "shorter": 45, "crystal": 45, "41": [45, 341, 342, 430, 437], "builtin": [45, 47], "enough": [45, 46, 47], "ton": 46, "ado": [46, 47], "dictionari": [46, 60], "incred": [46, 60], "hash": 46, "soup": 46, "walk": [46, 47], "dct": 46, "cnt": 46, "combo": [46, 442, 448], "intuit": [46, 47], "hold": [46, 241, 286, 287], "1000": 46, "uda": 46, "3333": 46, "6667": 46, "178": 46, "grad": [46, 47, 48, 442, 479, 483], "lr": [46, 47, 304, 307, 309, 311, 312, 313, 479, 480, 481, 482, 483, 484], "new_weight": 46, "0600": 46, "3100": 46, "2400": 46, "6900": 46, "delimit": 46, "autocomplet": 46, "tab": [46, 442], "midwai": 46, "agent": 46, "total_spe": 46, "total_height": 46, "total_width": 46, "ag": 46, "tot": 46, "total_": 46, "total_h": 46, "disk": [46, 320, 322], "hdf5": [46, 475, 476], "to_disk_as_hdf5": 46, "from_disk_as_hdf5": 46, "same_arrai": 46, "to_disk_as_pickl": 46, "from_disk_as_pickl": 46, "config": [46, 390, 403], "batch_siz": [46, 320, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 410, 411], "16": [46, 181, 238, 341, 354, 361, 410, 412, 430, 431], "dir": 46, "dataset": [46, 58, 442], "dropout": [46, 328, 463, 474], "adam": [46, 47, 48, 304, 306, 307, 311, 442, 479, 481], "json": 46, "to_disk_as_json": 46, "from_disk_as_json": 46, "debug": 46, "cnt0": 46, "cnt1": 46, "deep_copi": 46, "diff_0": 46, "diff_1": 46, "config0": 46, "config1": 46, "Not": [46, 47, 60, 81], "hierarchi": 46, "screen": 46, "decod": 46, "l0": 46, "l1": [46, 341, 364], "depth": [46, 47, 48, 59, 131, 155, 159, 163, 241, 268, 283, 390, 402, 475, 476], "clearer": 46, "truncat": 46, "__": 46, "flatten_key_chain": [46, 475, 476], "above_height": 46, "decoder__l0": 46, "decoder__l1": 46, "encoder__l0": 46, "encoder__l1": 46, "height": [46, 320, 326], "below_depth": 46, "l0__b": 46, "l0__w": 46, "l1__b": 46, "l1__w": 46, "with_print_limit": 46, "printabl": 46, "with_key_length_limit": 46, "length": [46, 82, 83, 93, 341, 359, 360, 370, 378, 430, 431], "with_print_ind": 46, "indent": 46, "obviou": 46, "foresight": 46, "untidili": 46, "update_ag": 46, "normalize_img": 46, "img": 46, "img_max": 46, "reduce_max": [46, 442], "img_min": 46, "reduce_min": [46, 442], "img_rang": 46, "agent_posit": 46, "agent_veloc": 46, "agent_cam_front_rgb": 46, "agent_cam_front_depth": 46, "agent_cam_rear_rgb": 46, "agent_cam_rear_depth": 46, "agent_cam_lidar": 46, "normal": [46, 370, 382, 408, 409, 410, 413, 477, 478], "cleaner": 46, "camera": 46, "front_rgb": 46, "front_depth": 46, "rear_rgb": 46, "rear_depth": 46, "lidar": 46, "rgb": 46, "rear": 46, "veloc": 46, "cam": 46, "cam_max": 46, "cam_min": 46, "cam_rang": 46, "Of": 46, "ideal": 46, "perman": 46, "afterward": 46, "thread": 46, "incorpor": 46, "multiprocess": [46, 60, 131, 140, 241], "queue": [46, 131, 140, 141, 241, 285, 290], "pretti": 46, "straightforward": 46, "dataload": [46, 58, 442], "_cnt": 46, "img_": 46, "_dataset_s": 46, "_batch_siz": 46, "_count": [46, 47], "__next__": 46, "filenam": 46, "img_fnam": 46, "list_stack": 46, "fname": 46, "loaded_img": 46, "cv2": 46, "imread": 46, "from_numpi": 46, "loader": [46, 60], "32": [46, 71, 73, 320, 327, 328, 331, 341, 354, 430, 431], "batch_slic": 46, "model": [46, 47, 442], "mymodel": [46, 442], "linear0": [46, 47, 442], "64": [46, 47, 328, 335, 341, 354, 430, 431, 442, 463, 474], "linear1": [46, 47, 442], "relu": [46, 47, 71, 72, 73, 442], "x_in": [46, 47, 48, 442], "001": [46, 47, 408, 409], "loss_fn": [46, 47, 48, 442], "execute_with_gradi": [46, 47, 48, 60, 304, 442], "to_numpi": [46, 241, 442], "0145": 46, "grad_fn": 46, "addbackward0": 46, "_create_vari": 47, "output_channel": [47, 463, 464, 465, 466, 467, 468, 469, 472, 473], "with_bia": [47, 463, 473], "_input_channel": 47, "_output_channel": 47, "_w_shape": 47, "_b_shape": 47, "_with_bia": 47, "8979": 47, "3198": 47, "0196": 47, "3126": 47, "3717": 47, "9687": 47, "6958": 47, "5122": 47, "3902": 47, "8800": 47, "5613": 47, "1982": 47, "nightmar": 47, "overcom": 47, "fc": 47, "9563": 47, "direct": [47, 48, 59, 427, 429], "impact": 47, "v0": 47, "v1": 47, "6440": 47, "key0": 47, "key1": 47, "1823": 47, "8075": 47, "linear3": 47, "v2": 47, "2346": 47, "counter": 47, "hidden": [47, 328, 338, 463, 472], "fed": [47, 131, 175], "sequenti": 47, "1300": 47, "decoupl": 47, "scheme": 47, "weight_initi": [47, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473], "glorotuniform": [47, 454, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473], "bias_initi": [47, 463, 464, 465, 466, 467, 468, 469, 470, 473], "_w_init": 47, "_b_init": 47, "create_vari": [47, 454], "var_shap": [47, 454], "fan_out": [47, 454], "fan_in": [47, 454], "uniform": [47, 410, 411, 412, 414, 454, 456, 457, 460, 461], "fan_mod": [47, 454], "fan_sum": 47, "slight": 47, "misnom": 47, "belong": 47, "saw": 47, "vanilla": [47, 386, 388], "descent": [47, 304, 309, 479, 484], "lar": [47, 304, 311, 312, 479], "lamb": [47, 304, 311, 479], "beta1": [47, 304, 306, 307, 311, 479, 480, 481], "beta2": [47, 304, 306, 307, 311, 479, 480, 481], "999": [47, 304, 306, 307, 311, 479, 480, 481], "07": [47, 304, 306, 307, 311, 366, 367, 368, 369, 479, 480, 481], "stop_gradi": [47, 131, 175, 304, 307, 309, 311, 312, 313, 386, 387, 388, 389, 442, 479, 480, 481, 482, 483, 484], "compile_on_next_step": [47, 475, 476, 479, 480, 481, 482, 483, 484], "_beta1": 47, "_beta2": 47, "_epsilon": 47, "_mw": 47, "_vw": 47, "_first_pass": 47, "_should_compil": 47, "_step": [47, 479, 483], "new_v": 47, "adam_upd": [47, 304], "_lr": 47, "isinst": [47, 48, 241, 298], "_inplac": 47, "_stop_gradi": 47, "set_stat": [47, 479, 480, 481, 482, 483, 484], "mw": [47, 304, 306, 307], "vw": [47, 304, 306, 307], "revers": [48, 60, 241, 255, 370, 375], "pre": [48, 60, 131], "captur": 48, "one_hot": [48, 241, 442], "sparse_funct": 48, "num_class": [48, 410, 411], "ey": [48, 82, 328, 331, 335], "cumprod": [48, 241], "ones_lik": [48, 82, 442], "num_dim": 48, "new_axi": 48, "constitu": 48, "_linear": 48, "to_backend": 48, "jax_graph": 48, "learnabl": [48, 408, 409, 477, 478], "to_ivy_modul": [48, 452], "thinli": 48, "whilst": 48, "preserv": [48, 60, 304, 315, 370, 375], "to_haiku_modul": 48, "hk": 48, "loss_fn_t": 48, "transform": [48, 59, 328, 336, 337], "without_apply_rng": 48, "rng": 48, "prngkei": 48, "42": [48, 341, 354, 410, 415, 430, 431], "init": 48, "update_rul": 48, "01": 48, "tree_multimap": 48, "mechan": [58, 60, 442], "vision": [58, 442], "robot": [58, 442], "focus": 59, "field": [59, 341, 346, 356, 359, 422, 423, 424], "perfect": 59, "showcas": 59, "3d": [59, 463, 468, 469], "differenti": 59, "demo": [59, 442], "orient": 59, "pose": 59, "represent": [59, 81, 101, 105, 106, 112, 118, 119, 131, 147, 148, 181, 182, 185, 191, 194, 196, 222, 225, 241, 293, 298], "largest": [59, 101, 118, 119, 341, 359], "euler": [59, 81], "quaternion": 59, "rotat": 59, "matric": [59, 82, 93, 97, 98, 328, 337, 341, 342, 344, 345, 346, 347, 348, 351, 352, 353, 355, 356, 358, 359, 360, 362], "vector": [59, 82, 93, 241, 249, 328, 337, 341, 343, 346, 349, 354, 359, 360, 363, 364, 365, 463, 473], "angl": [59, 181, 189, 199, 234], "ivy_mech": 59, "target_facing_rotation_matrix": 59, "polar_to_cartesian_coord": 59, "ordin": [59, 341, 358], "warp": [59, 320, 321], "optic": 59, "flow": 59, "voxel": 59, "cloud": 59, "ivy_vis": 59, "coords_to_voxel_grid": 59, "render_pixel_coord": 59, "neural": [59, 328, 442, 449, 463], "radianc": 59, "nerf": 59, "trajectori": 59, "motion": 59, "plan": [59, 442], "mobil": 59, "ivy_robot": 59, "sample_spline_path": 59, "rigidmobil": 59, "sample_bodi": 59, "drone": 59, "sample_link": 59, "openai": 59, "swimmer": 59, "cumul": [59, 241, 252, 253], "reward": 59, "supervis": 59, "reinforc": 59, "door": [59, 60], "intersect": 59, "cartpol": 59, "mountain_car": 59, "pendulum": 59, "reacher": 59, "polici": 59, "condit": [59, 79, 80, 390, 400, 401, 417, 421], "learnt": 59, "ture": 59, "ntm": 59, "egospher": 59, "spatial": 59, "esm": 59, "ivy_memori": 59, "egocentr": 59, "room": 59, "inspir": 59, "doubt": 60, "grate": 60, "put": 60, "probe": 60, "q": [60, 328, 340, 341, 346, 356], "undergo": 60, "remark": 60, "surpris": 60, "backward": [60, 181, 230, 341, 363, 439, 440, 441], "lock": 60, "contunu": 60, "minor": 60, "xla": 60, "buffer": 60, "certain": [60, 82, 83, 91, 92], "kind": [60, 101, 118, 119, 181, 229, 430, 435, 437], "gold": 60, "dex": 60, "phase": 60, "lax": 60, "scan": 60, "tricki": 60, "predictor": 60, "tight": 60, "driver": 60, "schedul": 60, "algorithm": [60, 328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "eager": 60, "dispatch": 60, "Will": 60, "ast": 60, "dynamic": 60, "cond": 60, "jacobian": 60, "checkpoint": 60, "autodiff": 60, "shine": 60, "merci": 60, "superset": 60, "autograd": 60, "cluster": 60, "compet": 60, "paradigm": 60, "parallelis": [60, 131, 140, 141], "spmd": 60, "mixtur": 60, "expert": 60, "sophist": 60, "depart": 60, "routin": 60, "hundr": 60, "thousand": 60, "deepli": [60, 390, 392], "moment": [60, 304, 306, 307, 311, 479, 480, 481], "broadli": 60, "heavili": 60, "supplementari": 60, "drop": 60, "Is": 60, "reusabl": 60, "fanci": 60, "fusion": 60, "lose": 60, "vmap": 60, "pmap": 60, "overhead": 60, "ineffici": 60, "eventu": 60, "supplement": 60, "backdoor": 60, "callback": 60, "load": 60, "record": 60, "metric": 60, "visual": 60, "somewhat": 60, "outsourc": 60, "handle_nest": 61, "infer_devic": 61, "infer_dtyp": 61, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 61, "outputs_to_ivy_arrai": 61, "to_native_arrays_and_back": 61, "gelu": [71, 449], "gaussian": [71, 72], "leaki": [71, 72, 73], "leaky_relu": [71, 442], "alpha": [71, 73], "rectifi": [71, 73, 74], "slope": [71, 73], "39": [71, 73, 341, 354, 430, 431], "85": [71, 73], "48": [71, 73, 341, 354, 430, 431], "88": [71, 73, 341, 354, 430, 431], "269": [71, 75], "731": [71, 75], "881": [71, 75], "214": [71, 75], "978": [71, 75], "891": [71, 75], "softmax": [71, 328, 339, 340, 442], "422": [71, 76], "155": [71, 76], "0768": [71, 76], "231": [71, 76], "693": [71, 76, 366, 369], "49": [71, 76, 430, 431], "147": [71, 76], "363": [71, 76], "softplu": [71, 442], "3461": [71, 77], "6491": [71, 77], "5349962": [71, 77], "4203641": [71, 77], "hyperbol": [71, 78, 181, 184, 187, 190, 199, 234, 239], "55": [71, 78, 341, 354, 430, 431], "501": [71, 78], "762": [71, 78], "964": [71, 78], "func": [79, 80, 131, 175, 241, 247, 304, 308, 390, 403], "faster": [79, 80, 430, 431], "invoc": [79, 80], "718281828459045": 81, "inf": [81, 241, 269, 303, 341, 364], "newaxi": 81, "alia": 81, "pi": 81, "141592653589793": 81, "mathemat": [81, 181, 185, 189, 204, 225, 341, 364], "evenli": [82, 83, 91, 92, 370, 380], "half": [82, 83, 410, 412, 414], "word": [82, 83, 410, 414, 452, 453], "chosen": [82, 83, 181, 189, 417, 421], "distanc": [82, 83], "adjac": [82, 83], "dimension": [82, 83, 87, 93, 341, 343, 344, 349, 352, 354, 355, 363, 364, 370, 380, 417, 418, 419, 420, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "ceil": [82, 83, 181, 442], "datatyp": [82, 84, 94, 101, 111, 121, 122], "interpret": [82, 84, 94], "fill": [82, 85, 89, 90, 95, 96, 99, 100, 410, 412], "uniniti": [82, 85, 86], "empty_lik": 82, "n_row": [82, 87], "n_col": [82, 87], "diagon": [82, 87, 97, 98, 341, 362, 430, 431], "elsewher": [82, 87, 417, 421], "row": [82, 87, 341, 358, 359, 410, 411, 417, 420], "column": [82, 87, 341, 346, 356, 358, 359, 430, 431], "upper": [82, 87, 98, 341, 342, 356, 410, 414], "from_dlpack": 82, "__dlpack__": [82, 88], "view": [82, 88, 328, 331, 335], "interchang": [82, 88, 370, 383], "full_lik": 82, "endpoint": [82, 91], "entri": [82, 91, 92, 370, 380, 390, 403], "meshgrid": 82, "xy": [82, 93], "coordin": [82, 93, 181, 189], "cartesian": [82, 93], "matrix": [82, 93, 97, 98, 241, 242, 248, 328, 337, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 365, 463, 473], "ij": [82, 93, 430, 431], "rank": [82, 93, 241, 302, 341, 343, 352, 356, 358, 362, 363, 364, 370, 373, 374, 382, 385, 417, 420, 439, 440, 441], "ni": [82, 93], "xi": [82, 93], "n1": [82, 93], "n2": [82, 93], "n3": [82, 93], "accordingli": [82, 93, 181, 204, 341, 364, 417, 419, 422, 423, 424, 426, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "xv": [82, 93], "yv": [82, 93], "tril": 82, "triangular": [82, 97, 98, 341, 342, 356], "innermost": [82, 97, 98, 341, 342, 344, 345, 346, 347, 348, 352, 353, 355, 356, 358, 359, 360, 362], "mxn": [82, 97, 98, 341, 345, 352, 353, 355, 356, 360, 362], "triu": 82, "zeros_lik": [82, 370, 371, 442], "defaultdtyp": [101, 102], "defaultfloatdtyp": [101, 103], "float_dtyp": [101, 114, 125], "defaultintdtyp": [101, 104], "as_ivy_dtyp": 101, "dtype_in": [101, 105, 106, 112, 117, 120, 121, 122, 130], "as_native_dtyp": 101, "match": [101, 107, 181, 230, 241, 280], "broadcast_arrai": 101, "incompat": [101, 109], "from_": [101, 110], "occur": [101, 110, 417, 418, 419, 422, 423, 424, 426], "closest_valid_dtyp": 101, "closest": [101, 111, 181, 197, 205, 206, 240], "convert_dtyp": 101, "summari": [101, 113, 114, 115, 124, 125, 126, 131, 144, 145, 241, 250, 254, 268, 304, 314, 319], "floatdtyp": [101, 114], "int_dtyp": [101, 115, 126], "intdtyp": [101, 115], "dtype_bit": 101, "finfo": 101, "inform": [101, 118, 119, 304, 315], "followng": [101, 118], "occupi": [101, 118, 119, 241, 286, 287], "ep": [101, 118, 341, 352, 355], "smallest": [101, 118, 119, 181, 197], "max": [101, 118, 119, 181, 223, 241, 248, 249, 257, 286, 287, 341, 352, 355, 430, 479, 481], "min": [101, 118, 119, 181, 224, 241, 257, 286, 287, 294, 341, 356, 359, 360, 364, 430], "smallest_norm": [101, 118], "precis": [101, 118, 181, 225, 235], "iinfo": 101, "encapsul": [101, 119], "invalid_dtyp": 101, "is_float_dtyp": 101, "is_int_dtyp": [101, 241, 300], "arrays_and_dtyp": [101, 123], "unset_default_dtyp": 101, "unset_default_float_dtyp": 101, "unset_default_int_dtyp": 101, "valid_dtyp": 101, "noinspect": [102, 103, 104, 132, 305], "pyshadowingnam": [102, 103, 104, 132, 305], "defaultdevic": [131, 132], "initialis": 131, "devcloneditem": 131, "multidevitem": [131, 133, 136], "devclonedit": 131, "multidevit": [131, 134, 137, 140, 141, 145], "devclonednest": 131, "max_depth": [131, 135, 138, 145, 155, 159, 163, 241, 268, 390, 402], "multidevnest": [131, 135, 138], "devdistitem": 131, "devdistit": 131, "devdistnest": 131, "devmanag": [131, 139], "dev_mapp": 131, "da_dim_s": 131, "safety_factor": 131, "min_dev_dim_s": 131, "max_dev_dim_step_ratio": 131, "min_unit_dev_tune_step": 131, "min_sf_tune_step": 131, "starting_split_factor": 131, "max_split_factor_step_s": 131, "05": [131, 408, 409], "tune_dev_alloc": 131, "tune_dev_split": 131, "mapper": [131, 140, 141], "receivess": 131, "ratio": [131, 304, 311, 320, 326, 479, 481], "safe": [131, 140], "oom": 131, "tune": 131, "da_tune_step": 131, "dim_siz": 131, "ds_tune_step": 131, "to_clon": 131, "to_distribut": 131, "multidevic": [131, 140], "parallel": [131, 140, 141], "mutlidevic": [131, 140], "repeated_config_check": 131, "tune_step": 131, "devmapp": [131, 141], "ret_fn": [131, 140, 141], "queue_class": [131, 140, 141], "worker_class": [131, 140, 141], "timeout": [131, 140, 141, 241, 285, 290], "worker": [131, 140, 141], "used_dev": [131, 140], "split_factor": [131, 140], "sf": [131, 140], "devmappermultiproc": 131, "multidev": [131, 142, 143, 144, 163], "at_dev": [131, 144, 145], "profil": 131, "save_dir": [131, 146], "as_native_dev": 131, "clear_mem_on_dev": 131, "to_dev": [131, 150], "dev_clon": 131, "deviceic": [131, 152], "dev_clone_arrai": 131, "dev_clone_it": 131, "xs": [131, 154, 158, 160, 161, 162, 241, 242, 245, 304, 308, 370, 372], "dev_clone_nest": 131, "dev_dist": 131, "dev_dist_arrai": 131, "dev_dist_it": 131, "dev_dist_nest": 131, "dev_unifi": 131, "concat": [131, 160, 161, 162, 163, 175, 241, 261, 370, 442], "concatten": [131, 160, 161, 162, 163, 175], "dev_unify_arrai": 131, "dev_unify_it": 131, "dev_unify_nest": 131, "spread": [131, 163], "gpu_is_avail": 131, "num_ivy_arrays_on_dev": 131, "percent_used_mem_on_dev": 131, "process_specif": [131, 170, 180], "percentag": [131, 170], "ram": [131, 170, 177, 180], "alon": [131, 170, 180], "print_all_ivy_arrays_on_dev": 131, "set_split_factor": 131, "scale": [131, 173, 174, 304, 312, 328, 336, 339, 340, 408, 409, 463, 471, 474, 479, 482], "chunk": [131, 173, 174, 175], "split_func_cal": 131, "max_chunk_s": [131, 175], "chunk_siz": [131, 175], "input_ax": [131, 175], "output_ax": [131, 175], "feed": [131, 175], "fist": [131, 175], "gb": [131, 177, 180], "tpu_is_avail": 131, "unset_default_devic": 131, "used_mem_on_dev": 131, "magnitud": [181, 182, 185, 225, 341, 359, 360], "aco": [181, 442], "princip": [181, 183, 186, 188], "cosin": [181, 183, 184, 198, 199], "greater": [181, 183, 186, 189, 193, 195, 205, 206, 229, 230, 232, 240, 341, 343, 370, 381, 410, 414], "acosh": [181, 442], "x1_i": [181, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 207, 208, 212, 213, 218, 219, 221, 222, 225, 227, 229, 230, 237], "x2_i": [181, 185, 189, 191, 193, 194, 195, 196, 200, 201, 206, 207, 208, 212, 213, 218, 219, 221, 222, 225, 227, 229, 230, 237], "finit": [181, 185, 189, 209, 225, 229, 230], "nonzero": [181, 185, 225, 417], "nor": [181, 185, 225], "nearest": [181, 185, 225, 231], "2019": [181, 185, 204, 225], "commut": [181, 185], "asin": [181, 442], "sine": [181, 186, 187, 233, 234], "asinh": [181, 442], "atan": [181, 442], "atan2": [181, 442], "quotient": [181, 189], "notat": [181, 189, 430, 431], "denot": [181, 189], "pair": [181, 189, 328, 340, 341, 343], "quadrant": [181, 189], "3\u03c0": [181, 189], "atanh": [181, 442], "549": [181, 190], "bitwise_and": 181, "bitwis": [181, 191, 194, 196, 222], "AND": [181, 191, 219, 439, 440], "binari": [181, 191, 194, 196, 222, 366, 367], "bitwise_invert": 181, "invert": [181, 192], "bitwise_left_shift": 181, "bitwise_or": 181, "OR": [181, 194, 221, 439, 441], "bitwise_right_shift": 181, "arithmet": [181, 195, 430, 433], "propag": [181, 195, 430, 432, 433, 434, 436, 437, 438], "thu": [181, 195, 229, 230, 341, 346], "floor": [181, 195, 241, 260, 442], "lh": [181, 195], "rh": [181, 195], "bitwise_xor": 181, "xor": [181, 196, 222], "416": [181, 198], "cosh": [181, 442], "dividend": [181, 200, 230], "divisor": [181, 200, 230, 304, 306, 307, 311, 430, 436, 438, 479, 480, 481], "erf": 181, "gauss": [181, 202], "exponenti": [181, 202, 203, 218, 229], "exp": [181, 204, 218, 442], "logarithm": [181, 203, 214, 215, 216, 217, 218, 341, 357], "7182817": [181, 203], "389056": [181, 203], "085537": [181, 203], "expm1": 181, "accur": [181, 204], "fdlibm": [181, 204], "compliant": [181, 204, 220, 221, 430, 432, 433, 434], "greatest": [181, 205, 206], "floor_divid": 181, "greater_equ": 181, "isfinit": 181, "out_i": [181, 209, 210, 211], "isinf": 181, "isnan": 181, "less_equ": 181, "log10": 181, "log1p": 181, "log2": 181, "logaddexp": 181, "logical_and": [181, 442], "logical_not": [181, 442], "NOT": [181, 220], "recommend": [181, 220, 221, 230, 430, 433], "logical_or": [181, 442], "logical_xor": 181, "threshold": [181, 223, 224], "exce": [181, 224], "product": [181, 225, 241, 252, 328, 339, 340, 341, 343, 349, 354, 361, 363, 430, 431, 435, 463, 474], "y_i": [181, 226], "not_equ": 181, "pow": 181, "expon": [181, 229, 241, 295], "versu": [181, 229], "odd": [181, 229], "remaind": [181, 241, 260, 370, 380], "modulu": [181, 230], "primarili": [181, 230], "sinh": [181, 442], "sqrt": [181, 341, 364], "squar": [181, 235, 328, 331, 341, 342, 344, 346, 347, 348, 351, 357, 358, 359], "indistinguish": [181, 235], "infinit": [181, 235], "56": [181, 238, 341, 354, 430, 431], "19": [181, 238, 370, 377], "546": [181, 238], "842": [181, 238], "916": [181, 238], "96": [181, 238, 341, 354, 430, 431], "37": [181, 238, 320, 327], "996": [181, 238], "328": [181, 238], "143": [181, 238], "38": [181, 238], "trunc": 181, "decim": [181, 240], "all_equ": 241, "equality_matrix": [241, 242], "arg_nam": 241, "array_equ": 241, "arrays_equ": 241, "r": [241, 245, 302, 341, 356, 365], "assert_supports_inplac": 241, "later": [241, 247], "clip_matrix_norm": 241, "max_norm": [241, 248, 249], "downscal": [241, 248, 249], "clip_vector_norm": 241, "container_typ": 241, "copy_arrai": 241, "cumsum": [241, 442], "current_backend_str": 241, "default_v": [241, 255], "catch_except": [241, 255], "rev": [241, 255], "with_cal": [241, 255], "einops_rearrang": 241, "axes_length": [241, 256, 257, 258], "rearrang": [241, 256, 258], "arrang": [241, 256], "einops_reduc": 241, "einops_repeat": 241, "floormod": [241, 442], "mod": [241, 260], "fourier_encod": 241, "max_freq": [241, 261], "num_band": [241, 261], "flatten": [241, 261, 341, 354, 364, 370, 377, 379, 417, 418, 419, 422, 423, 424, 426], "pad": [241, 261, 328, 329, 330, 331, 332, 333, 334, 335, 370, 373, 385, 463, 464, 465, 466, 467, 468, 469, 470], "fourier": [241, 261], "band": [241, 261], "linearli": [241, 261, 341, 358], "oppos": [241, 261], "geometr": [241, 261], "expand": [241, 261, 370, 374], "gather": [241, 263], "slice": [241, 262, 263, 390, 399], "gather_nd": [241, 442], "get_all_arrays_in_memori": 241, "get_min_bas": 241, "get_min_denomin": 241, "get_num_dim": [241, 442], "as_arrai": [241, 267, 292], "get_referrers_recurs": 241, "seen_set": [241, 268], "local_set": [241, 268], "has_nan": 241, "include_inf": [241, 269, 303], "indices_wher": [241, 442], "inplace_arrays_support": 241, "inplace_decr": 241, "decrement": [241, 272], "inplace_incr": 241, "inplace_variables_support": 241, "is_arrai": 241, "is_ivy_contain": 241, "match_kwarg": 241, "allow_dupl": [241, 280], "forkserv": [241, 281], "spawn": [241, 281], "num_arrays_in_memori": 241, "hot": [241, 283], "scatter": [241, 283, 286, 287], "overrid": [241, 283], "print_all_arrays_in_memori": 241, "queue_timeout": 241, "scatter_flat": 241, "flat": [241, 286, 370, 377], "set_min_bas": 241, "set_min_denomin": 241, "set_queue_timeout": 241, "set_tmp_dir": 241, "tmp_dr": [241, 291], "temporari": [241, 291], "y_tupl": [241, 292], "y_tensor": [241, 292], "as_tensor": [241, 292], "min_denomin": [241, 294], "stabil": [241, 294, 295, 427, 428, 429], "_min_denomin": [241, 294], "stable_pow": 241, "min_bas": [241, 295], "_min_bas": [241, 295, 408, 409, 477, 478], "supports_inplac": 241, "tmp_dir": 241, "to_list": [241, 442], "to_scalar": 241, "try_else_non": 241, "keepdim": [241, 302, 341, 350, 364, 417, 418, 419, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "unpack": [241, 302], "value_is_nan": 241, "gradienttrack": [304, 305], "with_grad": [304, 314], "adam_step": 304, "dcdw": [304, 306, 307, 309, 311, 312], "delta": [304, 306], "cost": [304, 306, 307, 309, 311, 312, 313, 386, 387, 388, 389], "ws": [304, 306, 307, 309, 311, 312, 313], "en": [304, 306, 307], "wikipedia": [304, 306, 307], "wiki": [304, 306, 307], "stochastic_gradient_desc": [304, 306, 307], "dc": [304, 306, 307, 309, 311, 312, 313], "dw": [304, 306, 307, 309, 311, 312, 313], "averag": [304, 306, 307, 311, 386, 387, 388], "forget": [304, 306, 307, 311, 479, 480, 481], "mw_tm1": [304, 307, 311], "vw_tm1": [304, 307, 311], "rate": [304, 307, 309, 311, 312, 313, 386, 387, 388, 389, 463, 474, 479, 480, 481, 482, 483, 484], "rel": [304, 307, 309, 311, 312, 313, 341, 345, 352, 355, 362, 370, 375, 379, 427, 428, 429, 442], "ws_new": [304, 307, 309, 311, 312, 313], "retain_grad": [304, 308], "dy": [304, 308, 320, 323], "dx": [304, 308, 320, 323], "retain": [304, 308], "gradient_descent_upd": [304, 386, 387, 388, 389, 442], "lamb_upd": 304, "max_trust_ratio": [304, 311, 479, 481], "decay_lambda": [304, 311, 312, 479, 481, 482], "trust": [304, 311, 479, 481], "decai": [304, 311, 312, 479, 481, 482], "lars_upd": 304, "layerwis": [304, 312, 479, 482], "optimizer_upd": 304, "effective_grad": [304, 313], "set_with_grad": 304, "preserve_typ": [304, 315], "unset_with_grad": 304, "variable_data": 304, "bilinear_resampl": [320, 442], "bilinearli": [320, 321], "num_sampl": [320, 321, 324, 410, 411], "bilinear": [320, 321], "float_img_to_uint8_img": 320, "gradient_imag": [320, 442], "linear_resampl": 320, "interpol": [320, 324], "resampl": [320, 324], "random_crop": 320, "crop_siz": [320, 325], "image_dim": [320, 325], "seed": [320, 325, 410, 442], "randomli": [320, 325, 328, 336, 463, 471], "crop": [320, 325], "2d": [320, 325, 341, 357, 463, 466, 467, 470], "nh": [320, 325], "nw": [320, 325], "stack_imag": [320, 442], "desired_aspect_ratio": [320, 326], "window": [320, 326, 328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "width": [320, 326], "uint8_img_to_float_img": 320, "820471434542632e": [320, 327], "0082513512365273e": [320, 327], "34": [320, 327], "658462758989161e": [320, 327], "003653270560797e": [320, 327], "30": [320, 327, 341, 354, 430, 431, 454, 460], "conv1d": [328, 463], "stride": [328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "data_format": [328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "nwc": [328, 329, 330, 463, 464, 465], "dilat": [328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "convolut": [328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "d_in": [328, 329, 330, 331, 332, 333, 334], "fw": [328, 329, 330, 331, 332, 333, 334, 335], "d_out": [328, 329, 330, 331, 332, 333, 334], "slide": [328, 329, 330, 331, 332, 333, 334, 335, 463, 464, 465, 466, 467, 468, 469, 470], "ncw": [328, 329, 330, 463, 464, 465], "wio": [328, 329], "conv1d_transpos": 328, "output_shap": [328, 330, 332, 334, 463, 465, 467, 469], "conv2d": [328, 442, 463], "nhwc": [328, 331, 332, 335, 463, 466, 467, 470], "fh": [328, 331, 332, 333, 334, 335], "nchw": [328, 331, 332, 335, 463, 466, 467, 470], "hwio": [328, 331], "random_norm": [328, 331, 335, 341, 359, 410], "unequ": [328, 331], "28": [328, 331, 335, 341, 354, 430, 431], "unsqueez": [328, 331, 335], "conv2d_transpos": 328, "conv3d": [328, 463], "ndhwc": [328, 333, 334, 463, 468, 469], "volum": [328, 333], "fd": [328, 333, 334], "ncdhw": [328, 333, 334, 463, 468, 469], "dhwio": [328, 333], "conv3d_transpos": 328, "depthwise_conv2d": [328, 442], "depthwis": [328, 335, 463, 470], "333": [328, 335], "inp": [328, 335], "prob": [328, 336, 410, 411, 463, 471], "bernoulli": [328, 336], "out_featur": [328, 336, 337], "incom": [328, 337], "outer_batch_shap": [328, 337], "inner_batch_shap": [328, 337], "in_featur": [328, 337], "cell": [328, 338, 463, 472], "multi_head_attent": 328, "num_head": [328, 339, 463, 474], "mask": [328, 339, 340], "to_q_fn": [328, 339], "to_kv_fn": [328, 339], "to_out_fn": [328, 339], "to_q_v": [328, 339], "to_kv_v": [328, 339], "to_out_v": [328, 339], "head": [328, 339, 442, 463, 474], "num_queri": [328, 339, 340], "x_feat_dim": [328, 339], "measur": [328, 339, 463, 474], "num_kei": [328, 339, 340], "cont_feat_dim": [328, 339], "numhead": [328, 339], "feat_dim": [328, 339, 340], "dot": [328, 339, 340, 341, 361, 363, 430, 431, 463, 474], "out_feat_dim": [328, 339], "scaled_dot_product_attent": 328, "choleski": 341, "decomposit": [341, 342, 356, 359], "symmetr": [341, 342, 346, 347, 365], "u": [341, 342, 359], "73": [341, 342], "57": [341, 342], "63": [341, 342, 354, 430, 431], "cross": [341, 366, 367, 368, 369, 442], "vif": [341, 343], "35": [341, 343, 430, 431], "det": 341, "92": [341, 344], "293": [341, 344], "47": [341, 344], "offset": [341, 345, 362, 408, 409], "axis1": [341, 345, 370, 383], "axis2": [341, 345], "eigh": 341, "eigendecomposit": [341, 346], "qlq\u1d40": [341, 346], "orthogon": [341, 346], "eig": [341, 346], "namedtupl": [341, 346, 356, 359, 422, 423, 424], "eigenvalu": [341, 346, 347], "eigenvector": [341, 346], "eigvalsh": 341, "75": [341, 348, 354], "prepend": [341, 349], "matrix_norm": 341, "ord": [341, 350, 364], "fro": [341, 350], "matrix_pow": 341, "matrix_rank": 341, "rtol": [341, 352, 355], "singular": [341, 352, 355, 359, 360], "toler": [341, 352, 355], "largest_singular_valu": [341, 352, 355], "outer": [341, 386, 387, 388, 389, 430, 431], "array_lik": [341, 354], "21": [341, 354, 430, 431], "24": [341, 354, 430, 431], "26": [341, 354, 361, 430, 431], "27": [341, 354, 430, 431], "33": [341, 354, 430, 431], "36": [341, 354, 430, 431], "45": [341, 354, 370, 380, 430, 431], "40": [341, 354, 430, 431], "44": [341, 354, 430, 431], "52": [341, 354, 430, 431], "60": [341, 354, 430, 431], "50": [341, 354, 417, 420, 430, 431], "65": [341, 354, 430, 431], "66": [341, 354, 430, 431], "72": [341, 354, 430, 431], "78": [341, 354, 430, 431], "84": [341, 354, 430, 431], "77": [341, 354, 430, 431], "91": [341, 354, 430, 431], "98": [341, 354, 430, 431], "105": [341, 354], "112": [341, 354, 430, 431], "104": [341, 354, 430, 431], "120": [341, 354], "128": [341, 354], "pinv": [341, 442], "moor": [341, 355], "penros": [341, 355], "pseudo": [341, 355], "qr": 341, "orthonorm": [341, 356, 359], "slodget": 341, "logdet": [341, 357], "equat": [341, 358, 430, 431], "coeffici": [341, 358], "svd": [341, 442], "full_matric": [341, 359], "usvh": [341, 359], "vh": [341, 359], "hermitian": [341, 359], "descend": [341, 359, 360, 427, 428, 429], "et": [341, 359], "cetera": [341, 359], "adjoint": [341, 359], "reconstruct": [341, 359, 422, 423, 425], "reconstructed_x": [341, 359], "svdval": 341, "tensordot": 341, "contract": [341, 361, 430, 431], "doubl": [341, 361], "89": [341, 361, 430, 437], "76": [341, 361, 430, 431], "vecdot": 341, "vector_norm": 341, "singleton": [341, 364, 370, 381, 417, 419, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "liter": [341, 364], "manhattan": [341, 364], "l2": [341, 364], "euclidean": [341, 364], "vector_to_skew_symmetric_matrix": [341, 442], "mathbf": [341, 365], "mathbb": [341, 365], "skew": [341, 365], "binary_cross_entropi": 366, "entropi": [366, 367, 368, 369], "predict": [366, 367, 368, 369], "smooth": [366, 367, 368, 369], "2231": [366, 367], "3567": [366, 367], "6094": [366, 367], "9163": [366, 367], "2040": [366, 367], "5108": [366, 367], "1054": [366, 367], "discret": [366, 368], "3862944": [366, 368], "35667497": [366, 368, 369], "sparse_cross_entropi": 366, "spars": [366, 369], "logit": [366, 369], "3025851": [366, 369], "357": [366, 369], "join": [370, 372, 382, 442], "constant_pad": 370, "pad_width": [370, 373, 385], "before_1": [370, 373, 385], "after_1": [370, 373, 385], "before_n": [370, 373, 385], "after_n": [370, 373, 385], "insert": [370, 374, 390, 395, 417, 418], "manipulation_funct": [370, 374], "reorder": [370, 375], "permute_dim": 370, "permut": [370, 376, 383], "repetit": [370, 377, 384], "restor": [370, 379], "with_remaind": [370, 380], "squeez": [370, 442], "famili": [370, 382], "intxx": [370, 382], "floatxx": [370, 382], "swapax": 370, "axis0": [370, 383], "tile": [370, 442], "rep": [370, 384], "zero_pad": [370, 442], "fomaml_step": 386, "inner_cost_fn": [386, 387, 388], "outer_cost_fn": [386, 387, 388], "inner_grad_step": [386, 387, 388, 389], "inner_learning_r": [386, 387, 388, 389], "inner_optimization_step": [386, 387, 388, 389], "inner_batch_fn": [386, 387, 388], "outer_batch_fn": [386, 387, 388], "average_across_step": [386, 387, 388], "inner_v": [386, 387, 388], "keep_inner_v": [386, 387, 388], "outer_v": [386, 387, 388], "keep_outer_v": [386, 387, 388], "return_inner_v": [386, 387, 388, 389], "num_task": [386, 387, 388, 389], "maml": [386, 387, 388], "recev": [386, 387, 388], "maml_step": 386, "rece": [386, 388], "reptile_step": 386, "cost_fn": [386, 389], "reptil": [386, 389], "receivng": [386, 389], "all_nested_indic": 390, "include_nest": [390, 391], "_index": [390, 391, 401], "_base": [390, 391, 400, 401], "begin": [390, 391, 401], "copy_nest": 390, "include_deriv": [390, 392, 402], "to_mut": [390, 392, 402], "mutabl": [390, 392, 402], "insert_into_nest_at_index": 390, "insert_into_nest_at_indic": 390, "map_nest_at_index": 390, "map_nest_at_indic": 390, "multi_index_nest": 390, "nested_ani": 390, "check_nest": [390, 400, 401], "conditon": [390, 400, 401], "nested_indices_wher": 390, "to_ignor": [390, 401], "_depth": [390, 402], "_tuple_check_fn": [390, 402], "_list_check_fn": [390, 402], "_dict_check_fn": [390, 402], "wherebi": [390, 402], "nested_multi_map": 390, "key_chain": [390, 403], "to_appli": [390, 403], "prune_unappli": [390, 403], "prune": [390, 403, 404, 405], "leftmost": [390, 403], "nest0": [390, 403], "funciton": [390, 403], "prune_nest_at_index": 390, "prune_nest_at_indic": 390, "set_nest_at_index": 390, "set_nest_at_indic": 390, "layer_norm": 408, "normalized_idx": [408, 409], "new_std": [408, 409, 477, 478], "mini": [408, 409, 477, 478], "gamma": [408, 409], "beta": [408, 409], "4638476": [408, 409], "8783086": [408, 409], "29276952": [408, 409], "0976": [408, 409], "3452": [408, 409], "2740": [408, 409], "1047": [408, 409], "5886": [408, 409], "2732": [408, 409], "7696": [408, 409], "7024": [408, 409], "2518": [408, 409], "57629204": [408, 409], "29217": [408, 409], "3311275": [408, 409], "58084774": [408, 409], "89134157": [408, 409], "3306142": [408, 409], "0074799": [408, 409], "5786756": [408, 409], "9311974": [408, 409], "07071576": [408, 409], "10856849": [408, 409], "16035788": [408, 409], "8774949": [408, 409], "243": [408, 409], "multinomi": 410, "population_s": [410, 411], "draw": [410, 411, 413, 414], "unnorm": [410, 411], "drawn": [410, 411, 412, 413, 414], "home": [410, 411, 412, 413, 414], "randint": [410, 442], "uniformli": [410, 412, 414], "highest": [410, 412], "parameter": [410, 413, 414], "6444774682897879": [410, 413], "boundari": [410, 414], "89150229": [410, 414], "seed_valu": [410, 415], "shuffl": [410, 442], "argmax": [417, 442], "occurr": [417, 418, 419, 422, 423], "argmin": [417, 442], "yield": [417, 421], "unique_al": 422, "x_j": [422, 423, 424, 426], "impli": [422, 423, 424, 426], "inverse_indic": [422, 423, 425], "aggreg": [422, 423], "fourth": [422, 423], "unique_count": 422, "unique_invers": 422, "unique_valu": 422, "argsort": 427, "ascend": [427, 428], "einsum": 430, "einstein": [430, 431], "summat": [430, 431], "seq": [430, 431], "imagin": [430, 431], "suppos": [430, 431], "chanc": [430, 431], "bigger": [430, 431], "jk": [430, 431], "ik": [430, 431], "1d": [430, 431, 463, 464, 465], "126": [430, 431], "510": [430, 431], "81": [430, 431], "99": [430, 431], "108": [430, 431], "117": [430, 431], "sentinel": [430, 432, 434], "unsign": [430, 435, 437], "degre": [430, 436, 438], "freedom": [430, 436, 438], "bessel": [430, 436, 438], "8164966": [430, 436], "varianc": [430, 438], "unbias": [430, 438], "autom": 442, "grow": 442, "ai": 442, "got": 442, "colab": 442, "sharp": 442, "immedi": 442, "favorit": 442, "jax_concat": 442, "tf_concat": 442, "np_concat": 442, "mx_concat": 442, "torch_concat": 442, "prompt": 442, "get_devic": 442, "reduce_prod": 442, "linalg": 442, "neural_net": 442, "ecosystem": [442, 448], "popular": [442, 448], "acceler": 442, "articl": 442, "lenton2021ivi": 442, "inter": 442, "portabl": 442, "author": 442, "lenton": 442, "daniel": 442, "pardo": 442, "fabio": 442, "falck": 442, "fabian": 442, "jame": 442, "stephen": 442, "clark": 442, "ronald": 442, "journal": 442, "arxiv": 442, "preprint": 442, "2102": 442, "02886": 442, "2021": 442, "add_array_spec": 445, "fn_array_spec": 445, "inspect": [446, 447], "geglu": 449, "native_modul": [452, 453], "native_module_class": [452, 453], "firstlayersiren": 454, "kaimingnorm": [454, 458], "negative_slop": 454, "Ones": 454, "siren": 454, "w0": [454, 460], "filter_s": [463, 464, 465], "conv1dtranspos": 463, "filter_shap": [463, 466, 467, 468, 469, 470], "conv2dtranspos": 463, "conv3dtranspos": 463, "depthwiseconv2d": 463, "num_channel": [463, 470], "bernoul": [463, 471], "num_lay": [463, 472], "return_sequ": [463, 472], "return_st": [463, 472], "get_initial_st": [463, 472], "dens": [463, 473], "multiheadattent": 463, "query_dim": [463, 474], "head_dim": [463, 474], "dropout_r": [463, 474], "context_dim": [463, 474], "with_to_q_fn": [463, 474], "with_to_kv_fn": [463, 474], "with_to_out_fn": [463, 474], "build_mod": [463, 474, 475, 476], "on_init": [463, 474, 475, 476], "__call__": [463, 474, 475, 476], "store_var": [475, 476], "arg_stateful_idx": [475, 476], "kwarg_stateful_idx": [475, 476], "fallback_to_non_compil": [475, 476, 479, 483], "with_partial_v": [475, 476], "initialz": [475, 476], "from_cal": [475, 476], "check_submod_ret": [475, 476], "get_mod_kei": [475, 476], "top_mod": [475, 476], "mod_depth": [475, 476], "mod_height": [475, 476], "mod_with_top_mod_key_chain": [475, 476], "save_weight": [475, 476], "weights_path": [475, 476], "show_mod_in_top_mod": [475, 476], "upper_depth": [475, 476], "lower_depth": [475, 476], "show_structur": [475, 476], "show_v_in_top_v": [475, 476], "sub_mod": [475, 476], "show_v": [475, 476], "track_submod_call_ord": [475, 476], "track_submod_ret": [475, 476], "v_with_top_v_key_chain": [475, 476], "layernorm": 477, "normalized_shap": [477, 478], "elementwise_affin": [477, 478], "trail": [477, 478], "affin": [477, 478], "0001": [479, 480, 481], "init_on_first_step": [479, 483], "ignore_miss": [479, 483], "overriden": [479, 483], "sgd": 479, "stochast": [479, 484], "sub_modul": [485, 486], "color": [488, 489], "green": [488, 489]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [21, 0, 0, "-", "debugger"], [61, 0, 0, "-", "func_wrapper"], [445, 0, 0, "-", "inspection"], [488, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[22, 3, 1, "", "debug_mode"], [23, 3, 1, "", "set_breakpoint_debug_mode"], [24, 3, 1, "", "set_debug_mode"], [25, 3, 1, "", "set_exception_debug_mode"], [26, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[62, 3, 1, "", "handle_nestable"], [63, 3, 1, "", "handle_out_argument"], [64, 3, 1, "", "infer_device"], [65, 3, 1, "", "infer_dtype"], [66, 3, 1, "", "inputs_to_ivy_arrays"], [67, 3, 1, "", "inputs_to_native_arrays"], [68, 3, 1, "", "outputs_to_ivy_arrays"], [69, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[71, 0, 0, "-", "activations"], [79, 0, 0, "-", "compilation"], [81, 0, 0, "-", "constants"], [82, 0, 0, "-", "creation"], [101, 0, 0, "-", "data_type"], [131, 0, 0, "-", "device"], [181, 0, 0, "-", "elementwise"], [241, 0, 0, "-", "general"], [304, 0, 0, "-", "gradients"], [320, 0, 0, "-", "image"], [328, 0, 0, "-", "layers"], [341, 0, 0, "-", "linear_algebra"], [366, 0, 0, "-", "losses"], [370, 0, 0, "-", "manipulation"], [386, 0, 0, "-", "meta"], [390, 0, 0, "-", "nest"], [408, 0, 0, "-", "norms"], [410, 0, 0, "-", "random"], [417, 0, 0, "-", "searching"], [422, 0, 0, "-", "set"], [427, 0, 0, "-", "sorting"], [430, 0, 0, "-", "statistical"], [439, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[72, 3, 1, "", "gelu"], [73, 3, 1, "", "leaky_relu"], [74, 3, 1, "", "relu"], [75, 3, 1, "", "sigmoid"], [76, 3, 1, "", "softmax"], [77, 3, 1, "", "softplus"], [78, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[80, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[81, 4, 1, "", "e"], [81, 4, 1, "", "inf"], [81, 4, 1, "", "nan"], [81, 4, 1, "", "newaxis"], [81, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[83, 3, 1, "", "arange"], [82, 3, 1, "", "array"], [84, 3, 1, "", "asarray"], [85, 3, 1, "", "empty"], [86, 3, 1, "", "empty_like"], [87, 3, 1, "", "eye"], [88, 3, 1, "", "from_dlpack"], [89, 3, 1, "", "full"], [90, 3, 1, "", "full_like"], [91, 3, 1, "", "linspace"], [92, 3, 1, "", "logspace"], [93, 3, 1, "", "meshgrid"], [94, 3, 1, "", "native_array"], [95, 3, 1, "", "ones"], [96, 3, 1, "", "ones_like"], [97, 3, 1, "", "tril"], [98, 3, 1, "", "triu"], [99, 3, 1, "", "zeros"], [100, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[101, 1, 1, "", "DefaultDtype"], [101, 1, 1, "", "DefaultFloatDtype"], [101, 1, 1, "", "DefaultIntDtype"], [105, 3, 1, "", "as_ivy_dtype"], [106, 3, 1, "", "as_native_dtype"], [107, 3, 1, "", "astype"], [108, 3, 1, "", "broadcast_arrays"], [109, 3, 1, "", "broadcast_to"], [110, 3, 1, "", "can_cast"], [111, 3, 1, "", "closest_valid_dtype"], [112, 3, 1, "", "convert_dtype"], [113, 3, 1, "", "default_dtype"], [114, 3, 1, "", "default_float_dtype"], [115, 3, 1, "", "default_int_dtype"], [116, 3, 1, "", "dtype"], [117, 3, 1, "", "dtype_bits"], [118, 3, 1, "", "finfo"], [119, 3, 1, "", "iinfo"], [120, 3, 1, "", "invalid_dtype"], [121, 3, 1, "", "is_float_dtype"], [122, 3, 1, "", "is_int_dtype"], [123, 3, 1, "", "result_type"], [124, 3, 1, "", "set_default_dtype"], [125, 3, 1, "", "set_default_float_dtype"], [126, 3, 1, "", "set_default_int_dtype"], [127, 3, 1, "", "unset_default_dtype"], [128, 3, 1, "", "unset_default_float_dtype"], [129, 3, 1, "", "unset_default_int_dtype"], [130, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[101, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[101, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[101, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[131, 1, 1, "", "DefaultDevice"], [133, 1, 1, "", "DevClonedItem"], [134, 1, 1, "", "DevClonedIter"], [135, 1, 1, "", "DevClonedNest"], [136, 1, 1, "", "DevDistItem"], [137, 1, 1, "", "DevDistIter"], [138, 1, 1, "", "DevDistNest"], [131, 1, 1, "", "DevManager"], [140, 1, 1, "", "DevMapper"], [141, 1, 1, "", "DevMapperMultiProc"], [131, 1, 1, "", "MultiDev"], [143, 1, 1, "", "MultiDevItem"], [144, 1, 1, "", "MultiDevIter"], [145, 1, 1, "", "MultiDevNest"], [146, 1, 1, "", "Profiler"], [147, 3, 1, "", "as_ivy_dev"], [148, 3, 1, "", "as_native_dev"], [149, 3, 1, "", "clear_mem_on_dev"], [150, 3, 1, "", "default_device"], [151, 3, 1, "", "dev"], [152, 3, 1, "", "dev_clone"], [153, 3, 1, "", "dev_clone_array"], [154, 3, 1, "", "dev_clone_iter"], [155, 3, 1, "", "dev_clone_nest"], [156, 3, 1, "", "dev_dist"], [157, 3, 1, "", "dev_dist_array"], [158, 3, 1, "", "dev_dist_iter"], [159, 3, 1, "", "dev_dist_nest"], [160, 3, 1, "", "dev_unify"], [161, 3, 1, "", "dev_unify_array"], [162, 3, 1, "", "dev_unify_iter"], [163, 3, 1, "", "dev_unify_nest"], [164, 3, 1, "", "dev_util"], [165, 3, 1, "", "get_all_ivy_arrays_on_dev"], [166, 3, 1, "", "gpu_is_available"], [167, 3, 1, "", "num_cpu_cores"], [168, 3, 1, "", "num_gpus"], [169, 3, 1, "", "num_ivy_arrays_on_dev"], [170, 3, 1, "", "percent_used_mem_on_dev"], [171, 3, 1, "", "print_all_ivy_arrays_on_dev"], [172, 3, 1, "", "set_default_device"], [173, 3, 1, "", "set_split_factor"], [174, 3, 1, "", "split_factor"], [175, 3, 1, "", "split_func_call"], [176, 3, 1, "", "to_dev"], [177, 3, 1, "", "total_mem_on_dev"], [178, 3, 1, "", "tpu_is_available"], [179, 3, 1, "", "unset_default_device"], [180, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[131, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "da_tune_step"], [131, 5, 1, "", "dim_size"], [131, 2, 1, "", "ds_tune_step"], [131, 2, 1, "", "map"], [131, 2, 1, "", "repeated_config_check"], [131, 5, 1, "", "tune_step"], [131, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[141, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[131, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "items"], [143, 2, 1, "", "keys"], [143, 5, 1, "", "shape"], [143, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "at_dev"], [144, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "start"], [146, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[182, 3, 1, "", "abs"], [183, 3, 1, "", "acos"], [184, 3, 1, "", "acosh"], [185, 3, 1, "", "add"], [186, 3, 1, "", "asin"], [187, 3, 1, "", "asinh"], [188, 3, 1, "", "atan"], [189, 3, 1, "", "atan2"], [190, 3, 1, "", "atanh"], [191, 3, 1, "", "bitwise_and"], [192, 3, 1, "", "bitwise_invert"], [193, 3, 1, "", "bitwise_left_shift"], [194, 3, 1, "", "bitwise_or"], [195, 3, 1, "", "bitwise_right_shift"], [196, 3, 1, "", "bitwise_xor"], [197, 3, 1, "", "ceil"], [198, 3, 1, "", "cos"], [199, 3, 1, "", "cosh"], [200, 3, 1, "", "divide"], [201, 3, 1, "", "equal"], [202, 3, 1, "", "erf"], [203, 3, 1, "", "exp"], [204, 3, 1, "", "expm1"], [205, 3, 1, "", "floor"], [206, 3, 1, "", "floor_divide"], [207, 3, 1, "", "greater"], [208, 3, 1, "", "greater_equal"], [209, 3, 1, "", "isfinite"], [210, 3, 1, "", "isinf"], [211, 3, 1, "", "isnan"], [212, 3, 1, "", "less"], [213, 3, 1, "", "less_equal"], [214, 3, 1, "", "log"], [215, 3, 1, "", "log10"], [216, 3, 1, "", "log1p"], [217, 3, 1, "", "log2"], [218, 3, 1, "", "logaddexp"], [219, 3, 1, "", "logical_and"], [220, 3, 1, "", "logical_not"], [221, 3, 1, "", "logical_or"], [222, 3, 1, "", "logical_xor"], [223, 3, 1, "", "maximum"], [224, 3, 1, "", "minimum"], [225, 3, 1, "", "multiply"], [226, 3, 1, "", "negative"], [227, 3, 1, "", "not_equal"], [228, 3, 1, "", "positive"], [229, 3, 1, "", "pow"], [230, 3, 1, "", "remainder"], [231, 3, 1, "", "round"], [232, 3, 1, "", "sign"], [233, 3, 1, "", "sin"], [234, 3, 1, "", "sinh"], [235, 3, 1, "", "sqrt"], [236, 3, 1, "", "square"], [237, 3, 1, "", "subtract"], [238, 3, 1, "", "tan"], [239, 3, 1, "", "tanh"], [240, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[242, 3, 1, "", "all_equal"], [243, 3, 1, "", "arg_names"], [244, 3, 1, "", "array_equal"], [245, 3, 1, "", "arrays_equal"], [246, 3, 1, "", "assert_supports_inplace"], [247, 3, 1, "", "cache_fn"], [248, 3, 1, "", "clip_matrix_norm"], [249, 3, 1, "", "clip_vector_norm"], [250, 3, 1, "", "container_types"], [251, 3, 1, "", "copy_array"], [252, 3, 1, "", "cumprod"], [253, 3, 1, "", "cumsum"], [254, 3, 1, "", "current_backend_str"], [255, 3, 1, "", "default"], [256, 3, 1, "", "einops_rearrange"], [257, 3, 1, "", "einops_reduce"], [258, 3, 1, "", "einops_repeat"], [259, 3, 1, "", "exists"], [260, 3, 1, "", "floormod"], [261, 3, 1, "", "fourier_encode"], [262, 3, 1, "", "gather"], [263, 3, 1, "", "gather_nd"], [264, 3, 1, "", "get_all_arrays_in_memory"], [265, 3, 1, "", "get_min_base"], [266, 3, 1, "", "get_min_denominator"], [267, 3, 1, "", "get_num_dims"], [268, 3, 1, "", "get_referrers_recursive"], [269, 3, 1, "", "has_nans"], [270, 3, 1, "", "indices_where"], [271, 3, 1, "", "inplace_arrays_supported"], [272, 3, 1, "", "inplace_decrement"], [273, 3, 1, "", "inplace_increment"], [274, 3, 1, "", "inplace_update"], [275, 3, 1, "", "inplace_variables_supported"], [276, 3, 1, "", "is_array"], [277, 3, 1, "", "is_ivy_array"], [278, 3, 1, "", "is_ivy_container"], [279, 3, 1, "", "is_native_array"], [280, 3, 1, "", "match_kwargs"], [281, 3, 1, "", "multiprocessing"], [282, 3, 1, "", "num_arrays_in_memory"], [283, 3, 1, "", "one_hot"], [284, 3, 1, "", "print_all_arrays_in_memory"], [285, 3, 1, "", "queue_timeout"], [286, 3, 1, "", "scatter_flat"], [287, 3, 1, "", "scatter_nd"], [288, 3, 1, "", "set_min_base"], [289, 3, 1, "", "set_min_denominator"], [290, 3, 1, "", "set_queue_timeout"], [291, 3, 1, "", "set_tmp_dir"], [292, 3, 1, "", "shape"], [293, 3, 1, "", "shape_to_tuple"], [294, 3, 1, "", "stable_divide"], [295, 3, 1, "", "stable_pow"], [296, 3, 1, "", "supports_inplace"], [297, 3, 1, "", "tmp_dir"], [298, 3, 1, "", "to_list"], [299, 3, 1, "", "to_numpy"], [300, 3, 1, "", "to_scalar"], [301, 3, 1, "", "try_else_none"], [302, 3, 1, "", "unstack"], [303, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[304, 1, 1, "", "GradientTracking"], [306, 3, 1, "", "adam_step"], [307, 3, 1, "", "adam_update"], [308, 3, 1, "", "execute_with_gradients"], [309, 3, 1, "", "gradient_descent_update"], [310, 3, 1, "", "is_variable"], [311, 3, 1, "", "lamb_update"], [312, 3, 1, "", "lars_update"], [313, 3, 1, "", "optimizer_update"], [314, 3, 1, "", "set_with_grads"], [315, 3, 1, "", "stop_gradient"], [316, 3, 1, "", "unset_with_grads"], [317, 3, 1, "", "variable"], [318, 3, 1, "", "variable_data"], [319, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[304, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[321, 3, 1, "", "bilinear_resample"], [322, 3, 1, "", "float_img_to_uint8_img"], [323, 3, 1, "", "gradient_image"], [324, 3, 1, "", "linear_resample"], [325, 3, 1, "", "random_crop"], [326, 3, 1, "", "stack_images"], [327, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[329, 3, 1, "", "conv1d"], [330, 3, 1, "", "conv1d_transpose"], [331, 3, 1, "", "conv2d"], [332, 3, 1, "", "conv2d_transpose"], [333, 3, 1, "", "conv3d"], [334, 3, 1, "", "conv3d_transpose"], [335, 3, 1, "", "depthwise_conv2d"], [336, 3, 1, "", "dropout"], [337, 3, 1, "", "linear"], [338, 3, 1, "", "lstm_update"], [339, 3, 1, "", "multi_head_attention"], [340, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[342, 3, 1, "", "cholesky"], [343, 3, 1, "", "cross"], [344, 3, 1, "", "det"], [345, 3, 1, "", "diagonal"], [346, 3, 1, "", "eigh"], [347, 3, 1, "", "eigvalsh"], [348, 3, 1, "", "inv"], [349, 3, 1, "", "matmul"], [350, 3, 1, "", "matrix_norm"], [351, 3, 1, "", "matrix_power"], [352, 3, 1, "", "matrix_rank"], [353, 3, 1, "", "matrix_transpose"], [354, 3, 1, "", "outer"], [355, 3, 1, "", "pinv"], [356, 3, 1, "", "qr"], [357, 3, 1, "", "slodget"], [358, 3, 1, "", "solve"], [359, 3, 1, "", "svd"], [360, 3, 1, "", "svdvals"], [361, 3, 1, "", "tensordot"], [362, 3, 1, "", "trace"], [363, 3, 1, "", "vecdot"], [364, 3, 1, "", "vector_norm"], [365, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[367, 3, 1, "", "binary_cross_entropy"], [368, 3, 1, "", "cross_entropy"], [369, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[371, 3, 1, "", "clip"], [372, 3, 1, "", "concat"], [373, 3, 1, "", "constant_pad"], [374, 3, 1, "", "expand_dims"], [375, 3, 1, "", "flip"], [376, 3, 1, "", "permute_dims"], [377, 3, 1, "", "repeat"], [378, 3, 1, "", "reshape"], [379, 3, 1, "", "roll"], [380, 3, 1, "", "split"], [381, 3, 1, "", "squeeze"], [382, 3, 1, "", "stack"], [383, 3, 1, "", "swapaxes"], [384, 3, 1, "", "tile"], [385, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[387, 3, 1, "", "fomaml_step"], [388, 3, 1, "", "maml_step"], [389, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[391, 3, 1, "", "all_nested_indices"], [392, 3, 1, "", "copy_nest"], [393, 3, 1, "", "index_nest"], [394, 3, 1, "", "insert_into_nest_at_index"], [395, 3, 1, "", "insert_into_nest_at_indices"], [396, 3, 1, "", "map"], [397, 3, 1, "", "map_nest_at_index"], [398, 3, 1, "", "map_nest_at_indices"], [399, 3, 1, "", "multi_index_nest"], [400, 3, 1, "", "nested_any"], [401, 3, 1, "", "nested_indices_where"], [402, 3, 1, "", "nested_map"], [403, 3, 1, "", "nested_multi_map"], [404, 3, 1, "", "prune_nest_at_index"], [405, 3, 1, "", "prune_nest_at_indices"], [406, 3, 1, "", "set_nest_at_index"], [407, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[409, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[411, 3, 1, "", "multinomial"], [412, 3, 1, "", "randint"], [413, 3, 1, "", "random_normal"], [414, 3, 1, "", "random_uniform"], [415, 3, 1, "", "seed"], [416, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[418, 3, 1, "", "argmax"], [419, 3, 1, "", "argmin"], [420, 3, 1, "", "nonzero"], [421, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[423, 3, 1, "", "unique_all"], [424, 3, 1, "", "unique_counts"], [425, 3, 1, "", "unique_inverse"], [426, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[428, 3, 1, "", "argsort"], [429, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[431, 3, 1, "", "einsum"], [432, 3, 1, "", "max"], [433, 3, 1, "", "mean"], [434, 3, 1, "", "min"], [435, 3, 1, "", "prod"], [436, 3, 1, "", "std"], [437, 3, 1, "", "sum"], [438, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[440, 3, 1, "", "all"], [441, 3, 1, "", "any"]], "ivy.inspection": [[446, 3, 1, "", "add_array_specs"], [447, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[449, 0, 0, "-", "activations"], [452, 0, 0, "-", "converters"], [454, 0, 0, "-", "initializers"], [463, 0, 0, "-", "layers"], [475, 0, 0, "-", "module"], [477, 0, 0, "-", "norms"], [479, 0, 0, "-", "optimizers"], [485, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[450, 1, 1, "", "GEGLU"], [451, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[450, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[451, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[453, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[454, 1, 1, "", "Constant"], [456, 1, 1, "", "FirstLayerSiren"], [457, 1, 1, "", "GlorotUniform"], [454, 1, 1, "", "KaimingNormal"], [459, 1, 1, "", "Ones"], [460, 1, 1, "", "Siren"], [454, 1, 1, "", "Uniform"], [462, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[454, 2, 1, "", "__init__"], [454, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[456, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[457, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[454, 2, 1, "", "__init__"], [454, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[459, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[460, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[454, 2, 1, "", "__init__"], [454, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[464, 1, 1, "", "Conv1D"], [465, 1, 1, "", "Conv1DTranspose"], [466, 1, 1, "", "Conv2D"], [467, 1, 1, "", "Conv2DTranspose"], [468, 1, 1, "", "Conv3D"], [469, 1, 1, "", "Conv3DTranspose"], [470, 1, 1, "", "DepthwiseConv2D"], [471, 1, 1, "", "Dropout"], [472, 1, 1, "", "LSTM"], [473, 1, 1, "", "Linear"], [474, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[465, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[467, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[474, 2, 1, "", "__init__"]], "ivy.stateful.module": [[476, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "build"], [476, 5, 1, "", "build_mode"], [476, 5, 1, "", "built"], [476, 2, 1, "", "check_submod_rets"], [476, 2, 1, "", "get_mod_key"], [476, 2, 1, "", "mod_depth"], [476, 2, 1, "", "mod_height"], [476, 2, 1, "", "mod_with_top_mod_key_chain"], [476, 2, 1, "", "save_weights"], [476, 2, 1, "", "show_mod_in_top_mod"], [476, 2, 1, "", "show_structure"], [476, 2, 1, "", "show_v_in_top_v"], [476, 2, 1, "", "sub_mods"], [476, 2, 1, "", "track_submod_call_order"], [476, 2, 1, "", "track_submod_rets"], [476, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[478, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[478, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[480, 1, 1, "", "Adam"], [481, 1, 1, "", "LAMB"], [482, 1, 1, "", "LARS"], [483, 1, 1, "", "Optimizer"], [484, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[480, 2, 1, "", "__init__"], [480, 2, 1, "", "set_state"], [480, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[481, 2, 1, "", "__init__"], [481, 2, 1, "", "set_state"], [481, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "set_state"], [482, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "set_state"], [483, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "set_state"], [484, 5, 1, "", "state"]], "ivy.stateful.sequential": [[486, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[486, 2, 1, "", "__init__"]], "ivy.verbosity": [[489, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 28, 34, 43, 60], "handler": [0, 43], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 442], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 60], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 45, 60], "arrai": [15, 31, 36, 41, 45], "api": [15, 28, 31, 37, 43, 45, 47, 48], "why": 16, "unifi": [16, 45], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 442], "set": [18, 34, 422], "up": 18, "clone": 18, "ivi": [18, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "build": [20, 43], "doc": 20, "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "debugg": 21, "debug_mod": 22, "set_breakpoint_debug_mod": 23, "set_debug_mod": 24, "set_exception_debug_mod": 25, "unset_debug_mod": 26, "deep": 27, "dive": 27, "navig": 28, "code": 28, "categor": 28, "submodul": 28, "design": [28, 42, 442], "docstr": [29, 30], "exampl": [30, 41], "tan": [30, 238], "roll": [30, 379], "add": [30, 185], "test": [31, 32], "hypothesi": 32, "data": [32, 38, 46, 60, 101, 422, 423, 424, 426], "gener": [32, 241], "self": 32, "consist": 32, "explicit": 32, "test_array_funct": 32, "function": [33, 35, 38, 39, 41, 43, 48, 60], "type": [33, 38, 60, 101], "primari": 33, "composit": 33, "mix": 33, "standalon": 33, "nestabl": [33, 41], "conveni": 33, "wrap": 35, "nativ": 36, "handl": 36, "contain": [37, 46], "instanc": [37, 45], "method": [37, 45, 46], "static": 37, "special": 37, "modul": [38, 39, 47, 475, 476], "argument": [38, 39, 40, 41], "other": [38, 39], "devic": [39, 41, 131], "inplac": 40, "updat": 40, "out": [40, 41], "copi": 40, "dtype": [41, 116], "integ": 41, "sequenc": 41, "block": 43, "framework": [43, 44], "graph": [43, 48], "compil": [43, 48, 79, 80], "class": 45, "oper": [45, 60], "monkei": 45, "patch": 45, "construct": 46, "represent": 46, "recurs": 46, "built": 46, "ins": 46, "access": 46, "save": 46, "load": 46, "comparison": 46, "custom": [46, 60], "us": 46, "case": 46, "compartment": 46, "configur": 46, "network": [46, 48], "weight": 46, "state": [47, 60], "initi": [47, 454], "optim": [47, 479, 483], "transpil": 48, "frontend": 48, "role": 48, "convert": [48, 452], "model": [48, 55, 60], "builder": 50, "ecosystem": 51, "gym": [52, 59], "mech": 53, "memori": [54, 59], "robot": [56, 59], "vision": [57, 59], "extens": [58, 442], "appli": 59, "librari": 59, "mechan": 59, "faq": 60, "mana": 60, "version": 60, "dynam": 60, "size": 60, "shape": [60, 292, 422, 423, 424, 426], "check": 60, "control": 60, "flow": 60, "auto": 60, "differenti": 60, "replica": 60, "parallel": 60, "support": 60, "altern": 60, "structur": 60, "pipelin": 60, "func": 61, "wrapper": 61, "handle_nest": 62, "handle_out_argu": 63, "infer_devic": 64, "infer_dtyp": 65, "inputs_to_ivy_arrai": 66, "inputs_to_native_arrai": 67, "outputs_to_ivy_arrai": 68, "to_native_arrays_and_back": 69, "activ": [71, 449], "gelu": [72, 451], "leaky_relu": 73, "relu": 74, "sigmoid": 75, "softmax": 76, "softplu": 77, "tanh": [78, 239], "constant": 81, "creation": 82, "note": [82, 88], "arang": 83, "asarrai": 84, "empti": 85, "empty_lik": 86, "ey": 87, "from_dlpack": 88, "full": 89, "full_lik": 90, "linspac": 91, "logspac": 92, "meshgrid": 93, "native_arrai": 94, "ones": 95, "ones_lik": 96, "tril": 97, "triu": 98, "zero": [99, 462], "zeros_lik": 100, "as_ivy_dtyp": 105, "as_native_dtyp": 106, "astyp": 107, "broadcast_arrai": 108, "broadcast_to": 109, "can_cast": 110, "closest_valid_dtyp": 111, "convert_dtyp": 112, "default_dtyp": 113, "default_float_dtyp": 114, "default_int_dtyp": 115, "dtype_bit": 117, "finfo": 118, "iinfo": 119, "invalid_dtyp": 120, "is_float_dtyp": 121, "is_int_dtyp": 122, "result_typ": 123, "set_default_dtyp": 124, "set_default_float_dtyp": 125, "set_default_int_dtyp": 126, "unset_default_dtyp": 127, "unset_default_float_dtyp": 128, "unset_default_int_dtyp": 129, "valid_dtyp": 130, "devcloneditem": 133, "devclonedit": 134, "devclonednest": 135, "devdistitem": 136, "devdistit": 137, "devdistnest": 138, "devmapp": 140, "devmappermultiproc": 141, "multidevitem": 143, "multidevit": 144, "multidevnest": 145, "profil": 146, "as_ivy_dev": 147, "as_native_dev": 148, "clear_mem_on_dev": 149, "default_devic": 150, "dev": 151, "dev_clon": 152, "dev_clone_arrai": 153, "dev_clone_it": 154, "dev_clone_nest": 155, "dev_dist": 156, "dev_dist_arrai": 157, "dev_dist_it": 158, "dev_dist_nest": 159, "dev_unifi": 160, "dev_unify_arrai": 161, "dev_unify_it": 162, "dev_unify_nest": 163, "dev_util": 164, "get_all_ivy_arrays_on_dev": 165, "gpu_is_avail": 166, "num_cpu_cor": 167, "num_gpu": 168, "num_ivy_arrays_on_dev": 169, "percent_used_mem_on_dev": 170, "print_all_ivy_arrays_on_dev": 171, "set_default_devic": 172, "set_split_factor": 173, "split_factor": 174, "split_func_cal": 175, "to_dev": 176, "total_mem_on_dev": 177, "tpu_is_avail": 178, "unset_default_devic": 179, "used_mem_on_dev": 180, "elementwis": 181, "ab": 182, "aco": 183, "acosh": 184, "asin": 186, "asinh": 187, "atan": 188, "atan2": 189, "atanh": 190, "bitwise_and": 191, "bitwise_invert": 192, "bitwise_left_shift": 193, "bitwise_or": 194, "bitwise_right_shift": 195, "bitwise_xor": 196, "ceil": 197, "co": 198, "cosh": 199, "divid": 200, "equal": 201, "erf": 202, "exp": 203, "expm1": 204, "floor": 205, "floor_divid": 206, "greater": 207, "greater_equ": 208, "isfinit": 209, "isinf": 210, "isnan": 211, "less": 212, "less_equ": 213, "log": 214, "log10": 215, "log1p": 216, "log2": 217, "logaddexp": 218, "logical_and": 219, "logical_not": 220, "logical_or": 221, "logical_xor": 222, "maximum": 223, "minimum": 224, "multipli": 225, "neg": 226, "not_equ": 227, "posit": 228, "pow": 229, "remaind": 230, "round": 231, "sign": 232, "sin": 233, "sinh": 234, "sqrt": 235, "squar": 236, "subtract": 237, "trunc": 240, "all_equ": 242, "arg_nam": 243, "array_equ": 244, "arrays_equ": 245, "assert_supports_inplac": 246, "cache_fn": 247, "clip_matrix_norm": 248, "clip_vector_norm": 249, "container_typ": 250, "copy_arrai": 251, "cumprod": 252, "cumsum": 253, "current_backend_str": 254, "default": 255, "einops_rearrang": 256, "einops_reduc": 257, "einops_repeat": 258, "exist": 259, "floormod": 260, "fourier_encod": 261, "gather": 262, "gather_nd": 263, "get_all_arrays_in_memori": 264, "get_min_bas": 265, "get_min_denomin": 266, "get_num_dim": 267, "get_referrers_recurs": 268, "has_nan": 269, "indices_wher": 270, "inplace_arrays_support": 271, "inplace_decr": 272, "inplace_incr": 273, "inplace_upd": 274, "inplace_variables_support": 275, "is_arrai": 276, "is_ivy_arrai": 277, "is_ivy_contain": 278, "is_native_arrai": 279, "match_kwarg": 280, "multiprocess": 281, "num_arrays_in_memori": 282, "one_hot": 283, "print_all_arrays_in_memori": 284, "queue_timeout": 285, "scatter_flat": 286, "scatter_nd": 287, "set_min_bas": 288, "set_min_denomin": 289, "set_queue_timeout": 290, "set_tmp_dir": 291, "shape_to_tupl": 293, "stable_divid": 294, "stable_pow": 295, "supports_inplac": 296, "tmp_dir": 297, "to_list": 298, "to_numpi": 299, "to_scalar": 300, "try_else_non": 301, "unstack": 302, "value_is_nan": 303, "gradient": 304, "adam_step": 306, "adam_upd": 307, "execute_with_gradi": 308, "gradient_descent_upd": 309, "is_vari": 310, "lamb_upd": 311, "lars_upd": 312, "optimizer_upd": 313, "set_with_grad": 314, "stop_gradi": 315, "unset_with_grad": 316, "variabl": 317, "variable_data": 318, "with_grad": 319, "imag": 320, "bilinear_resampl": 321, "float_img_to_uint8_img": 322, "gradient_imag": 323, "linear_resampl": 324, "random_crop": 325, "stack_imag": 326, "uint8_img_to_float_img": 327, "layer": [328, 463], "conv1d": [329, 464], "conv1d_transpos": 330, "conv2d": [331, 466], "conv2d_transpos": 332, "conv3d": [333, 468], "conv3d_transpos": 334, "depthwise_conv2d": 335, "dropout": [336, 471], "linear": [337, 341, 473], "lstm_updat": 338, "multi_head_attent": 339, "scaled_dot_product_attent": 340, "algebra": 341, "choleski": 342, "cross": 343, "det": 344, "diagon": 345, "eigh": 346, "eigvalsh": 347, "inv": 348, "matmul": 349, "matrix_norm": 350, "matrix_pow": 351, "matrix_rank": 352, "matrix_transpos": 353, "outer": 354, "pinv": 355, "qr": 356, "slodget": 357, "solv": 358, "svd": 359, "svdval": 360, "tensordot": 361, "trace": 362, "vecdot": 363, "vector_norm": 364, "vector_to_skew_symmetric_matrix": 365, "loss": 366, "binary_cross_entropi": 367, "cross_entropi": 368, "sparse_cross_entropi": 369, "manipul": 370, "clip": 371, "concat": 372, "constant_pad": 373, "expand_dim": 374, "flip": 375, "permute_dim": 376, "repeat": 377, "reshap": 378, "split": 380, "squeez": 381, "stack": 382, "swapax": 383, "tile": 384, "zero_pad": 385, "meta": 386, "fomaml_step": 387, "maml_step": 388, "reptile_step": 389, "nest": 390, "all_nested_indic": 391, "copy_nest": 392, "index_nest": 393, "insert_into_nest_at_index": 394, "insert_into_nest_at_indic": 395, "map": 396, "map_nest_at_index": 397, "map_nest_at_indic": 398, "multi_index_nest": 399, "nested_ani": 400, "nested_indices_wher": 401, "nested_map": 402, "nested_multi_map": 403, "prune_nest_at_index": 404, "prune_nest_at_indic": 405, "set_nest_at_index": 406, "set_nest_at_indic": 407, "norm": [408, 477], "layer_norm": 409, "random": 410, "multinomi": 411, "randint": 412, "random_norm": 413, "random_uniform": 414, "seed": 415, "shuffl": 416, "search": 417, "argmax": 418, "argmin": 419, "nonzero": 420, "where": 421, "depend": [422, 423, 424, 426], "output": [422, 423, 424, 426], "unique_al": 423, "unique_count": 424, "unique_invers": 425, "unique_valu": 426, "sort": [427, 429], "argsort": 428, "statist": 430, "einsum": 431, "max": 432, "mean": 433, "min": 434, "prod": 435, "std": 436, "sum": 437, "var": 438, "util": 439, "all": 440, "ani": 441, "content": 442, "overview": 442, "quick": 442, "start": 442, "roadmap": [442, 448], "citat": 442, "inspect": 445, "add_array_spec": 446, "fn_array_spec": 447, "geglu": 450, "to_ivy_modul": 453, "firstlayersiren": 456, "glorotuniform": 457, "Ones": 459, "siren": 460, "conv1dtranspos": 465, "conv2dtranspos": 467, "conv3dtranspos": 469, "depthwiseconv2d": 470, "lstm": 472, "multiheadattent": 474, "layernorm": 478, "adam": 480, "lamb": 481, "lar": 482, "sgd": 484, "sequenti": [485, 486], "verbos": 488, "cprint": 489}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})